:: StoryTitle
ShipCore


:: StoryData
{
  "ifid": "D6832AD5-BB3D-4A0E-9B6B-48E13E852A70",
  "format": "SugarCube",
  "format-version": "2.36.1",
  "start": "open",
  "tag-colors": {
    "widget": "orange",
    "noreturn": "red",
    "travel": "yellow",
    "event": "orange",
    "lowerdeck": "orange",
    "middeck": "orange",
    "poi": "blue",
    "conversation": "green",
    "DebtEvent": "red",
    "safe": "green",
    "lowerdeckact": "purple",
    "menu": "yellow"
  },
  "zoom": 0.6
}


:: Appearance [noreturn safe menu] {"position":"1000,175","size":"100,100"}
<<appearance>>

In front of the mirror, you pause and take a moment to really look at yourself. The reflection staring back at you feels both familiar and distant, a tangible echo of who you are.

Your name is <<= $player.name >>, a name that resonates with a sense of identity, though the memories attached to it feel blurred.

You study your features carefully. Your hair, <<= '<span style="color:' + $hairColorStyle + ';">' + $hairColorDesc + '</span>'>> and <<= '<span style="color:' + $hairLengthStyle + ';">' + $hairLengthDesc + '</span>'>>, frames your face, giving you a distinct look. Your eyes, <<= '<span style="color:' + $eyeColorStyle + ';">' + $eyeColorDesc + '</span>'>>, seem to hold stories untold, flickering with hints of deeper thoughts and feelings.

Your build, <<= '<span style="color:' + $buildStyle + ';">' + $buildDesc + '</span>'>>, is a testament to the life you've led, whether it be one of physical rigor or something more subdued. You stand <<= '<span style="color:' + $heightStyle + ';">' + $heightDesc + '</span>'>> tall, occupying the space in front of the mirror with a presence that is uniquely yours.

Upon closer inspection, you notice <<= '<span style="color:' + $distinctiveFeatureStyle + ';">' + $distinctiveFeatureDesc + '</span>'>> on your skin, a small but significant mark that adds to your individuality. Your overall appearance, <<= '<span style="color:' + $appearanceStyle + ';">' + $appearanceDesc + '</span>'>>, speaks volumes about the journey you've been on.

You take a deep breath, absorbing the image in the mirror, committing every detail to memory. This reflection is a reminder of who you are and, perhaps, a clue to who you might become.

With a final glance, you turn away from the mirror, ready to continue your journey, carrying the image of yourself along with you.

<<link "Return" $return>><</link>>



:: BiometricsReadout {"position":"1250,50","size":"100,100"}
<<nobr>><!-- BiometricsReadout Passage -->
<!-- Biometrics readout container with shadow and padding -->
<div style="background-color: rgba(0, 0, 0, 0.75); border: 4px solid #444; text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000, 0px -2px 0 #000, 0px 2px 0 #000, -2px 0px 0 #000, 2px 0px 0 #000, 0px 0px 2px #000; padding: 0.4em; margin-bottom: 0em;">
    <span style="color: lightblue; font-weight: bold;">Biometrics Readout</span><br>
    <!-- Health -->
    <!-- Health status with color coding -->
    Health:
    <<if $player.health >= 800>><span style="color: green;">Excellent</span>
    <<elseif $player.health >= 600>><span style="color: lightgreen;">Good</span>
    <<elseif $player.health >= 400>><span style="color: yellow;">Fair</span>
    <<elseif $player.health >= 200>><span style="color: orange;">Poor</span>
    <<else>><span style="color: red;">Critical</span>
    <</if>>
    <!-- Health bar -->
    <div id="healthbarbkg" class="hzbarbkg">
        <div id="healthbar" class="hzbar"></div>
    </div>
    <<run UpdateStatBar($player.health, 1000, "healthbar", false)>>
    <!-- Mood -->
    <!-- Mood status with color coding -->
    Mood:
    <<if $player.mood >= 800>><span style="color: green;">Joyful</span>
    <<elseif $player.mood >= 600>><span style="color: lightgreen;">Happy</span>
    <<elseif $player.mood >= 400>><span style="color: yellow;">Neutral</span>
    <<elseif $player.mood >= 200>><span style="color: orange;">Unhappy</span>
    <<else>><span style="color: red;">Depressed</span>
    <</if>>
    <!-- Mood bar -->
    <div id="moodbarbkg" class="hzbarbkg">
        <div id="moodbar" class="hzbar"></div>
    </div>
    <<run UpdateStatBar($player.mood, 1000, "moodbar", false)>>
        <!-- Power Reserves -->
    <!-- Power Reserves status with color coding -->
    Power Reserves:
    <<if $player.powerReserves >= 800>><span style="color: green;">Full</span>
    <<elseif $player.powerReserves >= 600>><span style="color: lightgreen;">High</span>
    <<elseif $player.powerReserves >= 400>><span style="color: yellow;">Moderate</span>
    <<elseif $player.powerReserves >= 200>><span style="color: orange;">Low</span>
    <<else>><span style="color: red;">Critical</span>
    <</if>>
    <!-- Power Reserves bar -->
    <div id="powerReservesbarbkg" class="hzbarbkg">
        <div id="powerReservesbar" class="hzbar"></div>
    </div>
    <<run UpdateStatBar($player.powerReserves, 1000, "powerReservesbar", false)>>
    <!-- Stress -->
    <!-- Stress status with inverted color coding -->
    Stress:
    <<if $player.stress < 200>><span style="color: green;">Relaxed</span>
    <<elseif $player.stress < 400>><span style="color: lightgreen;">Manageable</span>
    <<elseif $player.stress < 600>><span style="color: yellow;">Stressed</span>
    <<elseif $player.stress < 800>><span style="color: orange;">High</span>
    <<else>><span style="color: red;">Overwhelmed</span>
    <</if>>
    <!-- Stress bar with inverted logic -->
    <div id="stressbarbkg" class="hzbarbkg">
        <div id="stressbar" class="hzbar"></div>
    </div>
    <<run UpdateStatBar(1000 - $player.stress, 1000, "stressbar", true)>>
    <!-- Trauma -->
    <!-- Trauma status with inverted color coding -->
    Trauma:
    <<if $player.trauma < 200>><span style="color: green;">Minimal</span>
    <<elseif $player.trauma < 400>><span style="color: lightgreen;">Moderate</span>
    <<elseif $player.trauma < 600>><span style="color: yellow;">Significant</span>
    <<elseif $player.trauma < 800>><span style="color: orange;">Severe</span>
    <<else>><span style="color: red;">Extreme</span>
    <</if>>
    <!-- Trauma bar with inverted logic -->
    <div id="traumabarbkg" class="hzbarbkg">
        <div id="traumabar" class="hzbar"></div>
    </div>
    <<run UpdateStatBar(1000 - $player.trauma, 1000, "traumabar", true)>>
    <!-- Fatigue -->
    <!-- Fatigue status with inverted color coding -->
    Fatigue:
    <<if $player.fatigue < 200>><span style="color: green;">Energetic</span>
    <<elseif $player.fatigue < 400>><span style="color: lightgreen;">Alert</span>
    <<elseif $player.fatigue < 600>><span style="color: yellow;">Tired</span>
    <<elseif $player.fatigue < 800>><span style="color: orange;">Exhausted</span>
    <<else>><span style="color: red;">Depleted</span>
    <</if>>
    <!-- Fatigue bar with inverted logic -->
    <div id="fatiguebarbkg" class="hzbarbkg">
        <div id="fatiguebar" class="hzbar"></div>
    </div>
    <<run UpdateStatBar(1000 - $player.fatigue, 1000, "fatiguebar", true)>>
    <!-- Filth -->
    <!-- Filth status with inverted color coding -->
    Filth:
    <<if $player.filth < 200>><span style="color: green;">Clean</span>
    <<elseif $player.filth < 400>><span style="color: lightgreen;">Tidy</span>
    <<elseif $player.filth < 600>><span style="color: yellow;">Dirty</span>
    <<elseif $player.filth < 800>><span style="color: orange;">Filthy</span>
    <<else>><span style="color: red;">Squalid</span>
    <</if>>
    <!-- Filth bar with inverted logic -->
    <div id="filthbarbkg" class="hzbarbkg">
        <div id="filthbar" class="hzbar"></div>
    </div>
    <<run UpdateStatBar(1000 - $player.filth, 1000, "filthbar", true)>>
</div>
<!-- End of Biometrics readout container -->
<</nobr>>
<<script>>
// Update the stat bars on passage end
$(document).one(':passageend', function () {
    UpdateStatBar(State.variables.player.health, 1000, "healthbar", false);
    UpdateStatBar(State.variables.player.mood, 1000, "moodbar", false);
    UpdateStatBar(1000 - State.variables.player.stress, 1000, "stressbar", true); // Inverted logic for stress
    UpdateStatBar(1000 - State.variables.player.trauma, 1000, "traumabar", true); // Inverted logic for trauma
    UpdateStatBar(1000 - State.variables.player.fatigue, 1000, "fatiguebar", true); // Inverted logic for fatigue
    UpdateStatBar(State.variables.player.powerReserves, 1000, "powerReservesbar", false);
    UpdateStatBar(1000 - State.variables.player.filth, 1000, "filthbar", true); // Inverted logic for filth
});
<</script>>


:: Black Market Bazaar [travel] {"position":"1700,1200","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerblackmarket.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Black Market Bazaar",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<<mapWidget "images/locs/melt/mor1/lower/map/lowerdeckmarket.jpg">>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Black Market Bazaar</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
Places of Interest:
[[Sneak into The Shrouded Market|ShroudedMarket][$timeadd = 5]]
[[Deal at the Contraband Tech Depot|ContrabandTechDepot][$timeadd = 10]]
[[Hang out at The Rogue's Gallery|RoguesGallery][$timeadd = 5]]
[[Loiter. (00:15)|Black Market Bazaar][$timeadd = 15]]

Travel:
[[Slip back into the shadows of the Lower Decks Hub.|Lower Decks][$timeadd = 5]]
[[(Clockwise) The station's primary outer corridor leads to the station's underbelly.|Forgotten Slums][$timeadd = 5]]
[[(Counter-Clockwise) The station's primary outer corridor leads to the Lower Wharfs.|Lower Wharf][$timeadd = 5]]

Tucked away from the prying sensors of MOR-1's security, the Black Market Bazaar is a den of shadowy dealings and rare commodities. In this corner of the lower decks, the currency is as often trade secrets as it is credits. Vendors offer everything from untraceable weapon mods to forbidden nano-tech, their stands veiled under cloaks of static to evade surveillance.

The corridors here are filled with hushed voices and veiled glances. Deals are struck with a whisper, and trust is a rare commodity bought at a premium. Neon signs flash above makeshift storefronts, offering sanctuary to those that operate in the grey fringes of legality.

In the bazaar, information is as valuable as the goods for sale, and the right word in the right ear can open doors or close them forever. Here, beneath the din of the marketplace, the pulse of MOR-1's underground beats strongest.


:: Cold Storage [poi safe] {"position":"750,425","size":"100,100"}
<<nobr>>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/coldstorage.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Cold Storage",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<<set $LastHomeZone to "Cold Storage">>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Cold Storage</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- The room description is adjusted to color only strategic words for flavor based on the station's economy and danger level -->
The room you awaken in is a capsule of function over form—a stark berth within the arteries of the starport. The metal bench, deriving from the floor itself, is the room's sole concession to <span style="color: lightblue;">rest</span>.

<!-- Economy-based descriptions -->
<<if $worldEconomyScore >= 800>>
    The walls, <span style="color: green;">polished</span> to a high sheen, resonate with the prosperity of the station.
<<elseif $worldEconomyScore >= 600>>
    Soft <span style="color: lightgreen;">illumination</span> from well-placed LEDs casts a calming ambiance.
<<elseif $worldEconomyScore >= 400>>
    A <span style="color: orange;">flicker</span> here and there in the lighting speaks to the occasional scarcity.
<<elseif $worldEconomyScore >= 200>>
    The dim <span style="color: red;">glow</span> from the lights paints a picture of economic downturn.
<<else>>
    Sparse <span style="color: darkred;">lighting</span> gives the compartment a grim aspect.
<</if>>

<!-- Danger level-based descriptions -->
<<if $dangerLevelScore >= 800>>
    The station's outer hull is a <span style="color: blue;">serene</span> backdrop.
<<elseif $dangerLevelScore >= 600>>
    It denotes a <span style="color: lightblue;">moderate</span> level of activity, both tranquil and alert.
<<elseif $dangerLevelScore >= 400>>
    Frequent <span style="color: orange;">flashes</span> of patrolling security craft hint at higher risks.
<<elseif $dangerLevelScore >= 200>>
    The occasional <span style="color: red;">siren</span> and rapid movement of ships suggest heightened danger.
<<else>>
    The sight of <span style="color: darkred;">debris</span> and defensive fortifications speaks to extreme dangers.
<</if>>
<br><br>
If you wanted, you could try to take a nap here in the corner. Won't be comfortable, though.
<!-- Action options --><br>
[[Sleep for 1 hour.|ColdStorageSleep][$player.fatigue -= 150; $timeadd = 60]]<br>
[[Sleep for 2 hours.|ColdStorageSleep][$player.fatigue -= 315; $timeadd = 120]]<br>
[[Sleep for 3 hours.|ColdStorageSleep][$player.fatigue -= 455; $timeadd = 180]]<br><br>
Things to do:<br>
[[Rest and relax for a short while. (00:30)|ColdStorageRest][$timeadd = 30]]<br>
[[Try to wash off with the water reclaimation system. (00:30)|ColdStorageWash][$player.filth -= 150; $timeadd = 30]]<br>
<span class="disabledLink">Access the terminal for news or entertainment. (Currently inoperative)</span><br>
[[Rummage through the lockers. (00:15)|ColdStorageLockers][$timeadd = 15]]<br>
<span class="disabledLink">Prepare a meal. (Facilities unavailable)</span><br>
<br>
<<if $introColdExit == 1>>
Jax has made himself at home, piling up junk and building a nest in the corner of the Cold Storage room. His presence, or maybe some unknown hand of security seems to be keeping this place clear of the normal lower deck riffraff.
You could ask him some questions if you want.
[[Talk to Jax.|JaxChat]]

<</if>><br><br>
<<nobr>>
Travel:<br>
<<if $player.filth > 800>>
    <span class="disabledLink">You feel too dirty to go out right now.</span>
<<else>>
    <<if $introColdExit == 1>>
        <<link "Exit through the door to the Lower Decks.">>
            <<set $timeadd += 5>>
            <<goto "Lower Decks">>
        <</link>>
    <<else>>
        <<link "Exit through the door to the Lower Decks.">>
            <<set $timeadd += 5>>
            <<set $introColdExit = 1>>
            <<goto "JaxIntro">>
        <</link>>
    <</if>>
<</if>>
<</nobr>>
<</nobr>>


:: ColdStorageLockers [safe] {"position":"825,525","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">> <!-- Keep the current area as lowerdecks -->
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/coldstorage.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Cold Storage - Lockers",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="lockersTitleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Rummaging the Lockers</span></h2>
<hr id="lockersTitleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="lockersLocationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="lockersLocationHr" style="margin-top: 5px; margin-bottom: 5px;">


<!-- Random event generator for searching lockers -->
<<set _creditsFound to random(1, 100)>>
<<set _isLucky to _creditsFound <= 30>> <!-- 30% chance to find credits -->
<<set _creditsAmount to random(5, 20)>>
<<set _moodChange to random(5, 10)>> <!-- Random mood boost value -->
<<set _stressChange to random(1, 5)>> <!-- Random stress penalty value -->

<<if _isLucky>>
    <<set $player.credits += _creditsAmount>> <!-- Increase player's credits -->
    <<set $player.mood += _moodChange>> <!-- Increase player's mood -->
    <!-- Narrative for a positive outcome -->
    You manage to find <<print _creditsAmount>> credits in one of the lockers. The small windfall lifts your spirits, the <span style="color: lightgreen;">joy</span> of the unexpected find momentarily warming the <span style="color: lightblue;">chill</span> of the room. Your mood improves as you pocket the credits, feeling a bit more optimistic about your prospects.
    <p><span style="color: green;">+<<print _creditsAmount>> Credits</span> <span style="color: green;">+<<print _moodChange>> Mood</span></p>
<<else>>
    <<set $player.stress -= _stressChange>> <!-- Decrease player's stress -->
    <!-- Narrative for a negative outcome -->
    Despite your thorough search, the lockers yield nothing but <span style="color: darkred;">dust</span> and the <span style="color: grey;">echo</span> of forgotten belongings. The act weighs on you, increasing your <span style="color: orange;">stress</span> with the disheartening silence that follows. You can't help but feel a bit more burdened as you come to terms with the fruitless effort.
    <p><span style="color: red;">-<<print _stressChange>> Stress</span></p>
<</if>>

<!-- Additional narrative to conclude the event -->
<<if _isLucky>>
    As you close the last locker, the sound of its latch clicking shut is a satisfying confirmation of your <span style="color: lightgreen;">success</span>. With a lighter step and a slightly fuller pocket, you prepare to continue your journey through the station, a subtle smile playing on your lips.
<<else>>
    The hollow clang of the final locker door resonates through the area, a stark reminder of the time spent with nothing to show for it. It's time to <span style="color: grey;">move on</span>, leaving the silent guardians of personal histories behind. You shake off the disappointment and refocus on the path ahead, knowing that not every search can end in triumph.
<</if>>

[[Continue.|Cold Storage][$timeadd = 1]]
<</nobr>>


:: ColdStorageRest [safe] {"position":"725,525","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">> <!-- Keep the current area as lowerdecks -->
<<addmins $timeadd>>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/coldstorage.jpg'>>
<<set $location to {
    name: "Meltisar System, MOR-1, Cold Storage - Resting",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="restTitleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Moment of Solitude</span></h2>
<hr id="restTitleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="restLocationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="restLocationHr" style="margin-top: 5px; margin-bottom: 5px;">
<</nobr>>

<!-- Applying fatigue reduction and mood improvement for resting -->
<<set $player.fatigue += 50>> <!-- As higher fatigue means less tired -->
<<set $player.mood += 25>>
<<set $player.stress += 25>> <!-- As higher stress means less stressed -->

In the desolate quiet of Cold Storage, you find a spot to sit away from the prying eyes of the station's denizens. It's not comfortable, but the solitude allows for a moment of rest. You take what you can get, leaning against a storage unit, and let the stillness wash over you. Despite the chill, you manage to <<if $player.stress >= 600>><span style="color: lightgreen;">relax your guard</span><<elseif $player.stress >= 400>><span style="color: yellow;">ease the tension</span><<elseif $player.stress >= 200>><span style="color: orange;">calm your nerves</span><<else>><span style="color: red;">steal a moment's peace</span><</if>>, finding a precious <<if $player.fatigue >= 600>><span style="color: lightgreen;">respite</span><<elseif $player.fatigue >= 400>><span style="color: yellow;">break</span><<elseif $player.fatigue >= 200>><span style="color: orange;">breather</span><<else>><span style="color: red;">escape</span><</if>> from the relentless demands of life aboard the station.

[[Continue.|Cold Storage][$timeadd = 1]]



:: ColdStorageSleep [safe] {"position":"625,525","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">> <!-- Keep the current area as lowerdecks -->
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/coldstorage.jpg'>>
<<set $location to {
    name: "Meltisar System, MOR-1, Cold Storage - Sleeping",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="sleepTitleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Restless Slumber</span></h2>
<hr id="sleepTitleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="sleepLocationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="sleepLocationHr" style="margin-top: 5px; margin-bottom: 5px;">


<<set $player.health += ($timeadd / 60) * 15>> <!-- Sleep improves health slightly -->
<<addmins $timeadd>>
<</nobr>>
The metal bench in Cold Storage is far from the ideal bed, but exhaustion takes its toll, and you succumb to sleep. The cold seeps in as you rest, offering a harsh reminder of the station's indifference to comfort.

You drift into a fitful sleep, the station's ambient noises occasionally pulling you back to a semi-conscious state. It's not much, but it's all the respite Cold Storage affords.

Upon waking, you feel the stiffness in your body from the unforgiving surface, but at least your mind is slightly clearer, and your vitality somewhat restored.

[[Stir from your slumber.|Cold Storage][$timeadd = 1]]



:: ColdStorageWash [safe] {"position":"850,425","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">> <!-- Keep the current area as lowerdecks -->
<<addmins $timeadd>>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/coldstorage.jpg'>>
<<set $location to {
    name: "Meltisar System, MOR-1, Cold Storage - Wash",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="washTitleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Improvised Cleanliness</span></h2>
<hr id="washTitleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="washLocationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="washLocationHr" style="margin-top: 5px; margin-bottom: 5px;">


<!-- Improving player's filth status -->
<<set $player.filth -= 250>> <!-- As higher filth means cleaner -->

<</nobr>>In the utilitarian confines of Cold Storage, you find a repurposed water hose dangling from a maintenance panel. The water is shockingly cold, but it's a small price to pay for cleanliness. You detach the hose, directing the sparse stream into a makeshift basin you've fashioned from the remnants of a broken locker.

The water's chill bites at your skin, but as you wipe away the grime, you feel a sense of <<if $player.filth <= 200>><span style="color: lightgreen;">renewal</span><<elseif $player.filth <= 400>><span style="color: yellow;">refreshment</span><<elseif $player.filth <= 600>><span style="color: orange;">improvement</span><<else>><span style="color: red;">alleviation</span><</if>>. It's a rudimentary setup, yet it serves its purpose well enough. With each pass of your makeshift cloth, you scrub away not just the physical filth but also the weight of the station's oppressive atmosphere.

[[Continue.|Cold Storage][$timeadd = 1]]



:: Consumables [noreturn safe menu] {"position":"1400,175","size":"100,100"}
<<nobr>>
<h2 id="consumablesTitle" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: cyan; font-weight: bold; font-size: 24px;">Consumables</span>
</h2>
<hr id="consumablesDivider" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="consumablesSubTitle" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;">Manage your inventory and boost your stats</span>
</h2>
<hr id="consumablesSubDivider" style="margin-top: 5px; margin-bottom: 20px;">
<br>
As you peruse your collection of high-tech consumables, you ponder which might best aid you in your current predicament.
<br>
<!-- NanoDoc Injector -->
<<if $playerConsumables.nanoDocInjector > 0>>
    [[Consider using the NanoDoc Injector|Consumables][$player.health = 1000; $playerConsumables.nanoDocInjector -= 1; $playerConsumablesTracker.nanoDocInjector += 1]]<br>
    The NanoDoc Injector could knit your wounds and restore vitality with its medical nanobots.<br>
<<else>>
    <span class="disabledLink">NanoDoc Injector not available</span><br>
<</if>>

<!-- Euphorix Vape -->
<<if $playerConsumables.euphorixVape > 0>>
    [[Contemplate the Euphorix Vape's effects|Consumables][$player.mood = 1000; $playerConsumables.euphorixVape -= 1; $playerConsumablesTracker.euphorixVape += 1]]<br>
    Inhaling the Euphorix Vape might envelop you in a haze of euphoria, brightening your outlook.<br>
<<else>>
    <span class="disabledLink">Euphorix Vape not available</span><br>
<</if>>

<!-- Zenith Pulse -->
<<if $playerConsumables.zenithPulse > 0>>
    [[Ponder using the Zenith Pulse|Consumables][$player.stress = Math.max($player.stress - 0, 0); $playerConsumables.zenithPulse -= 1; $playerConsumablesTracker.zenithPulse += 1]]<br>
    Activating the Zenith Pulse could soothe your mind, easing stress with its harmonic vibrations.<br>
<<else>>
    <span class="disabledLink">Zenith Pulse not available</span><br>
<</if>>

<!-- PsycheLock Capsule -->
<<if $playerConsumables.psycheLockCapsule > 0>>
    [[Think about the PsycheLock Capsule|Consumables][$player.trauma = Math.max($player.trauma - 0, 0); $playerConsumables.psycheLockCapsule -= 1; $playerConsumablesTracker.psycheLockCapsule += 1]]<br>
    The PsycheLock Capsule might offer a mental respite, shielding you from haunting memories.<br>
<<else>>
    <span class="disabledLink">PsycheLock Capsule not available</span><br>
<</if>>

<!-- VigorMax Shot -->
<<if $playerConsumables.vigorMaxShot > 0>>
    [[Consider the benefits of a VigorMax Shot|Consumables][$player.fatigue = 0; $playerConsumables.vigorMaxShot -= 1; $playerConsumablesTracker.vigorMaxShot += 1]]<br>
    A dose of VigorMax Shot could rejuvenate you, dispelling weariness with a burst of energy.<br>
<<else>>
    <span class="disabledLink">VigorMax Shot not available</span><br>
<</if>>

<!-- PuriDerm Spray -->
<<if $playerConsumables.puriDermSpray > 0>>
    [[Weigh the use of PuriDerm Spray|Consumables][$player.filth = 0; $playerConsumables.puriDermSpray -= 1; $playerConsumablesTracker.puriDermSpray += 1]]<br>
    A spritz of PuriDerm Spray might leave you spotless, eradicating the filth of the undercity.<br>
<<else>>
    <span class="disabledLink">PuriDerm Spray not available</span><br>
<</if>>

<!-- Energy Cell Boost -->
<<if $playerConsumables.energyCellBoost > 0>>
    [[Debate the merits of an Energy Cell Boost|Consumables][$player.powerReserves = 1000; $playerConsumables.energyCellBoost -= 1; $playerConsumablesTracker.energyCellBoost += 1]]<br>
    Harnessing an Energy Cell Boost could supercharge your systems, replenishing your power reserves.<br>
<<else>>
    <span class="disabledLink">Energy Cell Boost not available</span><br>
<</if>>

<!-- Return Link -->
<<link "Return" $return>><</link>>
<</nobr>>


:: ContrabandTechDepot [poi] {"position":"1825,1200","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerblackmarket/techdepot.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Contraband Tech Depot",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Contraband Tech Depot</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
You have <<=$lowerdecksCyberware>> <span style="color:yellow;">Cyberware</span> units in your lockers.<br>
<p>The Contraband Tech Depot is a neon-lit maze of stalls and workshops, each offering the latest in illegal cyberware enhancements. The air hums with the sound of machinery and the murmur of clandestine deals. Here, the cutting edge of technology is not just a phrase—it's a literal truth etched in chrome and silicon.</p>

<<blackmarketactivity>>


<!-- Actions -->
<<if $player.credits >= 300>>
    [[Buy cyberware (-300 Credits, 01:00)|ContrabandTechDepotBuyCyberware][$player.credits -= 300; $lowerdeckBlackActivity += 300; $timeadd = 60]]<br>
<<else>>
    <span class="disabledLink">Buy cyberware (-300 Credits, 01:00)</span><br>
<</if>>
[[Work as a dealer (01:00)|ContrabandTechDepotWorkDealer][$timeadd = 60]]<br>

<!-- VigorMax Shot -->
<<if $player.credits >= 1000>>
    [[Purchase VigorMax Shot (00:15) 1000 Cr.|ContrabandTechDepot][$player.credits -= 1000; $playerConsumables.vigorMaxShot += 1; $timeadd += 15]]<br>
    "Recharge your energy to maximum levels."<br>
<<else>>
    <span class="disabledLink">Not enough credits for VigorMax Shot</span><br>
<</if>>

<!-- Continue Link -->
[[Return to the Lower Decks.|Black Market Bazaar]]

<!-- Additional Narrative Flavor Text -->
<p>As you navigate through the depot, your senses are assaulted by the sharp tang of ozone and the slick sheen of bio-lubricant. The vendors hawk their wares with a predator's grin, each claiming their illegal mods are the best, the most cutting-edge, the most undetectable. You can't help but wonder how many of these enhancements have been ripped from the bodies of the less fortunate, or how many have been used for unspeakable acts.</p>

<p>Over in a shadowy corner, a cybersurgeon offers a quick install, her hands steady as a rock despite the questionable legality of her practice. Her eyes, enhanced with a metallic sheen, scan you up and down, appraising your potential as a customer—or perhaps as a product. You're reminded that in the Contraband Tech Depot, the line between human and commodity is disturbingly blurred.</p>

<p>Despite the risks, the allure of power that comes with these enhancements is undeniable. You watch as a deal is struck, and a man walks away with a new-found swagger, his gait now assisted by silent, invisible pistons. You can't help but feel a twinge of envy, mixed with a dose of caution. After all, in the world of contraband tech, every upgrade comes with its own set of dangers and debts.</p>
<</nobr>>



:: ContrabandTechDepotBuyCyberware [lowerdeckact] {"position":"1950,1200","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/contrabandtechdepot/techdepotinterior.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Contraband Tech Depot - Buy Cyberware",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $contrabandTechDepotBuyEventsRecord>> <<set $contrabandTechDepotBuyEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $contrabandTechDepotBuyEventsRecord.today != _today>>
    <<set $contrabandTechDepotBuyEventsRecord.today to _today>>
    <<set $contrabandTechDepotBuyEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available cyberware buying events -->
<<for _i to 1; _i <= 10; _i++>>
    <<if not $contrabandTechDepotBuyEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available cyberware buying events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $contrabandTechDepotBuyEventsRecord.triggeredEvents.push(_randomEvent)>>
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Contraband Tech Depot - Buy Cyberware</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The air is thick with the electric scent of ozone and the undercurrent of danger that comes with dealing in forbidden tech. You're here to buy, and the sellers know it, their eyes gleaming with greed and opportunity.</p>

<<switch _randomEvent>>
    <<case 1>> <!-- Cutting-Edge Tech -->
        <p>You've managed to acquire some cutting-edge cyberware. The seller assures you it's top of the line, and the price reflects it. <span class="i-gain">+1 Cyberware</span></p>
        <<set $player.credits += 25>>
        <<creditchange 25 "positive">>
        <<set $lowerdeckBlackActivity += 325>>
        <<set $lowerdecksCyberware += 1>>

    <<case 2>> <!-- Bulk Deal -->
        <p>A seller offers you a bulk deal on some slightly outdated, but still valuable, cyberware. It's a bargain too good to pass up. <span class="i-gain">+2 Cyberware</span></p>
        <<set $player.credits += 50>>
        <<creditchange 50 "positive">>
        <<set $lowerdeckBlackActivity += 650>>
        <<set $lowerdecksCyberware += 2>>

    <<case 3>> <!-- Last Season's Model -->
        <p>You find a deal on last season's model. It may not be the latest, but it'll turn a profit. <span class="i-gain">+1 Cyberware</span></p>
        <<set $player.credits += 30>>
        <<creditchange 30 "positive">>
        <<set $lowerdeckBlackActivity += 330>>
        <<set $lowerdecksCyberware += 1>>

    <<case 4>> <!-- Experimental Tech -->
        <p>An eccentric tinkerer sells you some experimental tech. It's untested, but if it works, it could be worth a fortune. <span class="i-gain">+1 Cyberware</span></p>
        <<set $player.credits += 45>>
        <<creditchange 45 "positive">>
        <<set $lowerdeckBlackActivity += 345>>
        <<set $lowerdecksCyberware += 1>>

    <<case 5>> <!-- High Demand -->
        <p>You've acquired cyberware that's currently in high demand. The price is steep, but so is the potential markup. <span class="i-gain">+1 Cyberware</span></p>
        <<set $player.credits += 40>>
        <<creditchange 40 "positive">>
        <<set $lowerdeckBlackActivity += 340>>
        <<set $lowerdecksCyberware += 1>>

    <<case 6>> <!-- Refurbished Units -->
        <p>You take a chance on some refurbished units. They're a bit of a gamble, but the low price makes it worth the risk. <span class="i-gain">+2 Cyberware</span></p>
        <<set $player.credits += 35>>
        <<creditchange 35 "positive">>
        <<set $lowerdeckBlackActivity += 635>>
        <<set $lowerdecksCyberware += 2>>

    <<case 7>> <!-- Hot Merchandise -->
        <p>The cyberware is hot, and the seller is looking to offload it fast. You take it off their hands for a song. <span class="i-gain">+2 Cyberware</span></p>
        <<set $player.credits += 25>>
        <<creditchange 25 "positive">>
        <<set $lowerdeckBlackActivity += 625>>
        <<set $lowerdecksCyberware += 2>>

    <<case 8>> <!-- Rare Find -->
        <p>You stumble upon a rare piece of cyberware. It's an older model, but a collector's item nonetheless. <span class="i-gain">+1 Cyberware</span></p>
        <<set $player.credits += 50>>
        <<creditchange 50 "positive">>
        <<set $lowerdeckBlackActivity += 350>>
        <<set $lowerdecksCyberware += 1>>

    <<case 9>> <!-- Surplus Stock -->
        <p>A vendor is clearing out surplus stock. The cyberware is standard, but the price is unbeatable. <span class="i-gain">+2 Cyberware</span></p>
        <<set $player.credits += 45>>
        <<creditchange 45 "positive">>
        <<set $lowerdeckBlackActivity += 645>>
        <<set $lowerdecksCyberware += 2>>

    <<case 10>> <!-- Questionable Quality -->
        <p>The cyberware looks a bit questionable, but the seller is persuasive. You decide to take a chance on it. <span class="i-gain">+1 Cyberware</span></p>
        <<set $player.credits += 25>>
        <<creditchange 25 "positive">>
        <<set $lowerdeckBlackActivity += 325>>
        <<set $lowerdecksCyberware += 1>>

    <<default>> <!-- Standard Purchase -->
        <p>You make a standard purchase. Nothing fancy, but it'll do the job. <span class="i-gain">+1 Cyberware</span></p>
        <<set $player.credits += 30>>
        <<creditchange 30 "positive">>
        <<set $lowerdeckBlackActivity += 330>>
        <<set $lowerdecksCyberware += 1>>
<</switch>>

<br><br>
<!-- Continue Link -->
[[Return to the Depot.|ContrabandTechDepot]]
<</nobr>>



:: ContrabandTechDepotWorkDealer [lowerdeckact] {"position":"1925,1075","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/contrabandtechdepot/techdepotinterior.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Contraband Tech Depot - Work as a Dealer",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $contrabandTechDepotWorkEventsRecord>> <<set $contrabandTechDepotWorkEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $contrabandTechDepotWorkEventsRecord.today != _today>>
    <<set $contrabandTechDepotWorkEventsRecord.today to _today>>
    <<set $contrabandTechDepotWorkEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available dealer work events -->
<<for _i to 1; _i <= 10; _i++>>
    <<if not $contrabandTechDepotWorkEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available dealer work events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $contrabandTechDepotWorkEventsRecord.triggeredEvents.push(_randomEvent)>>
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Contraband Tech Depot - Work as a Dealer</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The hustle of the depot is relentless, and as a dealer, you're in the thick of it. You've got to be sharp, quick with numbers, and always ready for the deal. It's a high-stress job, but it pays if you can handle the heat.</p>

<<switch _randomEvent>>
    <<case 1>> <!-- Cutting-Edge Tech -->
        <p>You've managed to acquire some cutting-edge cyberware. The seller assures you it's top of the line, and the price reflects it. <span style="color: green;">+1 Cyberware</span></p>
        <<set $player.credits += 25>>
        <<creditchange 25 "positive">>
        <<set $lowerdeckBlackActivity += 325>>
        <<set $lowerdecksCyberware += 1>>

    <<case 2>> <!-- Bulk Deal -->
        <p>A seller offers you a bulk deal on some slightly outdated, but still valuable, cyberware. It's a bargain too good to pass up. <span style="color: green;">+2 Cyberware</span></p>
        <<set $player.credits += 50>>
        <<creditchange 50 "positive">>
        <<set $lowerdeckBlackActivity += 650>>
        <<set $lowerdecksCyberware += 2>>

    <<case 3>> <!-- Last Season's Model -->
        <p>You find a deal on last season's model. It may not be the latest, but it'll turn a profit. <span style="color: green;">+1 Cyberware</span></p>
        <<set $player.credits += 30>>
        <<creditchange 30 "positive">>
        <<set $lowerdeckBlackActivity += 330>>
        <<set $lowerdecksCyberware += 1>>

    <<case 4>> <!-- Experimental Tech -->
        <p>An eccentric tinkerer sells you some experimental tech. It's untested, but if it works, it could be worth a fortune. <span style="color: green;">+1 Cyberware</span></p>
        <<set $player.credits += 45>>
        <<creditchange 45 "positive">>
        <<set $lowerdeckBlackActivity += 345>>
        <<set $lowerdecksCyberware += 1>>

    <<case 5>> <!-- High Demand -->
        <p>You've acquired cyberware that's currently in high demand. The price is steep, but so is the potential markup. <span style="color: green;">+1 Cyberware</span></p>
        <<set $player.credits += 40>>
        <<creditchange 40 "positive">>
        <<set $lowerdeckBlackActivity += 340>>
        <<set $lowerdecksCyberware += 1>>

    <<case 6>> <!-- Refurbished Units -->
        <p>You take a chance on some refurbished units. They're a bit of a gamble, but the low price makes it worth the risk. <span style="color: green;">+2 Cyberware</span></p>
        <<set $player.credits += 35>>
        <<creditchange 35 "positive">>
        <<set $lowerdeckBlackActivity += 635>>
        <<set $lowerdecksCyberware += 2>>

    <<case 7>> <!-- Hot Merchandise -->
        <p>The cyberware is hot, and the seller is looking to offload it fast. You take it off their hands for a song. <span style="color: green;">+2 Cyberware</span></p>
        <<set $player.credits += 25>>
        <<creditchange 25 "positive">>
        <<set $lowerdeckBlackActivity += 625>>
        <<set $lowerdecksCyberware += 2>>

    <<case 8>> <!-- Rare Find -->
        <p>You stumble upon a rare piece of cyberware. It's an older model, but a collector's item nonetheless. <span style="color: green;">+1 Cyberware</span></p>
        <<set $player.credits += 50>>
        <<creditchange 50 "positive">>
        <<set $lowerdeckBlackActivity += 350>>
        <<set $lowerdecksCyberware += 1>>

    <<case 9>> <!-- Surplus Stock -->
        <p>A vendor is clearing out surplus stock. The cyberware is standard, but the price is unbeatable. <span style="color: green;">+2 Cyberware</span></p>
        <<set $player.credits += 45>>
        <<creditchange 45 "positive">>
        <<set $lowerdeckBlackActivity += 645>>
        <<set $lowerdecksCyberware += 2>>

    <<case 10>> <!-- Questionable Quality -->
        <p>The cyberware looks a bit questionable, but the seller is persuasive. You decide to take a chance on it. <span style="color: yellow;">+1 Cyberware</span></p>
        <<set $player.credits += 25>>
        <<creditchange 25 "positive">>
        <<set $lowerdeckBlackActivity += 325>>
        <<set $lowerdecksCyberware += 1>>

    <<default>> <!-- Standard Purchase -->
        <p>You make a standard purchase. Nothing fancy, but it'll do the job. <span style="color: green;">+1 Cyberware</span></p>
        <<set $player.credits += 30>>
        <<creditchange 30 "positive">>
        <<set $lowerdeckBlackActivity += 330>>
        <<set $lowerdecksCyberware += 1>>
<</switch>>
<br>
<br>

<!-- Continue Link -->
[[Return to the Contraband Tech Depot.|ContrabandTechDepot]]
<</nobr>>



:: DateAndTime {"position":"1000,50","size":"100,100"}
<<nobr>><!-- DateAndTime Passage -->
<div style="background-color: rgba(0, 0, 0, 0.75); /* Semi-transparent black */
    border: 4px solid #444;
    padding: 0.4em;
    text-shadow: -1px -1px 0 #000,  /* Top-left sharp shadow */
                 1px -1px 0 #000,   /* Top-right sharp shadow */
                 -1px 1px 0 #000,   /* Bottom-left sharp shadow */
                 1px 1px 0 #000,    /* Bottom-right sharp shadow */
                 0px -2px 0 #000,   /* Top sharp shadow */
                 0px 2px 0 #000,    /* Bottom sharp shadow */
                 -2px 0px 0 #000,   /* Left sharp shadow */
                 2px 0px 0 #000,    /* Right sharp shadow */
                 0px 0px 2px #000;  /* General soft blur */
    margin-bottom: 0em;"> <!-- Adjust margin as needed -->
    USD: <span style="color: lightblue;"><<date>></span><br>
    Time: <span style="color: lightblue;"><<time24hr>></span>
</div><</nobr>>\


:: DayChange [event safe noreturn] {"position":"1200,325","size":"100,100"}
<<nobr>>
<<if $prevUpdateYear === undefined or $prevUpdateMonth === undefined or $prevUpdateDay === undefined>>
    <<set $prevUpdateYear = $gameDate.getFullYear()>>
    <<set $prevUpdateMonth = $gameDate.getMonth()>>
    <<set $prevUpdateDay = $gameDate.getDate()>>
    <<set $daysSinceLastUpdate = 1>>
<<else>>
    <<set _lastUpdate = new Date($prevUpdateYear, $prevUpdateMonth, $prevUpdateDay)>>
    <<set _currentDate = new Date($gameDate.getFullYear(), $gameDate.getMonth(), $gameDate.getDate())>>
    <<set _timeDiff = _currentDate.getTime() - _lastUpdate.getTime()>>
    <<set $daysSinceLastUpdate = Math.floor(_timeDiff / (1000 * 60 * 60 * 24))>>
    <<set $prevUpdateYear = $gameDate.getFullYear()>>
    <<set $prevUpdateMonth = $gameDate.getMonth()>>
    <<set $prevUpdateDay = $gameDate.getDate()>>
<</if>>

<!-- Rest of your code... -->

<<setBackground setup.ImagePath+'/locs/melt/daychange.jpg'>>

<<set _creditsChange = $player.credits - ($playerPreviousCredits ? $playerPreviousCredits : 0)>>
<<set _debtChange = $player.debt - ($playerPreviousDebt ? $playerPreviousDebt : 0)>>
<<set _debtChangeAbs = _debtChange < 0 ? -_debtChange : _debtChange>>
<<set $playerPreviousCredits to $player.credits>>
<<set $playerPreviousDebt to $player.debt>>

<!-- Display the current day at the top -->
<h2 id="dayChangeHeading" style="margin-top: 10px; margin-bottom: 10px; color: lightblue; font-weight: bold; font-size: 24px;">Day Change: <<= $gameDate.toDateString() >></h2>
<hr id="dayChangeHr" style="margin-top: 5px; margin-bottom: 5px;">

<p style="font-size: 14px;">It has been <<= $daysSinceLastUpdate>> day(s) since the last update.</p>
<</nobr>>\
<<nobr>>
<<if $prevWorldEconomyScore === undefined>> <<set $prevWorldEconomyScore = $worldEconomyScore>><</if>>
<<if $prevDangerLevelScore === undefined>> <<set $prevDangerLevelScore = $dangerLevelScore>><</if>>

<<if $worldEconomyScore > $prevWorldEconomyScore>>
    <p style="color: green;">Reports indicate that the stability of the system economy is increasing.</p>
<<elseif $worldEconomyScore < $prevWorldEconomyScore>>
    <p style="color: red;">Reports indicate that the stability of the system economy is decreasing.</p>
<<else>>
    <p>There has been no significant change in the stability of the system economy.</p>
<</if>>

<<if $dangerLevelScore > $prevDangerLevelScore>>
    <p style="color: green;">The danger level in the system is showing signs of decrease.</p>
<<elseif $dangerLevelScore < $prevDangerLevelScore>>
    <p style="color: red;">The danger level in the system is showing signs of increase.</p>
<<else>>
    <p>There has been no significant change in the danger level of the system.</p>
<</if>>

<<set $worldEconomyScore += either(-10, 10)>>
<<set $dangerLevelScore += either(-10, 10)>>

<<set $prevWorldEconomyScore = $worldEconomyScore>>
<<set $prevDangerLevelScore = $dangerLevelScore>>


<<if $daysSinceLastUpdate > 0>>
    <<set _interestRate = 1.01>>  /* Interest rate of 1% per day */
    <<set _initialDebt = $player.debt>>  /* Store initial debt before applying interest */
    <<set $player.debt *= Math.pow(_interestRate, $daysSinceLastUpdate)>>  /* Apply compound interest */
    <<set _interestCharged = $player.debt - _initialDebt>>  /* Calculate interest charged */
    <<set _totalDebtChange = $player.debt - $playerPreviousDebt>>  /* Calculate total debt change including interest */

<</if>>

<!-- Displaying the interest information to the player -->
<<if _interestCharged > 0>>
    <p>Your debt has accrued interest over <<= $daysSinceLastUpdate>> day(s). A total interest of <span style="color: red;"><<= _interestCharged.toFixed(2)>> Cr.</span> has been added to your debt.</p>
<</if>>


<!-- Display changes in financial balance and total debt -->
<p>A new day dawns in the Meltisar System. Your credit balance has changed by 
<<if _creditsChange >= 0>><span style="color: green;">+<<= _creditsChange>> Cr</span><<else>><span style="color: red;"><<= _creditsChange>> Cr</span><</if>>.</p>

<p>The debt counter shows a total change of 
<<if _totalDebtChange >= 0>><span style="color: red;">+<<= _totalDebtChange.toFixed(2)>> Cr</span><<else>><span style="color: green;">-<<= Math.abs(_totalDebtChange).toFixed(2)>> Cr</span><</if>>, 

and you feel 
<<if $player.debt >= 50000>>the burden of your obligations<<else>>a weight lifting<</if>> as you prepare for the day ahead.</p>
<br>
<<link "Continue" $continue>><</link>>
<</nobr>>


:: DebtEvent [DebtEvent safe] {"position":"1000,325","size":"100,100"}
<<nobr>>
<<setBackground setup.ImagePath+'/ui/crashbackground.jpg'>>
<<script>>
    console.log("We arrived in debt event.");
<</script>>

<<if $debtEventOccurred is undefined>> 
    <<set $debtEventOccurred to false>>
<</if>>

<<if not $debtEventOccurred>> 
    <<set $debtIncurred to Math.abs($player.credits) * 100>> 
    <<set $player.debt += $debtIncurred>> 
    <<set $player.credits to 0>> 

<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: gold; font-weight: bold; font-size: 24px;">Negative Credit Balance</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">

    <<say maincomputer>>"Alert: Your account balance has fallen into the negative. As per station regulations, your debt has been incremented by <<print $debtIncurred.toLocaleString()>> credits to restore balance to zero."<</say>>
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"Wait, that's insane! How can I spend money I don't have? And now I owe how much?!"<</say>>
    <<say maincomputer>>"The system allows for temporary credit advances to ensure uninterrupted service. However, a debt of <span style='color: red;'><<print $debtIncurred.toLocaleString()>></span> credits has been added to your account."<</say>>
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"That's completely messed up. There's got to be a better way to handle this."<</say>>
    <<say maincomputer>>"I apologize for any inconvenience. It is advisable to maintain a positive balance to avoid further debt accumulation."<</say>>
<<else>> 
    <<set $debtIncurred to Math.abs($player.credits) * 100>> 
    <<set $player.debt += $debtIncurred>> 
    <<set $player.credits to 0>> 

    <p>Your smartwatch beeps softly, displaying a new debt alert. Your negative balance of <span style='color: red;'>-<<print Math.abs($player.credits).toLocaleString()>></span> credits has resulted in an additional debt increase of <span style='color: red;'><<print $debtIncurred.toLocaleString()>></span> credits.</p>
<</if>>

<<addmins $timeadd>>
<<updatebar>>
<</nobr>>

<<link "Continue." $nextPassage>><</link>>


:: DebtFreeEvent [DebtEvent safe] {"position":"900,325","size":"100,100"}
<<nobr>>
<<setBackground setup.ImagePath+'/ui/positivebackground.jpg'>>
<<script>>
    console.log("Debt has been cleared.");
<</script>>

<<if $debtCleared is undefined>>
    <<set $debtCleared to true>>
    <<set $player.debt to 0>>

<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: lightgreen; font-weight: bold; font-size: 24px;">Debt Cleared</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">

    <<say maincomputer>>"Congratulations, $player.name. Your debt has been fully repaid. Your credit balance is now positive. How do you plan to proceed with your financial management?"<</say>>
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"It feels like a weight has been lifted off my shoulders. I'll be more careful with my spending and maybe start saving for the future."<</say>>
    <<say maincomputer>>"A prudent decision. If you require financial advice or assistance, do not hesitate to consult the station's financial services."<</say>>
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"Thanks, I'll keep that in mind. For now, I just want to enjoy this moment of freedom."<</say>>
    <<say maincomputer>>"Understood. Enjoy your financial independence, $player.name. Remember, a balanced budget is key to maintaining it."<</say>>

<<else>>
    <<say maincomputer>>"Welcome back, $player.name. It is good to see your account in good standing. How may I assist you today?"<</say>>
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"I'm just here to check my balance and make sure everything's on track."<</say>>
    <<say maincomputer>>"Certainly. Your current balance is positive, and no debt is recorded. Keep up the good financial habits."<</say>>
<</if>>

<<addmins $timeadd>>
<<updatebar>>
<</nobr>>

<<link "Continue." $nextPassage>><</link>>


:: DebugControls {"position":"1575,50","size":"100,100"}
<!-- DebugControls passage containing the debug options -->
<<nobr>>
Combined Difficulty: $combinedDifficultyScore
<strong>Debug Controls:</strong><br>
<<link "IntroFinish">>
	<<set $playerIntro4 to 1>>
	<<set $playerIntro1 to 1>>
	<<set $playerIntro2 to 1>>
	<<set $playerIntro3 to 1>>
    <<set $PlayerIntro2 to 1>>
    <<set $playerIntro5 to 1>>
    <<playerp>>
    <<set $worldEconomyScore to 700>> 
	<<set $dangerLevelScore to 700>>
    <<set $combinedDifficultyScore = ((2000 - $worldEconomyScore - $dangerLevelScore) / 200)>>
<<set $player.debt = Math.max(50000, Math.min(50000000, $combinedDifficultyScore * 2000000))>>
	<<updatebar>>
<</link>>
<<link "Increase Economy">>
    <<set $worldEconomyScore += 100>>
    <<updatebar>>
<</link>>
<<link "Decrease Economy">>
    <<set $worldEconomyScore -= 100>>
    <<updatebar>>
<</link>>
<<link "Increase Danger">>
    <<set $dangerLevelScore += 100>>
    <<updatebar>>
<</link>>
<<link "Decrease Danger">>
    <<set $dangerLevelScore -= 100>>
    <<updatebar>>
<</link>>
<<link "Add Credits">>
    <<set $player.credits += 10000>>
    <<updatebar>>
<</link>>
<<link "Reduce Debt">>
    <<set $player.debt -= 100000>>
    <<updatebar>>
<</link>>
<<link "Advance Time: 1 Hour">>
    <<addmins 60>>
    <<updatebar>>
<</link>>
<<link "Advance Time: 1 Day">>
    <<addmins 1440>>
    <<updatebar>>
<</link>>
<<link "Advance Time: 1 Week">>
    <<addmins 10080>>
    <<updatebar>>
<</link>>
<<link "Advance Time: 1 Year">>
    <<addmins 525600>>
    <<updatebar>>
<</link>>
<<link "BlackMarketIncrease">>
    <<set $lowerdeckBlackActivity += 1000>>
    <<updatebar>>
<</link>>
<<link "BlackMarketReset">>
    <<set $lowerdeckBlackActivity = 0>>
    <<updatebar>>
<</link>>

<<link "Restore Bio">>
    <<set $player.health to 1000>>
    <<set $player.mood to 1000>>
    <<set $player.stress to 1000>>
    <<set $player.trauma to 1000>>
    <<set $player.fatigue to 1000>>
    <<set $player.filth to 1000>>
    <<set $player.powerReserves to 1000>>
    <<updatebar>>
<</link>>
<<link "Crash Bio">>
    <<set $player.health to 10>>
    <<set $player.mood to 10>>
    <<set $player.stress to 10>>
    <<set $player.trauma to 10>>
    <<set $player.fatigue to 10>>
    <<set $player.filth to 10>>
    <<set $player.powerReserves to 10>>
    <<updatebar>>
<</link>>

<<link "Add 1 to all consumables">>
<<set $playerConsumables = {
    'nanoDocInjector': 0,
    'euphorixVape': 0,
    'zenithPulse': 0,
    'psycheLockCapsule': 0,
    'vigorMaxShot': 0,
    'puriDermSpray': 0,
    'energyCellBoost': 0
}>>
<<set $playerConsumablesTracker = {
    'nanoDocInjector': 0,
    'euphorixVape': 0,
    'zenithPulse': 0,
    'psycheLockCapsule': 0,
    'vigorMaxShot': 0,
    'puriDermSpray': 0,
    'energyCellBoost': 0
}>>
    <<set $playerConsumables.nanoDocInjector += 1>>
    <<set $playerConsumables.euphorixVape += 1>>
    <<set $playerConsumables.zenithPulse += 1>>
    <<set $playerConsumables.psycheLockCapsule += 1>>
    <<set $playerConsumables.vigorMaxShot += 1>>
    <<set $playerConsumables.puriDermSpray += 1>>
    <<set $playerConsumables.energyCellBoost += 1>>
    <<updatebar>>
<</link>>
[[testmenu|main menu]]
<</nobr>>


:: Detention and Interrogation [poi] {"position":"2625,1825","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">><<setBackground setup.ImagePath+'/locs/melt/mor1/mid/middetention.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Detention and Interrogation",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Detention and Interrogation</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
Places of Interest:
There is nothing to do here at the moment.

Travel:

The Detention and Interrogation sector of MOR-1 is a place many fear, but few see. The walls here are thick, designed to muffle the sounds within. Stark lighting casts harsh shadows, and the air carries a chill that has little to do with temperature control.

Security officers lead detainees through reinforced doors into soundproofed rooms. The only decorations are the unyielding restraints and the steel tables where much of the station's darker business is conducted — extracting information by whatever means necessary.

[[Return to the Security Command Center.|Security Command Center][$timeadd = 5]]

This is a dead end by design, a place meant for inquisition and containment. There are no other exits, only the way back to the command hub from which all surveillance and security thread together in the ever-watchful eyes of MOR-1's Security Command Center.


:: DocksideFabricateScrap [lowerdeckact] {"position":"1550,650","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/docksidefabricator.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Dockside Fabricator - Process Scrap",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Dockside Fabricator - Process Scrap</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<!-- Manual processing of scrap into parts -->
<p>You have $lowerdecksScrap <span style="color:orange;">Scrap</span>, $lowerdecksParts <span style="color:lightgreen;">Parts</span>, and $lowerdecksCyberware <span style="color:yellow;">Cyberware</span> in the lockers.</p>
You stand before the manual processing station, where scrap can be turned into valuable parts. The conversion rate is 2 scrap to 1 part. You can process scrap in batches, dedicating time to oversee the transformation.<br><br>

The hum of machinery fills the air as you enter the fabricator room. Displays blink with the latest readouts, showing the current stockpile in the fabricator:<br>

<span style="color:lightgreen;">Parts</span> Available: $lowerdecksFabricatorHopperParts available.<br>
<span style="color:orange;">Scrap</span> Material: $lowerdecksFabricatorHopperScrap available.<br>
<span style="color:yellow;">Cyberware</span> Enhancements: $lowerdecksCyberware available.<br>

<br>
You take a moment to assess the resources at your disposal, contemplating your next move in this mechanical symphony.
<br><br>

[[Loiter near your fabricator.  (00:30)|DocksideFabricateScrap][$timeadd = 30]]<br>
[[Head back to the main floor.|DocksideFabricator][$timeadd = 5]]
<br>
<!-- Check if player has enough scrap for manual processing -->
<<if $lowerdecksScrap >= 10>> <!-- Check if player has at least 10 scrap -->
    [[Process 10 scrap into 5 parts. (01:00)|DocksideFabricateScrap][$lowerdecksScrap -= 10; $lowerdecksParts += 5; $timeadd = 60]]<br>
<<else>>
    <span class="disabledLink">Process 10 scrap into 5 parts. (01:00)</span><br>
<</if>>

<<if $lowerdecksScrap >= 20>> <!-- Check if player has at least 20 scrap -->
    [[Process 20 scrap into 10 parts. (02:00)|DocksideFabricateScrap][$lowerdecksScrap -= 20; $lowerdecksParts += 10; $timeadd = 120]]<br>
<<else>>
    <span class="disabledLink">Process 20 scrap into 10 parts. (02:00)</span><br>
<</if>>

<<if $lowerdecksScrap >= 30>> <!-- Check if player has at least 30 scrap -->
    [[Process 30 scrap into 15 parts. (03:00)|DocksideFabricateScrap][$lowerdecksScrap -= 30; $lowerdecksParts += 15; $timeadd = 180]]<br>
<<else>>
    <span class="disabledLink">Process 30 scrap into 15 parts. (03:00)</span><br>
<</if>>
<br>
<!-- Automated fabricator system interaction -->
Below the manual station, you notice the sleek interface of the automated fabricator system. It promises to streamline the process, but it seems to require some setup.
<br><<if not $DocksideAutoFabricatorState>> <<set $DocksideAutoFabricatorState = "none">><</if>>
<<switch $DocksideAutoFabricatorState>>
    <<case "none">>
        [[Look at the Automated Fabricator Manual. (00:15)|DocksideFabricatorManual][$timeadd = 15; $DocksideAutoFabricatorState = "lookedAtManual"]]<br>
<<case "lookedAtManual">>
    <!-- Input Scrap into the Fabricator -->
    <<if $lowerdecksScrap >= 10>>
        [[Input 10 Scrap into the Automated Fabricator. (00:15)|DocksideFabricateScrap][$lowerdecksScrap -= 10; $lowerdecksFabricatorHopperScrap += 10; $timeadd = 15]]<br>
    <<else>>
        <span class="disabledLink">Input 10 Scrap into the Automated Fabricator. (00:15)</span><br>
    <</if>>
    <<if $lowerdecksScrap >= 100>>
        [[Input 100 Scrap into the Automated Fabricator. (00:15)|DocksideFabricateScrap][$lowerdecksScrap -= 100; $lowerdecksFabricatorHopperScrap += 100; $timeadd = 15]]<br>
    <</if>>
    <<if $lowerdecksScrap >= 1000>>
        [[Input 1000 Scrap into the Automated Fabricator. (00:15)|DocksideFabricateScrap][$lowerdecksScrap -= 1000; $lowerdecksFabricatorHopperScrap += 1000; $timeadd = 15]]<br>
    <</if>>

    <!-- Collect Parts from the Fabricator -->
    <<if $lowerdecksFabricatorHopperParts > 0>>
        [[Collect Parts from the Fabricator. (00:15)|DocksideFabricateScrap][$lowerdecksParts += $lowerdecksFabricatorHopperParts; $lowerdecksFabricatorHopperParts = 0; $timeadd = 15]]<br>
    <<else>>
        <span class="disabledLink">Collect Parts from the Fabricator. (00:15)</span><br>
    <</if>>

    <!-- Pay Energy Fees for Fabrication -->
    <<if $player.credits >= 1000>>
        [[Pay Energy Fees for Fabrication. (00:15) Cr 1000|DocksideFabricateScrap][$player.credits -= 1000; $lowerdecksEnergyFeeCredits += 1000; $timeadd = 15]]<br>
    <<else>>
        <span class="disabledLink">Pay Energy Fees for Fabrication. (00:15) Cr 1000</span><br>
    <</if>>

    <!-- Install Cyberware to Overclock Fabricator -->
    <<if $lowerdecksCyberware >= 10>>
        [[Install 10 Cyberware to Overclock Fabricator. (00:30)|DocksideFabricateScrap][$lowerdecksCyberware -= 10; $lowerdecksFabricatorCyberware += 10; $timeadd = 30]]<br>
    <<else>>
        <span class="disabledLink">Install 10 Cyberware to Overclock Fabricator. (00:30)</span><br>
    <</if>>
    <<if $lowerdecksCyberware >= 100>>
        [[Install 100 Cyberware to Overclock Fabricator. (00:30)|DocksideFabricateScrap][$lowerdecksCyberware -= 100; $lowerdecksFabricatorCyberware += 100; $timeadd = 30]]<br>
    <</if>>
    <<if $lowerdecksCyberware >= 1000>>
        [[Install 1000 Cyberware to Overclock Fabricator. (00:30)|DocksideFabricateScrap][$lowerdecksCyberware -= 1000; $lowerdecksFabricatorCyberware += 1000; $timeadd = 30]]<br>
    <</if>>
    [[Look at the Automated Fabricator Manual. (00:15)|DocksideFabricatorManual][$timeadd = 15; $DocksideAutoFabricatorState = "lookedAtManual"]]<br>
<</switch>>


<!-- Display current status of the automated fabricator -->
<<if $DocksideAutoFabricatorState is "lookedAtManual">>
    <br>
    Current Fabricator Status:<br>
    Scrap in Hoppers: <<= $lowerdecksFabricatorHopperScrap >><br>
    Parts Waiting to be Retrieved: <<= $lowerdecksFabricatorHopperParts >><br>
    Energy Fee Credits Stocked: <<= $lowerdecksEnergyFeeCredits >><br>
    Cyberwares Installed in Fabricator: <<= $lowerdecksFabricatorCyberware >>
<</if>><</nobr>>


:: DocksideFabricator [poi] {"position":"1425,525","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/docksidefabricator.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Dockside Fabricator",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Dockside Fabricator</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>><<nobr>>
<<if not $DocksideFabricatorState>> <<set $DocksideFabricatorState = "none">><</if>>
<</nobr>>
Things to do:
<<nobr>><<switch $DocksideFabricatorState>>
    <<case "none">>
        [[Inquire about services. (00:15)|DocksideInquire][$timeadd = 15; $DocksideFabricatorState = "inquired"]]
    <<case "inquired">>
        <<if $player.credits >= 12500>> <!-- Check for sufficient credits -->
            [[Purchase services. (00:30) Cr 12500|DocksidePurchase][$player.credits -= 12500; $DocksideFabricatorState = "purchased"; $timeadd = 30]]
        <<else>> <!-- Option to purchase services is grayed out if not enough credits -->
            <span class="disabledLink">Purchase services. (00:30
Requires 2500 credits)</span>
        <</if>>
    <<case "purchased">>
        [[Fabricate Scrap. (00:15)|DocksideFabricateScrap][$timeadd = 15]]<br>
        [[Purchase Scrap. (00:15)|DocksidePurchaseScrap][$timeadd = 15]]<br>
        [[Sell Parts. (00:15)|DocksideSellParts][$timeadd = 15]]<br>
        [[Talk to Management. (00:30)|DocksideManagement][$timeadd = 30]]
<</switch>><</nobr>>

Travel:
[[Return to the bustling activity of the Lower Wharf.|Lower Wharf][$timeadd = 5]]

The Dockside Fabricator is a hub of activity, where the clang of machinery and the hiss of welding torches create a symphony of industry. Here, raw materials are transformed into essential parts, and the air is thick with the scent of molten metal and machine oil.

Technicians and engineers move with purpose, their hands guiding the fabricators with practiced ease. Above the din, managers oversee operations from their perches, their sharp eyes missing nothing. It's a place of creation and commerce, where the right services can turn the tide of a spacer's fortunes.



:: DocksideFabricatorBulkInquiry [lowerdeckact] {"position":"1700,400","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/docksidefabricator.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Dockside Fabricator - Managerial Office",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Dockside Fabricator - Managerial Office</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

You step into the managerial office, a space that exudes efficiency and order. The office overlooks the vast expanse of the fabrication floor, where machines and workers are in constant, harmonious motion. Behind a desk that seems to command the room, Lucas Radiz greets you with a knowing smile, the mark of a man who understands the ebb and flow of industry.
<br><br>
<<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"Welcome! I'm Lucas Radiz, overseeing the Dockside Fabricator operations. If you're in need of substantial quantities, you've come to the right place. We cater to businesses and shippers that require large, regular shipments of parts."<</say>>
<br>
You lean in, intrigued by the scale of operations he's suggesting.
<br><br>
<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"What kind of volume are we talking about?"<</say>>
<br>
Lucas gestures towards a series of charts displaying shipping schedules and volumes.
<br><br>
<<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"For our bulk clients, we start with minimum shipments of 10,000 parts per week, delivered to the warehouse of your choice. It's a seamless process designed for those who mean serious business."<</say>>
<br>
You balk at the numbers, doing the quick math in your head.
<br><br>
<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"That's... that's over a million credits' worth of parts!"<</say>>
<<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>Lucas laughs heartily, the sound echoing off the walls. "Indeed, it is! The fabricator license you're familiar with is just one aspect of our operations—small scale. When you're ready to run a corporation, come and see me. We'll talk numbers that'll make your head spin."<</say>>
<br>
You nod, the prospect both daunting and exhilarating.
<br><br>
<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"I'll keep that in mind. Thanks for the insight, Lucas."<</say>>
<br>
Lucas gives you a final nod as you turn to leave, the sounds of productivity filling the air once more as you make your way back to the fabrication floor.
<br>
<</nobr>>
<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>
    [["Understood. I'll be back when I'm ready."|DocksideFabricator]]
<</say>>



:: DocksideFabricatorManual [lowerdeckact] {"position":"1550,775","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/docksidefabricator.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Dockside Fabricator - Automated Fabricator Manual",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Automated Fabricator Manual</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

You open the manual to the automated fabricator system, a series of holographic pages that detail the operation and maintenance of the machinery.

<h3>Scrap Input and Parts Production</h3>
The automated fabricator can process <span style="color:orange;">scrap</span> into <span style="color:lightgreen;">parts</span> at a fixed rate. You may input scrap into the hoppers, which will then be automatically converted into parts. The base production rate is <span style="color:lightblue;">10 scrap to 5 parts every 15 minutes</span>.

<h3>Overclocking with Cyberware</h3>
To increase production speed, you can install <span style="color:yellow;">cyberware</span> into the fabricator. Each set of cyberware units installed will overclock the fabricator, increasing the production rate. The production multiplier increases as follows:<br>
<br>
- 1-9 cyberware installed: 2x speed (20 scrap to 10 parts every 15 minutes)<br>
- 10-199 cyberware installed: 3x speed (30 scrap to 15 parts every 15 minutes)<br>
- 200-3999 cyberware installed: 4x speed (40 scrap to 20 parts every 15 minutes)<br>
- 4000-7999 cyberware installed: 5x speed (50 scrap to 25 parts every 15 minutes)<br>
- 8000-31999 cyberware installed: 6x speed (60 scrap to 30 parts every 15 minutes)<br>
- 32000-63999 cyberware installed: 7x speed (70 scrap to 35 parts every 15 minutes)<br>
- 64000-127999 cyberware installed: 8x speed (80 scrap to 40 parts every 15 minutes)<br>
- 128000-255999 cyberware installed: 9x speed (90 scrap to 45 parts every 15 minutes)<br>
- 256000+ cyberware installed: 10x speed (100 scrap to 50 parts every 15 minutes)<br>
<br>
Be aware that cyberware <span style="color:red;">degrades</span> over time, losing one unit per day, regardless of whether the fabricator is running.


<h3>Energy Fees</h3>
The fabricator requires energy to operate, incurring a fee of <span style="color:red;">1 credit per minute</span>. You can input energy fees in increments of <span style="color:lightblue;">1000 credits</span> at a time. This fee is charged continuously, even when the fabricator is not actively producing parts.

<h3>Parts Collection</h3>
Once parts are produced, you can request <span style="color:purple;">service drones</span> to transport them to your locker. For security reasons, this action must be initiated manually at the automated fabricator interface.

<h3>Maintenance</h3>
Please note that both the energy fee and cyberware degradation occur regardless of the fabricator's operational status. Regular maintenance and monitoring are recommended to ensure optimal performance.
<br>
[[Return to the Fabricator|DocksideFabricateScrap]]
<</nobr>>



:: DocksideInquire [lowerdeckact] {"position":"1325,400","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/docksidefabricator.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Dockside Fabricator - Inquiries",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Dockside Fabricator - Inquiries</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">


<<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"Welcome to Dockside Fabricator, spacer. I'm Lucas Radiz, the manager of this fine establishment. Are you interested in our fabrication services? For a one-time license fee of <span style="color:red;">12,500 credits</span>, you can fabricate scrap, purchase materials, and sell parts right here."<</say>>

<<set $enoughCredits = $player.credits >= 12500>>

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"<span style="color:red;">12,500 credits</span>? That's quite a sum. Why so expensive?"<</say>>

<<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"Running a fabricator isn't cheap—energy costs, maintenance, and not to mention the skilled technicians we employ to keep things going. You can buy scrap at competitive rates, fabricate it into valuable parts, and sell for a profit, even with the fee. If you have a Lockbox Hub subscription, you can store it all in your locker if you want to try your luck at trading even."<</say>>

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>\
<<if $enoughCredits>>\
    "I do have enough, but I am going to need to think about it."
<<else>>\
    "It does sound like a good opportunity, but I'll need to get the credits together first."
<</if>><</say>>

<p>You take a moment to step back from the conversation and observe the bustling activity of the Dockside Fabricator. The air is alive with the electric hum of machinery and the rhythmic dance of sparks from welding torches. Workers in heavy aprons move with deliberate precision, their hands guiding the complex machinery as they transform raw materials into intricate components. The scent of heated metal and ozone fills the space, a testament to the ceaseless production that powers the station's economy.</p>

<<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"Take your time, no rush. I realize its a hefty fee for most down here on the Lower Decks. There's also a fee each time you use the fabricator, but it isn't that much. The volume we deal with here makes up for it."<</say>>

<p>As you watch a sheet of scrap being fed into a fabricator, it's reshaped and emerges as a sleek panel, ready for use. It's a process of creation, almost alchemical in its transformation. You ponder the potential of having such resources at your fingertips. The cost is significant, but the ability to craft and trade with such efficiency could open new avenues for profit and self-reliance beyond scavenging through lockers or digging through trash.</p>

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>\
<<if $enoughCredits>>
    [[Proceed with the purchase. Cr 12500|DocksidePurchase][$player.credits -= 12500; $DocksideFabricatorState = "purchased"; $timeadd = 30]]<br>
<<else>>
    [[I'll earn the credits and come back.|DocksideFabricator][$timeadd = 1]]<br>
<</if>>
[["I'll think about it. Thanks for the information."|DocksideFabricator][$timeadd = 1]]<br>
[["I'm not convinced it's the right move for me. I'll pass."|Lower Wharf][$timeadd = 5]]<br>
<</say>><</nobr>>


:: DocksideManagement [lowerdeckact] {"position":"1575,375","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/docksidefabricator.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Dockside Fabricator - Management",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<run _maxStat = Math.max($docksideStats.partsFabricated, $docksideStats.scrapBought, $docksideStats.partsSold)>>
<<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Dockside Fabricator - Management</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

As you step away from the industrious hum of the fabrication floor, the door to the management office opens with a hushed, almost reverent ease. The air inside offers a cool sanctuary, a stark contrast to the sweltering heat of active machinery. It carries a <<if $worldEconomyScore < 300>><span style="color:darkred;">stifling</span><<elseif $worldEconomyScore < 500>><span style="color:orange;">tentative</span><<elseif $worldEconomyScore < 700>><span style="color:lightgreen;">hopeful</span><<else>><span style="color:darkgreen;">vibrant</span><</if>> aroma, a reflection of the station's economic heartbeat. Holographic displays cast a <<if $worldEconomyScore < 300>><span style="color:darkred;">faint red</span><<elseif $worldEconomyScore < 500>><span style="color:orange;">warm orange</span><<elseif $worldEconomyScore < 700>><span style="color:lightgreen;">gentle green</span><<else>><span style="color:darkgreen;">rich emerald</span><</if>> glow, flickering with the fluctuations of interstellar trade and commerce. The office itself is a bastion of order, its sleek design and meticulous arrangement a testament to the precision required to navigate the complex waters of the galactic economy.



<br>
<<if $docksideStats.partsFabricated + $docksideStats.scrapBought + $docksideStats.partsSold >= 1000>>
    <<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"Ah, the star client graces us with their presence!" His smile is as wide as the profit margins he imagines you're reaping.<</say>>
<<elseif $docksideStats.partsFabricated + $docksideStats.scrapBought + $docksideStats.partsSold >= 500>>
    <<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"Good to see you again! I trust the fabricator has been keeping you busy?" There's a warm familiarity in his tone, a recognition of your growing presence in the docks.<</say>>
<<else>>
    <<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"Ah, yes, I remember you. How are the facilities treating you?"<</say>>
<</if>>


<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>\
<<if _maxStat == 0>>\
    "I'm still checking things out, getting a feel for how everything works."
<<elseif $docksideStats.partsFabricated is _maxStat>>\
    "I've been making good use of the fabricator. It's been great for putting together parts."
<<elseif $docksideStats.scrapBought is _maxStat>>\
    "The scrap purchasing has been invaluable. I've been able to acquire what I need."
<<else>>\
    "Selling parts here has been going well. I'm pleased with the turnover."
<</if>><</say>>

<<if _maxStat == 0>>
    <<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"Take all the time you need to get acquainted with our services. If you have any questions or need some tips, don't hesitate to ask. We're here to help you make the most of your time here."<</say>>
<<elseif $docksideStats.partsFabricated is _maxStat>>
    <<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"Fantastic! There's nothing quite like seeing raw materials transformed into something new and useful. If you're looking to expand your production or need advice on advanced fabrication techniques, just let me know."<</say>>
<<elseif $docksideStats.scrapBought is _maxStat>>
    <<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"That's the spirit! A steady supply of scrap is the backbone of any successful operation. If you're ever in need of larger quantities or specific types of materials, we can arrange that for you."<</say>>
<<else>>
    <<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"Excellent to hear that you're turning a profit. Remember, we're always looking for quality parts, so keep the goods coming. And if you're interested in special deals or exclusive buyer networks, I'm your man."<</say>>
<</if>>


<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>\
[[I'd like to inquire about bulk transactions.|DocksideFabricatorBulkInquiry][$timeadd = 1]]<br>
[[Nothing right now, thanks.|DocksideFabricator][$timeadd = 1]]
<</say>><</nobr>>


:: DocksidePurchase [lowerdeckact] {"position":"1450,375","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/docksidefabricator.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Dockside Fabricator - Services Purchased",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Dockside Fabricator - Services Purchased</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<</nobr>>

<<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"Excellent decision, spacer. Let me show you around your new domain of creation. You'll see, it's more than just machines and metal—it's potential."<</say>>

Lucas guides you past the threshold where the public area ends and the heart of the fabricator begins. The space is a hive of activity, with machines of all sizes whirring and clicking in a mechanical symphony. Overhead, a network of conveyor belts moves parts to and fro, a testament to the organized chaos that is the lifeblood of this place.

<<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"Here's the main fabrication floor. You'll have access to these stations for your projects. We keep our equipment state-of-the-art, recalibrated daily for precision. You won't find a finer setup on this side of the sector."<</say>>

You can't help but be impressed by the array of fabricators, each humming with the promise of creation. Lucas points out a terminal where orders are placed, and a collection bin where the finished products can be retrieved. It's all incredibly efficient, and you begin to understand the cost of entry.

A side door leads to a quieter room lined with lockers and benches. Lucas explains that this is where clients can store materials or take a break. The lockers are sturdy, designed to keep valuable scrap and parts secure.

<<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"Your materials will be safe here, and you can access them any time. The service drones will store or fetch them as needed from the Lockbox Hub."<</say>>

As Lucas's tour concludes, he hands you a data slate with your access codes and a map of the facility. The weight of the slate in your hand feels like a key to a new chapter in your journey.

<<say 'Lucas Radiz' setup.ImagePath+'/characters/minor/lucasradiz.jpg'>>"If you need any assistance, my team and I are always on hand. We're here to ensure everything runs smoothly for you. It's what we get paid for, after all."<</say>>

With a final nod, Lucas leaves you to absorb the sights and sounds of your new enterprise. The fabricators continue their work, indifferent to your presence but awaiting your command.

[[Continue.|DocksideFabricator][$timeadd = 5]]



:: DocksidePurchaseScrap [lowerdeckact] {"position":"1575,500","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/docksidefabricator.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Dockside Fabricator - Purchase Scrap",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Purchase Scrap</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<</nobr>>
<<nobr>>
You've purchased <<=$docksideStats.scrapBought>> scrap here so far.<br>
You stand before the scrap purchasing terminal, a list of quantities and prices displayed on the screen. The cost of scrap here is 50 credits per unit. How much are you willing to purchase?<br>

<<set _scrapCost to 50>> <!-- Set the cost per unit of scrap -->

<<if $player.credits >= (_scrapCost * 10)>>
    [[Buy 10 scrap for 500 credits.|DocksideFabricator][$player.credits -= (_scrapCost * 10); $lowerdecksScrap += 10; $docksideStats.scrapBought +=10; $timeadd = 1]]<br>
<<else>>
    <span class="disabledLink">Buy 10 scrap for 500 credits. (Not enough credits)</span><br>
<</if>>

<<if $player.credits >= (_scrapCost * 25)>>
    [[Buy 25 scrap for 1250 credits.|DocksideFabricator][$player.credits -= (_scrapCost * 25); $lowerdecksScrap += 25; $docksideStats.scrapBought +=25; $timeadd = 1]]<br>
<<else>>
    <span class="disabledLink">Buy 25 scrap for 1250 credits. (Not enough credits)</span><br>
<</if>>

<<if $player.credits >= (_scrapCost * 50)>>
    [[Buy 50 scrap for 2500 credits.|DocksideFabricator][$player.credits -= (_scrapCost * 50); $lowerdecksScrap += 50; $docksideStats.scrapBought +=50; $timeadd = 1]]<br>
<<else>>
    <span class="disabledLink">Buy 50 scrap for 2500 credits. (Not enough credits)</span><br>
<</if>>

<<if $player.credits >= (_scrapCost * 75)>>
    [[Buy 75 scrap for 3750 credits.|DocksideFabricator][$player.credits -= (_scrapCost * 75); $lowerdecksScrap += 75; $docksideStats.scrapBought +=75; $timeadd = 1]]<br>
<<else>>
    <span class="disabledLink">Buy 75 scrap for 3750 credits. (Not enough credits)</span><br>
<</if>>

<<if $player.credits >= (_scrapCost * 100)>>
    [[Buy 100 scrap for 5000 credits.|DocksideFabricator][$player.credits -= (_scrapCost * 100); $lowerdecksScrap += 100; $docksideStats.scrapBought +=100; $timeadd = 1]]<br>
<<else>>
    <span class="disabledLink">Buy 100 scrap for 5000 credits. (Not enough credits)</span><br>
<</if>>

<<if $player.credits >= (_scrapCost * 100)>>
    [[Buy 1000 scrap for 50000 credits.|DocksideFabricator][$player.credits -= (_scrapCost * 100); $lowerdecksScrap += 1000; $docksideStats.scrapBought +=1000; $timeadd = 1]]<br>
<<else>>
    <span class="disabledLink">Buy 1000 scrap for 50000 credits. (Not enough credits)</span><br>
<</if>>

[[Inquire about bulk purchases.|DocksideFabricatorBulkInquiry][$timeadd = 1]]<br>

[[Reconsider.|DocksideFabricator][$timeadd = 5]]
<</nobr>>



:: DocksideSellParts [lowerdeckact] {"position":"1650,600","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/docksidefabricator.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Dockside Fabricator - Sell Parts",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Sell Fabricated Parts</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<</nobr>>
<<nobr>>
You've sold <<=$docksideStats.partsSold>> parts here so far.<br>
You approach the parts selling terminal, where you can trade your fabricated parts for credits. The current going rate is 150 credits per part. How many parts are you looking to sell?

<<set _partsSellPrice to 150>> <!-- Set the sell price per part -->
<br>
<<if $lowerdecksParts >= 10>>
    [[Sell 10 parts for 1500 credits.|DocksideFabricator][$player.credits += (_partsSellPrice * 10); $docksideStats.partsSold += 10; $lowerdecksParts -= 10; $timeadd = 1]]<br>
<<else>>
    <span class="disabledLink">Sell 10 parts for 1500 credits. (Not enough parts)</span><br>
<</if>>

<<if $lowerdecksParts >= 25>>
    [[Sell 25 parts for 3750 credits.|DocksideFabricator][$player.credits += (_partsSellPrice * 25); $docksideStats.partsSold += 25; $lowerdecksParts -= 25; $timeadd = 1]]<br>
<<else>>
    <span class="disabledLink">Sell 25 parts for 3750 credits. (Not enough parts)</span><br>
<</if>>

<<if $lowerdecksParts >= 50>>
    [[Sell 50 parts for 7500 credits.|DocksideFabricator][$player.credits += (_partsSellPrice * 50); $docksideStats.partsSold += 50; $lowerdecksParts -= 50; $timeadd = 1]]<br>
<<else>>
    <span class="disabledLink">Sell 50 parts for 7500 credits. (Not enough parts)</span><br>
<</if>>

<<if $lowerdecksParts >= 75>>
    [[Sell 75 parts for 11250 credits.|DocksideFabricator][$player.credits += (_partsSellPrice * 75); $docksideStats.partsSold += 75; $lowerdecksParts -= 75; $timeadd = 1]]<br>
<<else>>
    <span class="disabledLink">Sell 75 parts for 11250 credits. (Not enough parts)</span><br>
<</if>>

<<if $lowerdecksParts >= 100>>
    [[Sell 100 parts for 15000 credits.|DocksideFabricator][$player.credits += (_partsSellPrice * 100); $docksideStats.partsSold += 100; $lowerdecksParts -= 100; $timeadd = 1]]<br>
<<else>>
    <span class="disabledLink">Sell 100 parts for 15000 credits. (Not enough parts)</span><br>
<</if>>

<<if $lowerdecksParts >= 1000>>
    [[Sell 100 parts for 150000 credits.|DocksideFabricator][$player.credits += (_partsSellPrice * 100); $docksideStats.partsSold += 1000; $lowerdecksParts -= 1000; $timeadd = 1]]<br>
<<else>>
    <span class="disabledLink">Sell 1000 parts for 150000 credits. (Not enough parts)</span><br>
<</if>>

[[Inquire about bulk sales.|DocksideFabricatorBulkInquiry][$timeadd = 1]]<br>

[[Reconsider.|DocksideFabricator][$timeadd = 5]]
<</nobr>>



:: ElectricEmporiumProcessScrap [lowerdeckact] {"position":"75,1200","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/electricemporium.jpg'>>
<<addmins $timeadd>><<set $lowerdecksScrap -= 10>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Electric Emporium - Scrap Processing",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $electricEmporiumProcessScrapEventsRecord>> <<set $electricEmporiumProcessScrapEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $electricEmporiumProcessScrapEventsRecord.today != _today>>
    <<set $electricEmporiumProcessScrapEventsRecord.today to _today>>
    <<set $electricEmporiumProcessScrapEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available scrap processing events -->
<<for _i to 1; _i <= 5; _i++>>
    <<if not $electricEmporiumProcessScrapEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available scrap processing events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $electricEmporiumProcessScrapEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available scrap processing events -->
    <<set _randomEvent to 0>> <!-- Default to the default event -->
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Electric Emporium - Scrap Processing</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The Electric Emporium buzzes with the sound of raw innovation and the crackle of electricity jumping between exposed wires. Surrounded by heaps of scrap that hold untold potential, you ready your tools for the meticulous task of refining the raw materials. The work is tedious and the machinery unforgiving, but the promise of turning refuse into profit drives you forward in this cathedral of technology.</p>

<!-- Random Scrap Processing Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Efficient Refinement -->
        <p>You expertly separate valuable materials from the dross, earning a commendation from the shop owner and a hefty payment for your refined scrap.</p>
        <<set $player.credits += 500>>
        <<creditchange 500 "positive">><br>

    <<case 2>> <!-- Machine Malfunction -->
        <p>A machine critical to the processing line malfunctions, but you quickly troubleshoot the issue. The delay is minor, and your problem-solving doesn't go unnoticed.</p>
        <<set $player.credits += 300>>
        <<creditchange 300 "positive">><br>

    <<case 3>> <!-- Rare Material Discovery -->
        <p>In the midst of ordinary scrap, you find a rare material strand. This could be the key component for high-tech repairs or a lucrative sell on its own.</p>
        <<set $player.credits += 350>>
        <<creditchange 350 "positive">><br>

    <<case 4>> <!-- Tedious Task -->
        <p>The work today is repetitive and tedious, but you push through. Your dedication earns you a fair day's pay.</p>
        <<set $player.credits += 250>>
        <<creditchange 250 "positive">><br>

    <<case 5>> <!-- Accidental Damage -->
        <p>An error in processing damages a portion of the scrap, reducing its resale value. The mistake is a setback, but a lesson learned in attentiveness.</p>
        <<set $player.credits += 150>>
        <<creditchange 150 "positive">><br>

    <<case 6>> <!-- Expert Appraisal -->
        <p>Your keen eye for detail allows you to appraise the scrap's true value, leading to a profitable transaction.</p>
        <<set $player.credits += 400>>
        <<creditchange 400 "positive">><br>

    <<case 7>> <!-- Hazardous Materials -->
        <p>You handle a batch of hazardous materials with care, preventing a potential disaster and earning a bonus for your diligence.</p>
        <<set $player.credits += 450>>
        <<creditchange 450 "positive">><br>

    <<case 8>> <!-- Overlooked Gem -->
        <p>Hidden within the scrap, you discover an overlooked gem that fetches a high price on the market.</p>
        <<set $player.credits += 500>>
        <<creditchange 500 "positive">><br>

    <<case 9>> <!-- Technical Glitch -->
        <p>A technical glitch slows down the processing, but your quick thinking minimizes the downtime and keeps the credits flowing.</p>
        <<set $player.credits += 275>>
        <<creditchange 275 "positive">><br>

    <<case 10>> <!-- Resourceful Recycling -->
        <p>Your resourcefulness in recycling scrap material not only benefits the environment but also lines your pockets with extra credits.</p>
        <<set $player.credits += 325>>
        <<creditchange 325 "positive">><br>

    <<default>> <!-- Default Scrap Processing Event -->
        <p>Hours of work sorting and processing scrap pay off with a respectable payout. It's hard work, but it keeps the credits coming.</p>
        <<set $player.credits += 200>>
        <<creditchange 200 "positive">><br>
<</switch>><br>

<!-- Continue Link -->
[[Finish Processing.|The Electric Emporium]]
<</nobr>>



:: ElectricEmporiumSellScrap [lowerdeckact] {"position":"200,1325","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/electricemporium.jpg'>>
<<addmins $timeadd>>
<<set $lowerdecksScrap -= 1>> <!-- Subtract the scrap used for selling entry -->
<<set $location to {
    name: "Meltisar System, MOR-1, The Electric Emporium - Quick Sale",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $electricEmporiumSellScrapEventsRecord>> <<set $electricEmporiumSellScrapEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $electricEmporiumSellScrapEventsRecord.today != _today>>
    <<set $electricEmporiumSellScrapEventsRecord.today to _today>>
    <<set $electricEmporiumSellScrapEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available quick selling events -->
<<for _i to 1; _i <= 3; _i++>>
    <<if not $electricEmporiumSellScrapEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available quick selling events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $electricEmporiumSellScrapEventsRecord.triggeredEvents.push(_randomEvent)>>
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Electric Emporium - Quick Sale</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The scent of molten solder hangs heavy in the air as you navigate through the crowded aisles of The Electric Emporium. Here, every bit of scrap holds value to someone. You carry your raw materials to a buyer who eyes it with a mixture of greed and calculation. Time is money, and you're hoping for a quick transaction to unload your scrap and line your pockets with a few more credits before stepping back into the fray.</p>

/* Random Quick Selling Events */
<<switch _randomEvent>>
    <<case 1>> <!-- Buyer's Market -->
        <p>The market’s in your favor today as buyers are in high demand for scrap. You secure a deal that's above the average going rate.</p>
        <<set $player.credits += 40>>
        <<creditchange 40 "positive">>
        <<set $player.scrap -= 1>>
        <span class="i-loss">-1 Scrap</span><br>

    <<case 2>> <!-- Scrap Glut -->
        <p>Everyone seems to be selling at the same moment, and the market is flooded with scrap. You’re forced to settle for a price lower than you wanted.</p>
        <<set $player.credits += 20>>
        <<creditchange 20 "positive">>
        <<set $player.scrap -= 1>>
        <span class="i-loss">-1 Scrap</span><br>

    <<case 3>> <!-- Desperate Dealer -->
        <p>A trader is desperately seeking a certain type of scrap that you just happen to have. You negotiate a quick deal with a good payout.</p>
        <<set $player.credits += 50>>
        <<creditchange 50 "positive">>
        <<set $player.scrap -= 1>>
        <span class="i-loss">-1 Scrap</span><br>

    <<case 4>> <!-- Lucky Find -->
        <p>While negotiating, you find an extra piece of valuable scrap in your inventory. The buyer is thrilled and pays a premium.</p>
        <<set $player.credits += Math.round($player.credits * 0.02) + 5>>
        <<creditchange Math.round($player.credits * 0.02) + 5 "positive">>
        <<set $player.scrap -= 1>>
        <span class="i-loss">-1 Scrap</span><br>

    <<case 5>> <!-- Collector's Request -->
        <p>A collector approaches you with a specific request for a rare scrap piece. You manage to sell it for a handsome sum.</p>
        <<set $player.credits += Math.round($player.credits * 0.05) + 10>>
        <<creditchange Math.round($player.credits * 0.05) + 10 "positive">>
        <<set $player.scrap -= 1>>
        <span class="i-loss">-1 Scrap</span><br>

    <<case 6>> <!-- Haggler's Challenge -->
        <p>A notorious haggler tries to lowball you, but you stand your ground and secure a fair price for your scrap.</p>
        <<set $player.credits += Math.round($player.credits * 0.03) + 7>>
        <<creditchange Math.round($player.credits * 0.03) + 7 "positive">>
        <<set $player.scrap -= 1>>
        <span class="i-loss">-1 Scrap</span><br>

    <<case 7>> <!-- Tech Boom -->
        <p>There's a sudden tech boom, and scrap metal is in high demand. You take advantage of the situation and make a profitable sale.</p>
        <<set $player.credits += Math.round($player.credits * 0.04) + 15>>
        <<creditchange Math.round($player.credits * 0.04) + 15 "positive">>
        <<set $player.scrap -= 1>>
        <span class="i-loss">-1 Scrap</span><br>

    <<case 8>> <!-- Market Crash -->
        <p>The market takes a hit, and scrap prices plummet. You manage to sell some, but at a disappointing rate.</p>
        <<set $player.credits += Math.round($player.credits * 0.01) + 2>>
        <<creditchange Math.round($player.credits * 0.01) + 2 "positive">>
        <<set $player.scrap -= 1>>
        <span class="i-loss">-1 Scrap</span><br>

    <<case 9>> <!-- Artisan's Need -->
        <p>An artisan needs scrap for a project and is willing to pay a bit extra for the right materials. You strike a deal.</p>
        <<set $player.credits += Math.round($player.credits * 0.025) + 8>>
        <<creditchange Math.round($player.credits * 0.025) + 8 "positive">>
        <<set $player.scrap -= 1>>
        <span class="i-loss">-1 Scrap</span><br>

    <<case 10>> <!-- Robotic Repairs -->
        <p>A robotics engineer urgently needs scrap for repairs. You help out and are rewarded with a fair price.</p>
        <<set $player.credits += Math.round($player.credits * 0.015) + 5>>
        <<creditchange Math.round($player.credits * 0.015) + 5 "positive">>
        <<set $player.scrap -= 1>>
        <span class="i-loss">-1 Scrap</span><br>

    <<default>> <!-- Default Quick Selling Event -->
        <p>A standard transaction; no haggling, no fuss. You hand over the scrap and receive the average rate, with the whole affair done swiftly.</p>
        <<set $player.credits += 30>>
        <<creditchange 30 "positive">>
        <<set $player.scrap -= 1>>
        <span class="i-loss">-1 Scrap</span><br>
<</switch>>

<br>

<!-- Continue Link -->
[[Keep exploring The Electric Emporium.|The Electric Emporium]]
<</nobr>>



:: ElectricEmporiumTradeScrap [lowerdeckact] {"position":"75,1325","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/electricemporium.jpg'>>
<<addmins $timeadd>>
<<set $lowerdecksScrap -= 2>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Electric Emporium - Trade Scrap",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $electricEmporiumTradeScrapEventsRecord>> <<set $electricEmporiumTradeScrapEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $electricEmporiumTradeScrapEventsRecord.today != _today>>
    <<set $electricEmporiumTradeScrapEventsRecord.today to _today>>
    <<set $electricEmporiumTradeScrapEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available scrap trading events -->
<<for _i to 1; _i <= 10; _i++>>
    <<if not $electricEmporiumTradeScrapEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available scrap trading events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $electricEmporiumTradeScrapEventsRecord.triggeredEvents.push(_randomEvent)>>
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Electric Emporium - Trade Scrap</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>Amidst the tangled array of cables and the soft glow of diodes, you weigh the scrap in your hands, considering its worth. The Emporium is filled with scavengers and tinkerers, each seeking the components that might complete their latest project. With a practiced eye, you scan for the perfect opportunity to trade your scrap for parts that gleam with promise, hoping to strike a deal that will give you the upper hand back on the Promenade.</p>

<!-- Random Scrap Trading Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Fortunate Barter -->
        <p>Your negotiating skills are top-notch today. You manage to trade a small heap of scrap for some premium parts, and even pocket some credits.</p>
        <<set $player.credits += 50>><<set $lowerdecksParts += 1>>
        <<creditchange 50 "positive">><br>
        <span class="i-loss">-2 Scrap</span><span class="i-gain"> +1 Parts</span><br>

    <<case 2>> <!-- Abysmal Exchange Rate -->
        <p>The market is tough, and you're forced to make a trade that's less than favorable. You leave with some credits but feel like you could have gotten more.</p>
        <<set $player.credits += 15>>
        <<creditchange 15 "positive">><br>
        <span class="i-loss">-2 Scrap</span><br>

    <<case 3>> <!-- Shrewd Deal -->
        <p>You spot a high-demand part amongst the scrap. The trade you make greatly favors you, and you walk away with a hefty sum of credits. When you get some time to examine the part, you realize it's defective.</p>
        <<set $player.credits += 75>>
        <<creditchange 75 "positive">><br>
        <span class="i-loss">-2 Scrap</span><br>

    <<case 4>> <!-- No Deal -->
        <p>No one is interested in what you have to offer. You spend the time getting to know the market better, but ultimately walk back with your scrap.</p>
        <<set $lowerdecksScrap += 2>><br>

    <<case 5>> <!-- Surplus Surprise -->
        <p>A surplus sell-off works in your favor. An opportunistic trader swaps your scrap for a few more advanced parts than usual.</p>
        <<set $lowerdecksParts += 2>>
        <span class="i-gain">+2 Parts</span><span class="i-loss">-2 Scrap</span><br>

    <<case 6>> <!-- Unfair Exchange -->
        <p>The trader swindles you with fast talk and quicker hands. You walk away feeling cheated with less valuable parts and a stingy amount of credits.</p>
        <<set $player.credits += 10>>
        <<creditchange 10 "positive">><br>
        <span class="i-loss">-2 Scrap</span><br>

    <<case 7>> <!-- Generous Offer -->
        <p>A trader recognizes the potential in your collection of components and makes a generous offer. The deal leaves you with more credits than expected.</p>
        <<set $player.credits += 65>>
        <<creditchange 65 "positive">><br>
        <span class="i-loss">-2 Scrap</span><br>

    <<case 8>> <!-- Botched Negotiation -->
        <p>Your negotiation doesn't pan out. Faced with a stubborn trader, you decide to hold onto your scrap for another day.</p>
        <<set $lowerdecksScrap += 2>><br>

    <<case 9>> <!-- Gadget Goldmine -->
        <p>You find a defunct gadget that contains rare parts. After some haggling, a tech enthusiast eagerly exchanges it for a useful sum of credits.</p>
        <<set $player.credits += 40>>
        <<creditchange 40 "positive">><br>
        <span class="i-loss">-2 Scrap</span><br>

    <<case 10>> <!-- Lucky Find -->
        <p>While picking through your scrap, you discover a mistakenly discarded gadget. You trade it with a merchant for a significant credit boost.</p>
        <<set $player.credits += 60>><<set $lowerdecksParts += 1>>
        <<creditchange 60 "positive">><br>
        <span class="i-gain">+1 Parts</span><span class="i-loss">-2 Scrap</span><br>

    <<default>> <!-- Default Scrap Trading Event -->
        <p>Your trading efforts come to fruition. While not the best day on record, you secure an exchange of scrap for credits. It's clear no one really wants to trade anymore today, though. You might have better luck trying tomorrow.</p>
        <<set $player.credits += 30>>
        <<creditchange 30 "positive">><br>
        <span class="i-loss">-2 Scrap</span><br>
<</switch>>
<br>

<!-- Continue Link -->
[[Return to browsing The Electric Emporium.|The Electric Emporium]]
<</nobr>>



:: FinancialStatus {"position":"1125,50","size":"100,100"}
<<nobr>><!-- FinancialStatus Passage -->
<div style="background-color: rgba(0, 0, 0, 0.75); /* Semi-transparent black */
    border: 4px solid #444;
    text-shadow: -1px -1px 0 #000,  /* Top-left sharp shadow */
                 1px -1px 0 #000,   /* Top-right sharp shadow */
                 -1px 1px 0 #000,   /* Bottom-left sharp shadow */
                 1px 1px 0 #000,    /* Bottom-right sharp shadow */
                 0px -2px 0 #000,   /* Top sharp shadow */
                 0px 2px 0 #000,    /* Bottom sharp shadow */
                 -2px 0px 0 #000,   /* Left sharp shadow */
                 2px 0px 0 #000,    /* Right sharp shadow */
                 0px 0px 2px #000;  /* General soft blur */
    padding: 0.4em;
    margin-bottom: 0em;"> <!-- Adjust margin as needed -->
    
    Credits:
    <<if $player.credits > 0>><span style="color: green;"><<formatNumber $player.credits>></span>
    <<elseif $player.credits == 0>><<formatNumber $player.credits>>
    <<else>><span style="color: red;"><<formatNumber $player.credits>></span><</if>><br>
    Debt:
    <<if $player.debt > 50000>><span style="color: red;"><<formatNumber $player.debt>></span>
    <<elseif $player.debt > 0>><span style="color: yellow;"><<formatNumber $player.debt>></span>
    <<else>><span style="color: green;"><<formatNumber $player.debt>></span><</if>><br>
    <<set $worldEconomyScore = Math.clamp($worldEconomyScore, 0, 1000)>>
    <<set $dangerLevelScore = Math.clamp($dangerLevelScore, 0, 1000)>>
    <<set $combinedDifficultyScore to ((2000 - $worldEconomyScore - $dangerLevelScore) / 20).toFixed(1)>>
    Economy:
    <<if $worldEconomyScore >= 800>><span style="color: green;">Flourishing</span>
    <<elseif $worldEconomyScore >= 600>><span style="color: lightgreen;">Stable</span>
    <<elseif $worldEconomyScore >= 400>><span style="color: orange;">Struggling</span>
    <<elseif $worldEconomyScore >= 200>><span style="color: red;">Crumbling</span>
    <<else>><span style="color: darkred;">Collapsed</span><</if>><br>
    Danger Level:
    <<if $dangerLevelScore >= 800>><span style="color: blue;">Low</span>
    <<elseif $dangerLevelScore >= 600>><span style="color: lightgreen;">Moderate</span>
    <<elseif $dangerLevelScore >= 400>><span style="color: orange;">High</span>
    <<else>><span style="color: red;">Extreme</span><</if>>
</div><</nobr>>\


:: Forgotten Slums [travel] {"position":"1750,1800","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerslums.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Forgotten Slums",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<<mapWidget "images/locs/melt/mor1/lower/map/lowerdeckslums.jpg">>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Forgotten Slums</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
Places of Interest:
[[Loiter. (00:15)|Forgotten Slums][$timeadd = 15]]

Travel:
[[Climb the narrow shaft back to the Lower Decks Hub.|Lower Decks][$timeadd = 5]]
[[(Clockwise) The station's primary outer corridor leads to the Habitation Cells.|Habitation Cells][$timeadd = 5]]
[[(Counter-Clockwise) The station's primary outer corridor leads to the Black Market.|Black Market Bazaar][$timeadd = 5]]
[[A small forgotten shortcut leads to the Lower Deck Promenade.|Lower Deck Promenade][$timeadd = 5]]

The Forgotten Slums of MOR-1 are a dismal testament to the station's economic disparity. Here, the station's structure, peeled and corroded, is a patchwork of jury-rigged connections, offering shelter to the least fortunate. Dim alleyways twist like veins, lined with hovels cobbled together from scrap metal and composite waste.

Echoes of hopelessness and survival bounce off the walls, while huddled figures move about their lives with a resilience born of necessity. Amidst the squalor, makeshift bazaars peddle recycled goods and blackened water while tech scavengers haggle over salvaged parts.

The Forgotten Slums is a maze of despair, yet within its confines, the embers of community and kinship glow faintly. Here, the ignored and overlooked of MOR-1 carve out existence beneath the shadow of the station's gleaming spires.


:: GrafterAskCyberware [conversation] {"position":"350,1300","size":"100,100"}
\:: GrafterAskCyberware
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/graftergear.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Grafter's Gear",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Grafter's Gear</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"Can you show me your range of cyberware?"<</say>>

<p>The Grafter pauses, then with a fluid motion of his augmented arm, he gestures towards a bench lined with various cybernetic devices. Each piece hums with the promise of enhanced abilities.</p>

<<say 'The Grafter' setup.ImagePath+'/characters/minor/grafter.jpg'>>"Sit."<</say>>

<p>You feel a twinge of unease as you lower yourself onto the cold, metallic seat. It's an amalgam of technology and art, wires and sensors weaving through the framework like veins.</p>

<p>The Grafter moves closer, his optical sensor emitting a soft glow as he scans you from head to toe, his expression unreadable behind the cybernetic visage.</p>

<<say 'The Grafter' setup.ImagePath+'/characters/minor/grafter.jpg'>>"No."<</say>>

<p>Confusion flickers across your face.</p>

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"No? No what? You don't have what I need or...?"</p><</say>>

<<say 'The Grafter' setup.ImagePath+'/characters/minor/grafter.jpg'>>"No."<</say>>

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>[[Okay then... I guess I'll look around some more.|Grafters Gear][$GrafterCyberTalk =1; $timeadd += 5]]<</say>>
<</nobr>>


:: GrafterAskLatest [conversation] {"position":"450,1175","size":"100,100"}
\:: GrafterUpgrade
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/graftergear_interior.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Grafter's Gear",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Grafter's Gear</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

<p>The Grafter retrieves a sleek device from a secure container, its surface gleaming under the shop's dim lights.</p>

<<say 'The Grafter' setup.ImagePath+'/characters/minor/grafter.jpg'>>"NanoDoc Injector. Heals tissue, restores vitality. There are others. Enhancements for health, fatigue, power recharging."<</say>>

<p>He lines up an array of similar devices, each with a distinct purpose and design.</p>

<<say 'The Grafter' setup.ImagePath+'/characters/minor/grafter.jpg'>>"Caution: mood enhancers, stress relievers, trauma blockers available. High risk. For cleansing, PuriDerm Spray. Like instant shower. Minimal risk."<</say>>

<p>The Grafter's voice remains neutral, but the intensity in his gaze underscores the seriousness of his warning.</p>

<<say 'The Grafter' setup.ImagePath+'/characters/minor/grafter.jpg'>>"Side effects exist. Cost: 1000 credits each."<</say>>

<<if $player.credits >= 1000>>
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>[[I'll think about it. Thanks for the info.|GrafterConversation]]<</say>>
<<else>>
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>[[That's out of my price range right now. Maybe later.|GrafterConversation]]<</say>>
<</if>><</nobr>>\


:: GrafterConversation [conversation] {"position":"325,1175","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/graftergear.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Grafter's Gear",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Grafter's Gear</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The Grafter's optical sensor locks onto you as you approach, his movements halting with mechanical precision.</p>
<<say 'The Grafter' setup.ImagePath+'/characters/minor/grafter.jpg'>>"Query: Enhancements needed?"<</say>>
<<say $player.name setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>
<<if $GrafterCyberTalk == 0>>
    [[I need help with my cyberware.|GrafterAskCyberware][$timeadd += 5]]<br>
<<else>>
    <span class="disabledLink">The Grafter looks at you with worry.</span><br>
<</if>>
    [[Can you run me through things?|GrafterExplain][$timeadd += 5]]<br>
    [[Latest upgrades?|GrafterAskLatest][$timeadd += 5]]<br>
    [[Done here.|Grafters Gear][$timeadd += 5]]
<</say>><</nobr>>


:: GrafterExplain [conversation] {"position":"450,1275","size":"100,100"}
\:: GrafterCustomizeImplants
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/graftergear.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Grafter's Gear",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Grafter's Gear</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"Can you run me through how things work here?"<</say>>

<<say 'The Grafter' setup.ImagePath+'/characters/minor/grafter.jpg'>>"Affirmative. Grafter's Gear operates on parts. Parts are currency, parts are trade, parts are survival."<</say>>

<p>The Grafter's hands move with mechanical precision, pointing to various tools and components scattered across the workbench.</p>

<<say 'The Grafter' setup.ImagePath+'/characters/minor/grafter.jpg'>>"Patch-It Pod discards scrap. Retrieve scrap. Bring here. I assess. Trade for functional parts."<</say>>

<p>He pauses, allowing the information to process, then continues.</p>

<<say 'The Grafter' setup.ImagePath+'/characters/minor/grafter.jpg'>>"Parts can be bought. Parts can be sold. Efficiency is key. You provide scrap, I provide Parts."<</say>>

<p>The Grafter's single illuminated eye fixes on you, as if calculating your potential worth in this exchange of technology.</p>

<<say 'The Grafter' setup.ImagePath+'/characters/minor/grafter.jpg'>>"Understand? Good. Now go. Return with scrap. We trade."<</say>>

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>[[Got it. I'll bring back what I can find.|GrafterConversation]]<</say>>
<</nobr>>


:: Grafters Gear [poi] {"position":"200,1050","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/graftergear.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Grafter's Gear",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Grafter's Gear</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>You have <<=$lowerdecksScrap>> <span style="color:orange;">scrap</span>, <<=$lowerdecksParts>> <span style="color:lightgreen;">parts</span>, and <<=$lowerdecksCyberware>> <span style="color:yellow;">cyberware</span> in the lockers. There's free delivery drone service to the Lower Wharf and Black Market if you want to see if you can sell them for a profit. You could also try trading at Grafter's Gear which is nearby.</p>

Things to do:<br>
<<if $player.credits >= 300>>
    [[Buy parts for your equipment. (00:15) 300 Cr.|GraftersGearBuyParts][$player.credits -= 300; $lowerdecksParts += 1; $timeadd = 15]]<br>
<<else>>
    <span class="disabledLink">Buy parts for your equipment. (00:15) 300 Cr.</span><br>
<</if>>
<<if $lowerdecksParts >= 1>>
    [[Sell parts from your inventory. (00:15) -1 Part|GraftersGearSellParts][$lowerdecksParts -= 1; $timeadd = 15]]<br>
<<else>>
    <span class="disabledLink">Sell parts from your inventory. (00:15) -1 Part</span><br>
<</if>>
<<if $lowerdecksParts >= 1>>
    [[Try to trade parts for cyberware. (00:15)|GraftersGearTradeParts][$lowerdecksParts -= 1; $timeadd = 15]]<br>
<<else>>
    <span class="disabledLink">Try to trade parts for cyberware. (00:15) -1 Part</span><br>
<</if>>
<!-- NanoDoc Injector -->
<<if $player.credits >= 1000>>
    [[Purchase NanoDoc Injector (00:15) 1000 Cr.|Grafters Gear][$player.credits -= 1000; $playerConsumables.nanoDocInjector += 1; $timeadd += 15]]<br>
    "Heal your wounds with the latest in nanotech."<br>
<<else>>
    <span class="disabledLink">Not enough credits for NanoDoc Injector</span><br>
<</if>>


<!-- New interaction with the Grafter -->
<<if $GrafterTalked is 0>>
    <p>In the corner of the shop, the cyborg works meticulously, his mechanical fingers deftly manipulating delicate cybernetic components. His presence is both intriguing and intimidating to those unaccustomed to the melding of flesh and steel.</p>
    [[Talk to the cyborg.|GrafterConversation][$GrafterTalked = 1; $timeadd += 15]]<br>
<<else>>
    <p>The Grafter, now a familiar figure to you, looks up from his workbench with a nod of recognition. His cybernetic eye gleams as it adjusts to focus on you, and you can't help but wonder what enhancements he has in store today.</p>
    [[Speak to the Grafter.|GrafterConversation][$timeadd += 15]]<br>
<</if>>
<</nobr>>
Travel:
[[Step back into the mechanical heartbeat of the Promenade.|Lower Deck Promenade][$timeadd = 5]]

Grafter's Gear is a dimly lit shop nestled in a nondescript corner of the Lower Deck Promenade. Its displays are cluttered with an array of cybernetic parts, from ocular implants to dermal armor plating. The air crackles with the faint buzz of live circuits, and the smell of ionized air is strong.

Behind the counter, the Grafter, a cyborg with an eye for detail, demonstrates the latest in limb enhancements to a potential customer. Here, beneath layers of hanging cables and softly glowing LEDs, you can upgrade or offload your tech, getting a taste of the edge needed to survive in the bowels of MOR-1.



:: GraftersGearBuyParts [lowerdeckact] {"position":"75,1050","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/graftergear.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Grafter's Gear - Buy Parts",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $graftersGearBuyPartsEventsRecord>> <<set $graftersGearBuyPartsEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $graftersGearBuyPartsEventsRecord.today != _today>>
    <<set $graftersGearBuyPartsEventsRecord.today to _today>>
    <<set $graftersGearBuyPartsEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->
<<set _creditTransaction to 300>> <!-- Price advertised when clicking the option -->

<<set _availableEvents to []>> <!-- List of available buying parts events -->
<<for _i to 1; _i <= 3; _i++>>
    <<if not $graftersGearBuyPartsEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available buying parts events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $graftersGearBuyPartsEventsRecord.triggeredEvents.push(_randomEvent)>>
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Grafter's Gear - Buy Parts</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The cool glow of bio-luminescent lights casts an otherworldly hue over the shelves of Grafter's Gear, illuminating the intricate web of cybernetic components for sale. With a discerning eye, you peruse the latest advancements in augmentation technology, each piece promising an edge in the harsh realities of space. The Grafter nods in recognition as you approach, ready to negotiate a deal for the essential parts your equipment needs.</p>

<!-- Random Buying Parts Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Bulk Discount -->
        <p>The Grafter is in a good mood and offers you a slight discount for buying in bulk. It's a small gesture but welcome nonetheless.</p>
        <<set $player.credits += 30>>
        <<creditchange 30 "positive">><br>

    <<case 2>> <!-- Market Shift -->
        <<if $player.credits >= 330>> <!-- Player has enough credits for the markup -->
            <p>A recent shift in market demand slightly inflates the cost of cybernetic parts. You grumble but pay the slight premium, knowing the value these parts hold.</p>
            <<set $player.credits -= 30>>
            <<creditchange 30 "negative">><br>
        <<else>> <!-- Player does not have enough credits, adding to debt -->
            <p>The Grafter raises the price due to market demand, but a quick check of your funds reveals you're short. With a chuckle, the Grafter adds the 30 credit markup to your tab, commenting on trust and future business.</p>
            <<set $player.debt += 30>>
            <<debtchange 30 "positive">><br>
        <</if>>

    <<case 3>> <!-- Grateful for Patience -->
        <p>While completing the transaction, a technical issue arises. You patiently wait it out, and the Grafter thanks you with a reduction in price for your time.</p>
        <<set $player.credits += 30>>
        <<creditchange 30 "positive">><br>

    <<case 4>> <!-- Lucky Find -->
        <p>You find a rare part among the common stock, and the Grafter lets it go for a standard price, knowing you'll be back for more.</p>
        <<set $player.credits += 50>>
        <<creditchange 50 "positive">><br>

    <<case 5>> <!-- Supplier Error -->
        <p>A supplier's error works in your favor, as the Grafter passes on the savings from a mislabeled shipment to you.</p>
        <<set $player.credits += 40>>
        <<creditchange 40 "positive">><br>

    <<case 6>> <!-- Haggling Success -->
        <p>Your haggling skills save you some credits on today's purchase, leaving you feeling quite pleased with yourself.</p>
        <<set $player.credits += 20>>
        <<creditchange 20 "positive">><br>

    <<case 7>> <!-- Overpriced Goods -->
        <p>The parts seem overpriced today, but you need them urgently. Reluctantly, you hand over the extra credits.</p>
        <<set $player.credits -= 50>>
        <<creditchange 50 "negative">><br>

    <<case 8>> <!-- Defective Part Refund -->
        <p>You return a defective part and the Grafter, apologizing for the oversight, offers a full refund plus a little extra for your troubles.</p>
        <<set $player.credits += 70>>
        <<creditchange 70 "positive">><br>

    <<case 9>> <!-- Pricey Upgrade -->
        <p>You decide to invest in a high-quality upgrade, knowing it will pay off in the long run despite the hefty price tag.</p>
        <<set $player.credits -= 100>>
        <<creditchange 100 "negative">><br>

    <<case 10>> <!-- Bargain Bin Jackpot -->
        <p>Digging through the bargain bin pays off when you find exactly what you need at a fraction of the cost.</p>
        <<set $player.credits += 60>>
        <<creditchange 60 "positive">><br>

    <<default>> <!-- Default Buying Parts Event -->
        <p>The exchange goes as expected. No surprises; you hand over the standard rate and gain the parts you sought after.</p>
        <!-- No credit change, so no need for <<creditchange>> or <<debtchange>> macros here -->
<</switch>><br>

<!-- Continue Link -->
[[Keep perusing the offerings at Grafter's Gear.|Grafters Gear]]
<</nobr>>

<br>
TODO: Add equipment


:: GraftersGearSellParts [lowerdeckact] {"position":"75,925","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/graftergear.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Grafter's Gear - Sell Parts",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $graftersGearSellPartsEventsRecord>> <<set $graftersGearSellPartsEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $graftersGearSellPartsEventsRecord.today != _today>>
    <<set $graftersGearSellPartsEventsRecord.today to _today>>
    <<set $graftersGearSellPartsEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->
<<set _creditGain to 150>> <!-- Advertised price for selling parts -->

<<set _availableEvents to []>> <!-- List of selling parts events -->
<<for _i to 1; _i <= 3; _i++>>
    <<if not $graftersGearSellPartsEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are events to trigger -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $graftersGearSellPartsEventsRecord.triggeredEvents.push(_randomEvent)>>
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Grafter's Gear - Sell Parts</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>Amongst the buzz of servo motors and the soft hum of machinery, you unpack the valuable parts you've acquired. The shop's cluttered interior is a testament to the variety of enhancements that have passed through here. You lay out your wares on the counter, catching the Grafter's attention as you prepare to barter for the best price. In this den of tech and metal, every part has its price.</p>

<!-- Random Selling Parts Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Keen Interest -->
        <p>You find the Grafter particularly keen on acquiring your parts. With a bit of back-and-forth, you manage to secure a better deal.</p>
        <<set $player.credits += 120>> <!-- Base transaction plus bonus -->
        <<creditchange 120 "positive">><br>

    <<case 2>> <!-- Hesitant Buyer -->
        <p>The buyer hesitates, examining the parts more closely than usual. Reluctantly, you agree to a slight price cut to make the sale.</p>
        <<set $player.credits += 85>> <!-- Base transaction minus a small amount -->
        <<creditchange 85 "negative">><br>

    <<case 3>> <!-- Market Downturn -->
        <p>The cybernetic parts market is experiencing a minor downturn. You're forced to accept a lower price to avoid being stuck with inventory.</p>
        <<set $player.credits += 80>> <!-- Base transaction minus a small amount due to market conditions -->
        <<creditchange 80 "negative">><br>

    <<case 4>> <!-- Unexpected Demand -->
        <p>A sudden spike in demand for certain parts allows you to negotiate a higher selling price.</p>
        <<set $player.credits += 130>> <!-- Base transaction plus a bonus due to demand -->
        <<creditchange 130 "positive">><br>

    <<case 5>> <!-- Bargain Hunter -->
        <p>A bargain hunter is tough to convince, but you eventually agree on a price that's fair for both parties.</p>
        <<set $player.credits += 95>> <!-- Base transaction with a slight reduction due to bargaining -->
        <<creditchange 95 "negative">><br>

    <<case 6>> <!-- Generous Offer -->
        <p>An unexpected generous offer from a collector looking for rare parts leaves you pleasantly surprised.</p>
        <<set $player.credits += 150>> <!-- Base transaction plus a significant bonus from the collector -->
        <<creditchange 150 "positive">><br>

    <<case 7>> <!-- Tough Times -->
        <p>Times are tough, and buyers are scarce. You take what you can get, even if it's less than ideal.</p>
        <<set $player.credits += 70>> <!-- Base transaction minus a penalty due to tough times -->
        <<creditchange 70 "negative">><br>

    <<case 8>> <!-- Bulk Sale -->
        <p>You manage to sell a bulk of parts at a decent price, making the effort of collection worthwhile.</p>
        <<set $player.credits += 110>> <!-- Base transaction plus a small bonus for bulk sale -->
        <<creditchange 110 "positive">><br>

    <<case 9>> <!-- Lowball Offer -->
        <p>A buyer's lowball offer is frustrating, but you decide to sell rather than hold onto the parts.</p>
        <<set $player.credits += 75>> <!-- Base transaction minus a penalty for the lowball offer -->
        <<creditchange 75 "negative">><br>

    <<case 10>> <!-- Collector's Prize -->
        <p>Your parts catch the eye of a collector who pays top dollar for what they consider a prize addition to their collection.</p>
        <<set $player.credits += 200>> <!-- Base transaction plus a significant bonus for the prized parts -->
        <<creditchange 200 "positive">><br>

    <<default>> <!-- Default Selling Parts Event -->
        <p>It's business as usual at the Grafter's Gear. The parts are sold at the expected price, without any fuss.</p>
        <<set $player.credits += 100>> <!-- Base transaction at expected price -->
        <<creditchange 100 "positive">> <!-- No need for visual change if it's the expected outcome -->
<</switch>>
<br>


<!-- Continue Link -->
[[Continue browsing Grafter's Gear.|Grafters Gear]]
<</nobr>>



:: GraftersGearTradeParts [lowerdeckact] {"position":"200,925","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/graftergear.jpg'>>
<<addmins $timeadd>>
<<set $lowerdecksParts -= 1>> <!-- Subtract the part used for trading -->
<<set $location to {
    name: "Meltisar System, MOR-1, Grafter's Gear - Trade Parts",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $graftersGearTradePartsEventsRecord>> <<set $graftersGearTradePartsEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $graftersGearTradePartsEventsRecord.today != _today>>
    <<set $graftersGearTradePartsEventsRecord.today to _today>>
    <<set $graftersGearTradePartsEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available trading parts events -->
<<for _i to 1; _i <= 3; _i++>>
    <<if not $graftersGearTradePartsEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are events to trigger -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $graftersGearTradePartsEventsRecord.triggeredEvents.push(_randomEvent)>>
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Grafter's Gear - Trade Parts</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The air is thick with the scent of lubricant and burnt ozone, mingling with the metallic tang of the cyberware that adorns every corner of Grafter's Gear. You slide a set of high-quality parts across the counter, your eyes locked with the Grafter's calculating gaze. The prospect of a beneficial trade hangs in the air, the potential to walk away with something far more valuable than what you offered.</p>

<!-- Random Trading Parts Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Lucrative Exchange -->
        <p>The Grafter is particularly interested in the parts you offer and throws in a little extra as a bonus. You walk away with more cyberware than expected and a small credit bump.<span class="i-gain"> +2 Cyberware</span><<creditchange 50 "positive">></p>
        <<set $lowerdecksCyberware += 2>><<set $player.credits += 50>>

    <<case 2>> <!-- Standard Trade -->
        <p>Your trade is met with an average response. The deal is fair and you receive a standard issue of cyberware for your parts.<span class="i-gain"> +1 Cyberware</span></p>
        <<set $lowerdecksCyberware += 1>>

    <<case 3>> <!-- Unfavorable Terms -->
        <<if $player.credits >= 50>> <!-- Player has enough credits to cover loss -->
            <p>Terms don't turn out as favorable as you had hoped. The Grafter insists on a minor surcharge for the cyberware you're after. You grudgingly agree to the terms.<<creditchange -50 "negative">> <span class="i-gain"> +1 Cyberware</span></p>
            <<set $player.credits -= 50>>
        <<else>> <!-- Not enough credits, add to debt -->
            <p>The Grafter is firm on the cost, your current credits falling short. The surplus is logged onto your tab, and you're reminded that everything comes at a price.<<debtchange 50 "positive">> <span class="i-gain"> +1 Cyberware</span></p>
            <<set $player.debt += 50>> <!-- Assuming $player.debt exists -->
        <</if>>
        <<set $lowerdecksCyberware += 1>>

    <<case 4>> <!-- Generous Offer -->
        <p>A generous passerby offers you a good deal for your parts. You end up with a decent credit increase and some extra cyberware.<span class="i-gain"> +3 Cyberware</span><<creditchange 75 "positive">></p>
        <<set $lowerdecksCyberware += 3>><<set $player.credits += 75>>

    <<case 5>> <!-- Bargain Sale -->
        <p>You manage to bargain with a vendor, but only get a slight increase in credits for your parts.<span class="i-gain"> +1 Cyberware</span><<creditchange 25 "positive">></p>
        <<set $lowerdecksCyberware += 1>><<set $player.credits += 25>>

    <<case 6>> <!-- Desperate Times -->
        <p>You're in a pinch and have to sell your parts for less than they're worth. You take the hit to your credits.<span class="i-loss"> -1 Cyberware</span><<creditchange -20 "negative">></p>
        <<set $lowerdecksCyberware -= 1>><<set $player.credits -= 20>>

    <<case 7>> <!-- Lucky Find -->
        <p>You find a buyer who's looking for exactly what you're selling. They pay a premium for your parts.<span class="i-gain"> +2 Cyberware</span><<creditchange 150 "positive">></p>
        <<set $lowerdecksCyberware += 2>><<set $player.credits += 150>>

    <<case 8>> <!-- Competitive Market -->
        <p>The market is competitive today. You manage to get a fair price for your parts, but nothing extra.<span class="i-gain"> +1 Cyberware</span><<creditchange 100 "positive">></p>
        <<set $lowerdecksCyberware += 1>><<set $player.credits += 100>>

    <<case 9>> <!-- High Demand -->
        <p>There's a high demand for parts like yours. You sell them for a good price and gain a nice credit boost.<span class="i-gain"> +2 Cyberware</span><<creditchange 130 "positive">></p>
        <<set $lowerdecksCyberware += 2>><<set $player.credits += 130>>

    <<case 10>> <!-- Poor Negotiation -->
        <p>Your negotiation skills fail you today. You end up with less credits than you hoped for.<span class="i-loss"> -1 Cyberware</span><<creditchange -30 "negative">></p>
        <<set $lowerdecksCyberware -= 1>><<set $player.credits -= 30>>

    <<default>> <!-- Default Trading Parts Event -->
        <p>The trade goes smoothly without any hitches. You exchange your part for a piece of cyberware that catches your eye.<span class="i-gain"> +1 Cyberware</span></p>
        <<set $lowerdecksCyberware += 1>>
<</switch>>
<br><br>

<!-- Continue Link -->
[[Continue exploring Grafter's Gear.|Grafters Gear]]
<</nobr>>



:: Habitation Cells [travel] {"position":"975,1975","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Habitation Cells",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<<mapWidget "images/locs/melt/mor1/lower/map/lowerdeckhab.jpg">>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Habitation Cells</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
Places of Interest:
[[Habitation Haven Apartments.|Habitation Haven][$timeadd = 5]]
[[The Last Home Pub.|The Last Home][$timeadd = 5]]
[[The Oxygen Garden.|The Oxygen Garden][$timeadd = 5]]
[[Patch-It Pod.|Patch-It Pod][$timeadd = 5]]
[[Loiter. (00:15)|Habitation Cells][$timeadd = 15]]

Travel:
[[Navigate back to the central axis of the Lower Decks Hub.|Lower Decks][$timeadd = 5]]
[[(Clockwise) The Station's primary outer corridor leads to the Lower Observation Deck.|Lower Observation Deck][$timeadd = 5]]
[[(Counter-Clockwise) The Station's primary outer corridor leads to the station's underbelly.|Forgotten Slums][$timeadd = 5]]

The Habitation Cells of MOR-1 are a patchwork of cramped quarters and narrow passageways, a warren of necessity rather than comfort. The air carries the sound of life in close quarters: muffled conversations, the clatter of makeshift repairs, and the occasional laughter that defies the pervasive hardships of station life.

Each cell tells a story, with doors marked by the personal touches of their inhabitants; a sticker here, a token there, small assertions of identity in the face of systemic anonymity. The flickering lights cast long shadows that seem to move of their own accord, adding a sense of unease to the already claustrophobic atmosphere.

The cells serve as both refuge and prison, holding the dreams and despairs of those who call the lower decks their home. Despite the squalor, a sense of community prevails for those who dwell within the Habitation Cells of MOR-1, offering a stark contrast to the solitude of space outside.



:: Habitation Haven [poi] {"position":"1350,2000","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/habitationhaven.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Habitation Haven",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Habitation Haven</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
Things to do:
<<nobr>><<switch $HavenApartmentState>>
    <<case "none">>
        [[Inquire about apartment availability and prices. (00:15)|HabitationInquire][$timeadd = 15;$HavenApartmentState = "inquired"]]
    <<case "inquired">>
        <<if $player.credits >= 200>> <!-- Check for sufficient credits -->
            [[Sign a lease for an apartment. (00:45)|HabitationLease][$player.credits -= 200; $HavenApartmentState = "signed"; $timeadd = 45]]
        <<else>> <!-- Option to sign lease is grayed out if not enough credits -->
            <span class="disabledLink">Sign a lease for an apartment. (00:45 | Requires 200 credits)</span>
        <</if>>
    <<case "signed">>
        [[Enter your personal apartment space. (00:01)|HabitationApartment][$timeadd = 1]]
<</switch>><br>
<<if $HavenApartmentState is "signed">>
    [[Meet and socialize with your neighbors in the communal area. (00:30)|HabitationSocialize][$timeadd = 30]]
    <<else>>
        [[Meet and socialize in the communal area. (00:30)|HabitationSocialize][$timeadd = 30]]
<</if>><br>
Travel:<br>
    [[Return to the densely packed corridors of the Habitation Cells.|Habitation Cells][$timeadd = 5]]<br>
<</nobr>>
Amidst the utilitarian sprawl of the lower decks, Habitation Haven emerges as an oasis of personal sanctuary. The walls, painted in calming hues, hold the subtle hum of the station's life support systems—a reminder of the protective shell that separates humanity from the cold void beyond.

The air is tinged with a medley of scents from a hundred different homes, each doorway a portal to a private cosmos. Laughter leaks from the seams of these portals, weaving with the soft strains of music to create a tapestry of domesticity. Here, the station's heart beats not with the rhythm of machinery, but with the pulse of its people.

<span style="color: skyblue;"><<if $HavenApartmentState is "none">>A few units stand empty, their doors ajar, inviting new stories and new memories.<<elseif $HavenApartmentState is "inquired">>Your own inquiry into a place here lingers in your mind, a step toward making a mark on this communal canvas.<<elseif $HavenApartmentState is "signed">>Your signature on the lease has sealed a pact with this place, the threshold to your apartment now a boundary to a realm that is uniquely yours.<</if>></span>

For those who have made their homes within its confines, Habitation Haven offers a semblance of normalcy—a respite from the harsh realities of life on MOR-1. It is a haven indeed, where the weary can retreat and the spirited can commune, all under the watchful eye of Thomas Ralfot, guardian of this unlikely sanctuary.


:: HabitationApartment [safe] {"position":"1425,2125","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">><<set $LastHomeZone to "HabitationApartment">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/apartmentinterior.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Your Apartment",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Your Apartment</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<</nobr>>

Sleep:
[[Sleep for 1 hour.|HavenApartmentSleep][$player.fatigue -= 170; $timeadd = 60]]
[[Sleep for 2 hours.|HavenApartmentSleep][$player.fatigue -= 350; $timeadd = 120]]
[[Sleep for 3 hours.|HavenApartmentSleep][$player.fatigue -= 550; $timeadd = 180]]
[[Sleep for 4 hours.|HavenApartmentSleep][$player.fatigue -= 650; $timeadd = 240]]
[[Sleep for 5 hours.|HavenApartmentSleep][$player.fatigue -= 750; $timeadd = 300]]
[[Sleep for 6 hours.|HavenApartmentSleep][$player.fatigue -= 850; $timeadd = 360]]
[[Sleep for 7 hours.|HavenApartmentSleep][$player.fatigue -= 950; $timeadd = 420]]
[[Sleep for 8 hours.|HavenApartmentSleep][$player.fatigue -= 1000; $timeadd = 480]]

[[Rest and relax for a short while. (00:30)|HavenApartmentRest][$timeadd = 30]]
<span class="disabledLink">Access the terminal for news or entertainment. (Currently inoperative)</span>
[[Take a rejuvenating shower. (00:15)|HavenApartmentShower][$timeadd = 15]]
<span class="disabledLink">Cook a simple meal in the kitchenette. (Currently out of order)</span>

<<nobr>>
<!-- Other content... -->

Travel:<br>
<<if $player.filth > 800>>
    <span class="disabledLink">You feel too dirty to go out right now.</span>
<<else>>
    [[Step out into the community of the Habitation Haven.|Habitation Haven][$timeadd = 5]]
<</if>>
<</nobr>>


Your apartment in MOR-1 is a compact sanctuary amid the cramped habitation cells. The walls are utilitarian, the air recycled, but it's your space—a slice of privacy and quiet. The bed folds down with a creak, the kitchenette is stocked with the basics, and the shower awaits with the promise of cleanliness. The terminal glows softly, ready to link you to the rest of the station—or beyond.

As you settle in, the reality of life on MOR-1 embraces you; here in your own corner, you carve out a personal routine amongst the mechanisms of survival.



:: HabitationInquire [safe] {"position":"1175,2050","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/haveninquiries.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Habitation Haven - Inquiries",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Habitation Haven - Inquiries</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<</nobr>>

<<say 'Thomas Ralfot' setup.ImagePath+'/characters/minor/thomasralfot.jpg'>>"Welcome to Habitation Haven, potential tenant. I'm Thomas Ralfot, the manager here. Are you looking to rent one of our fine apartments? We have several units open, with a modest down payment of 200 credits."<</say>>

<<set $enoughCredits = $player.credits >= 200>>

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>\
<<if $enoughCredits>>\
    [["Yes, I'd like to rent an apartment. Here's the down payment. When can I move in?"|HabitationLease][$player.credits -= 200; $HavenApartmentState = "signed"; $timeadd = 45]]\
<<else>>\
    [["That sounds reasonable. I'll need some time to get the credits though."|Habitation Haven][$timeadd = 1]]
<</if>>
[["I'll think about it, thanks."|Habitation Haven][$timeadd = 1]]
[["This is outrageous! I'm not paying that much for a small box!"|Habitation Cells][$timeadd = 5]]
<</say>>


:: HabitationLease [safe] {"position":"1300,2200","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/apartmentinterior.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Your Apartment",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Your New Apartment</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<</nobr>>

<<say 'Thomas Ralfot' setup.ImagePath+'/characters/minor/thomasralfot.jpg'>>"Right this way, please. I think you'll find this unit quite accommodating, all things considered. It's not a palace, but it's a slice of solace in the sprawl of the Lower Decks."<</say>>

Thomas leads you through a series of narrow, dimly lit corridors, each turn bringing a mix of aromas ranging from enticingly home-cooked meals to the less savory scent of recycled air. Finally, he stops before a modest door, its number faintly glowing. A quick code entry, and you're ushered inside.

The apartment, a small marvel of efficiency, doesn't hide its worn edges or the faint stain in the corners — a life lived by many before you. The main room is sparse: a bed, folded neatly into the wall, a kitchenette with a hotplate and mini-fridge, and a station terminal/computer setup on a retractable arm over the bed. A window-sized screen offers a loop of serene natural vistas to counteract the claustral reality.

<<say 'Thomas Ralfot' setup.ImagePath+'/characters/minor/thomasralfot.jpg'>>"Here you have your basics: a place to sleep, a place to cook, and a terminal to stay connected to the goings-on. The bed's a bit stiff, but it'll ease up with use."<</say>>

You test the mattress, finding truth in Thomas' words — it's firm, utilitarian. The kitchenette looks serviceable, albeit with the bare minimum of culinary tools. The terminal flickers to life as you approach, its screen welcoming you with a pleasant chime.

A separate door reveals the bathroom, no larger than a closet but clean. The shower, a tight cylinder, promises a forceful spray thanks to the recycled water system in place. Efficiency is everything in a home like this.

<<say 'Thomas Ralfot' setup.ImagePath+'/characters/minor/thomasralfot.jpg'>>"The water's consistently hot, thanks to our local SNO2 heating systems. It's a touch cramped, but you'll find it does the job after a long stint in the ducts or out in the field."<</say>>

Thomas' explanation carries through the small, compact space as you nod along, taking in everything with a pragmatic eye. This will be home. It has to be.

After a few more tips on maintenance and a reminder that rent is due weekly, Thomas bids you farewell with a practiced smile and a clipboard under his arm, leaving you alone in the quiet of your new quarters.

[[Continue.|HabitationApartment][$timeadd = 5]]


:: HabitationSocialize [lowerdeckact] {"position":"1500,2000","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/habitationhaven.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Habitation Haven - Communal Area",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $habitationHavenEventsRecord>> <<set $habitationHavenEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $habitationHavenEventsRecord.today != _today>>
    <<set $habitationHavenEventsRecord.today to _today>>
    <<set $habitationHavenEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<!-- Create a list of available events that have not occurred today -->
<<set _availableEvents to []>>
<<for _i to 1; _i <= 10; _i++>>
    <<if not $habitationHavenEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<!-- Select a random event from the available ones or default if none are available -->
<<if _availableEvents.length>> <!-- If there are still available events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $habitationHavenEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available events -->
    <<set _randomEvent to 0>> <!-- Default to the default event -->
<</if>>

<!-- Area Header -->
<h2 id="socializeTitleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Communal Area - Socialize</span></h2>
<hr id="socializeTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="socializeLocationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="socializeLocationHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Common introductory paragraph for all events in Habitation Haven -->
<p>
    The atmosphere in Habitation Haven is always a reflection of the broader currents flowing through MOR-1.<br>
    Today, the communal area is <<if $worldEconomyScore >= 800>><span style="color: green;">buzzing with a sense of flourishing commerce</span><<elseif $worldEconomyScore >= 600>><span style="color: lightgreen;">steady with the hum of stable trade</span><<elseif $worldEconomyScore >= 400>><span style="color: orange;">tinged with the anxiety of an economy struggling to keep up</span><<elseif $worldEconomyScore >= 200>><span style="color: red;">echoing the desperation of a crumbling financial system</span><<else>><span style="color: darkred;">heavy with the silence of a collapsed market</span><</if>>.
    Amidst this, the danger level remains ever-present, as a <<if $dangerLevelScore >= 800>><span style="color: blue;">low murmur</span><<elseif $dangerLevelScore >= 600>><span style="color: lightgreen;">moderate tension</span><<elseif $dangerLevelScore >= 400>><span style="color: orange;">palpable threat</span><<else>><span style="color: red;">constant state of high alert</span><</if>> underscores daily life here in the cells.
</p>

<!-- Random Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Random Event 1 -->
        <p>While sharing a table with a few off-duty dock workers, you're drawn into a card game with small stakes. Luck is on your side, and you leave with a bit more credit than you came with.</p><br>
        <<set $player.credits += 15>>
        <<creditchange 15 "positive">><br>

    <<case 2>> <!-- Random Event 2 -->
        <p>You overhear a heated argument about the recent docking tariffs, and despite trying to keep out of it, you're pulled into the fray. It's a tiresome exchange, and you can't help feeling worn out afterward.</p><br>
        <<set $player.mood -= Math.round($player.mood * 0.02)>>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">><br>

    <<case 3>> <!-- Random Event 3 -->
        <p>A small child kicks a ball your way, and you spend the next hour engaged in an impromptu game of keep-away with the station's children. It's exhausting but fun, and you feel invigorated by the activity.</p><br>
        <<set $player.health += Math.round($player.health * 0.05) + 5>>
        <<changemoods "health" "major" "PosEffectOnPlayer">><br>

    <<case 4>> <!-- Random Event 4 -->
        <p>The community has gathered to celebrate a wedding. You're welcomed into the festivities, sharing in the communal feast and joyous dancing. The event leaves your spirit lifted.</p><br>
        <<set $player.mood += Math.round($player.mood * 0.05) + 20>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">><br>

    <<case 5>> <!-- Random Event 5 -->
        <p>An old timer, a veteran miner from the asteroid belts, regales anyone who'll listen with tales of close calls and rich finds. The stories captivate you, and you leave feeling a renewed sense of adventure.</p><br>
        <<set $player.stress += Math.round($player.stress * 0.02)>>
        <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>

    <<case 6>> <!-- Random Event 6 -->
        <p>A malfunctioning cleaning drone whirs erratically through the area, spraying cleaning fluid over your clothes. It's a minor inconvenience, but a reminder that the station's tech isn't always reliable.</p><br>
        <<set $player.stress -= Math.round($player.stress * 0.02)>>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 7>> <!-- Random Event 7 -->
        <p>A couple of traders are arguing about the best route to avoid the recent pirate activity. You chime in with your own knowledge, earning their respect and potentially useful trade route information.</p><br>
        <<set $player.trauma += Math.round($player.trauma * 0.02)>>
        <<changemoods "trauma" "minor" "NegEffectOnPlayer">><br>

    <<case 8>> <!-- Random Event 8 -->
        <p>It's someone's birthday, and the communal area is filled with the sweet scent of baked goods. A generous neighbor offers you a piece of cake, and for a moment, life on MOR-1 feels almost homely.</p><br>
        <<set $player.mood += Math.round($player.mood * 0.05) + 15>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">><br>

    <<case 9>> <!-- Random Event 9 -->
        <p>A sudden power dip leaves the communal area in darkness. The station's emergency lights kick in, casting eerie shadows and causing a moment of panic until power is restored.</p><br>
        <<set $player.mood -= Math.round($player.mood * 0.02)>>
        <<set $player.stress -= Math.round($player.stress * 0.02)>>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">><br>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 10>> <!-- Random Event 10 -->
        <p>You find a datapad left behind on a bench. After a quick scan for the owner, you decide to turn it into the lost and found. The attendant thanks you and discretely slips you a few credits for your honesty.</p><br>
        <<set $player.credits += 25>>
        <<creditchange 25 "positive">><br><br>

    <<default>> <!-- Default Event for Habitation Haven -->
<p>
    With all the day's dramas played out, Habitation Haven now settles into a rhythm that feels almost normal. A <<if $worldEconomyScore >= 800>><span style="color: green;">flourishing</span><<elseif $worldEconomyScore >= 600>><span style="color: lightgreen;">stable</span><<elseif $worldEconomyScore >= 400>><span style="color: orange;">struggling</span><<elseif $worldEconomyScore >= 200>><span style="color: red;">crumbling</span><<else>><span style="color: darkred;">collapsed</span><</if>> economy makes itself known through the variety and quality of goods being shared among neighbors, from <<if $worldEconomyScore >= 600>>fresh hydroponics produce<<?elseif $worldEconomyScore >= 400>>stockpiled dry goods<<?else>>rationed nutrient packs<<endif>>.<br>
    Despite the <<if $dangerLevelScore >= 800>><span style="color: blue;">low</span><<elseif $dangerLevelScore >= 600>><span style="color: lightgreen;">moderate</span><<elseif $dangerLevelScore >= 400>><span style="color: orange;">high</span><<else>><span style="color: red;">extreme</span><</if>> danger level outside, inside the communal area there is a sense of <<if $dangerLevelScore >= 600>>safety in numbers,<<else>>shared risk and camaraderie,<<endif>> with residents trading stories of near-misses or successful forays beyond the cell's boundaries.</p><br>
<</switch>><br>
<</nobr>>
<!-- Continue Link -->
[[Continue.|Habitation Haven][$timeadd = 5]]




:: HavenApartmentRest [safe] {"position":"1400,2250","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">><<addmins $timeadd>>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/apartmentinterior.jpg'>>
<<set $location to {
    name: "Meltisar System, MOR-1, Your Apartment - Resting",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="restTitleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Moment of Respite</span></h2>
<hr id="restTitleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="restLocationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="restLocationHr" style="margin-top: 5px; margin-bottom: 5px;">


<!-- Applying fatigue reduction and mood improvement for resting -->
<<set $player.fatigue += 10>> <!-- As higher fatigue means less tired -->
<<set $player.mood += Math.round($player.mood * 0.15)>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">><br>
        <<set $player.stress -= Math.round($player.stress * 0.15)>>
        <<changemoods "stress" "major" "PosEffectOnPlayer">><br>
        <<set $player.trauma -= Math.round($player.stress * 0.02)>>
        <<changemoods "trauma" "minor" "PosEffectOnPlayer">><br>
<<addmins 30>>
<</nobr>>
Within the quiet confines of your apartment, you recline in a makeshift nook, creating a space of tranquility amidst the pressures of MOR-1's lower decks. In this brief hiatus, a <<if $player.stress >= 600>><span style="color: lightgreen;">gentle calm suffuses your being</span><<elseif $player.stress >= 400>><span style="color: yellow;">manageable peace settles in</span><<elseif $player.stress >= 200>><span style="color: orange;">tense relaxation grips you</span><<else>><span style="color: red;">stressful thoughts reluctantly subside</span><</if>>, providing some much-needed <<if $player.fatigue >= 600>><span style="color: lightgreen;">rest for your alert mind</span><<elseif $player.fatigue >= 400>><span style="color: yellow;">respite for your tiredness</span><<elseif $player.fatigue >= 200>><span style="color: orange;">reprieve for your exhaustion</span><<else>><span style="color: red;">momentary escape for your depleted energy</span><</if>>.

Through the subtle vibrations of the station's life-support systems, you find a rhythm to your breathing—a meditative reprieve that soothes the mind and revitalizes the spirit.

For a fleeting moment, the station's ever-churning economy and buzzing danger levels fade into insignificance. Here, you are shielded from demands and threats alike, albeit temporarily.

[[Continue.|HabitationApartment][$timeadd = 1]]


:: HavenApartmentShower [safe] {"position":"1525,2250","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">><<addmins $timeadd>>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/apartmentshower.jpg'>>
<<set $location to {
    name: "Meltisar System, MOR-1, Your Apartment - Showering",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="showerTitleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Invigorating Shower</span></h2>
<hr id="showerTitleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="showerLocationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="showerLocationHr" style="margin-top: 5px; margin-bottom: 5px;">
<</nobr>>


<<addmins 15>>

The water cascades down in a soothing torrent, the warmth enveloping you in a cocoon away from the cold metal of MOR-1. Each drop helps wash away the <<if $player.filth < 200>><span style="color: red;">heavy grime of hard labor</span><<elseif $player.filth < 400>><span style="color: orange;">dust of a long day</span><<elseif $player.filth < 600>><span style="color: yellow;">traces of work</span><<else>><span style="color: green;">minimal residue</span><</if>>, leaving your skin feeling rejuvenated and your spirit lifted.
<<set $player.filth to 0>> <!-- Player is now clean -->

As steam fills the small enclosure, you take a moment to appreciate the simple luxury of hot water, <<if $player.stress >= 600>><span style="color: green;">easily letting your worries dissolve</span><<elseif $player.stress >= 400>><span style="color: yellow;">steaming away stress</span><<elseif $player.stress >= 200>><span style="color: orange;">calming your frazzled nerves</span><<else>><span style="color: red;">as you struggle to relax</span><</if>> in the mist.

Feeling fresher and with renewed clarity, you step out onto the cool tile, ready to face whatever challenges the station might hold with a <<if $player.mood >= 600>><span style="color: green;">bright outlook</span><<elseif $player.mood >= 400>><span style="color: yellow;">calm disposition</span><<elseif $player.mood >= 200>><span style="color: orange;">stabilized demeanor</span><<else>><span style="color: red;">need for more uplifting activities</span><</if>>.

[[Continue.|HabitationApartment][$timeadd = 1]]



:: HavenApartmentSleep [safe] {"position":"1550,2125","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/apartmentinterior.jpg.jpg'>>
<<set $location to {
    name: "Meltisar System, MOR-1, Your Apartment - Resting",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="sleepTitleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Restful Slumber</span></h2>
<hr id="sleepTitleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="sleepLocationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="sleepLocationHr" style="margin-top: 5px; margin-bottom: 5px;">

<<set _tempTimeAdd = $timeadd>> <!-- Store $timeadd as a temporary variable -->
<<set $player.health += ($timeadd / 60) * 15>> <!-- Sleep improves health slightly -->
<<set $player.fatigue -= 25 * (_tempTimeAdd / 60)>>
<<set $player.mood += 10 * (_tempTimeAdd / 60)>>
<<set $player.health += 5 * (_tempTimeAdd / 60)>>
<<set $player.mood += 5 * (_tempTimeAdd / 60)>>
<<set $player.stress -= 5 * (_tempTimeAdd / 60)>>
<<set $player.trauma -= 5 * (_tempTimeAdd / 60)>>
<<addmins $timeadd>>
<</nobr>>

As the lights dim to a gentle twilight, the familiar creak of the fold-down bed offers a comforting prelude to sleep. You lie back, allowing the fatigue of station life to ebb away as you drift into slumber. Your breath syncs with the quiet hum of the ventilation system, each inhale drawing in the recycled yet reassuring scent of your own haven.

<<if $player.fatigue < 400>> <!-- Dream snippet triggered only if the player is quite fatigued -->
    <p>Your dreams are vivid, a collage of memories and desires. You find yourself wandering through a market of luminescent stalls, each vendor an alien with wares never seen before. The chatter is a symphony of unknown languages, and you haggle with a three-eyed merchant over a shimmering artifact, a deal sealed with a customary exchange of riddles.</p>
<</if>>

Awakening from your rest, whether dreamless or eventful, you feel a renewed vigor. Your body feels lighter, healed by the respite, and your mind is clearer, ready to face the challenges ahead.

[[Rise and Shine.|HabitationApartment][$timeadd = 5]]



:: Internal Affairs Bureau [poi] {"position":"2625,1675","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">><<setBackground setup.ImagePath+'/locs/melt/mor1/mid/midinternalaffairs.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Internal Affairs Bureau",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Internal Affairs Bureau</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
Places of Interest:
There is nothing to do here at the moment.

Travel:

The Internal Affairs Bureau is the silent, watchful conscience of MOR-1’s security apparatus. In this department, the gleam of polished floors and the hushed atmosphere stand in stark contrast to the gritty working conditions of the lower decks. Authorized personnel move with purpose, their eyes sharp and analytical, knowing that even the smallest action can cause ripples through the station's delicate power balance.

Behind closed doors, investigations are meticulously pieced together, revealing the hidden transgressions of those tasked with maintaining order. It's a place of secrets and revelations, where loyalty is to the truth, even when it's inconvenient to the station's narrative.

[[Return to the Security Command Center.|Security Command Center][$timeadd = 5]]

The Bureau is an island of principle in a sea of gray morality. With no further paths to explore here, the only route is back through the imposing doors to the Security Command Center, where the line between watcher and watched blurs.



:: Intro2 {"position":"625,400","size":"100,100"}
After examining your reflection, you turn to the locker. It's neatly divided into compartments, all securely locked save for one near the top. In this compartment, a sleek smartwatch catches your eye. <<playerp>>

As you pick it up, the watch lights up and a voice emanates from it: 
<span style="color: lightblue;">"Initializing for User: <<= $player.name >>... Smart HUD functions activating."</span> 
Almost instantly, a holographic display appears before your eyes, overlaying the real world. <<set $PlayerIntro2 to 1>><<updatebar>>

The display reveals today's date, <span style="color: lightblue;"><<date>></span>, and the current time, <span style="color: lightblue;"><<time12hr>></span>. 

It's a vivid reminder of the advanced technology at your fingertips and the mysteries that await. You study the hologram, hoping for clues to understand your situation better.

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>\
[[Hello?|Intro3][$playerIntro3 = 1;$timeadd = 1]]
[[Anyone in there?|Intro3][$playerIntro3 = 2;$timeadd = 1]]
[[Is this thing on?|Intro3][$playerIntro3 = 3;$timeadd = 1]]
[[Computer, sitrep, now!|Intro3][$playerIntro3 = 4;$timeadd = 1]]<</say>>


:: Intro3 {"position":"625,275","size":"100,100"}
<<nobr>><<playerp>>
<<if $playerIntro3 is 1>>
<<maincomputer>>"Greetings, User," the smartwatch replies in a calm tone.<</maincomputer>>
<<elseif $playerIntro3 is 2>>
<<maincomputer>>"Presence confirmed. It's nice to have someone to talk to finally," the watch responds warmly.<</maincomputer>>
<<elseif $playerIntro3 is 3>>
<<maincomputer>>"Affirmative. This 'thing' is fully operational," the watch answers with a hint of dryness.<</maincomputer>>
<<else>>
<<maincomputer>>"Situation report: All systems functional," the watch replies with a concise tone.<</maincomputer>>
<</if>><<addmins $timeadd>><<set $playerIntro4 to 1>><<updatebar>><</nobr>>\
A new hologram appears in front of you, with a biometrics readout and a 3D image of yourself. Various statistics, including your <span style="color: green;">health</span>, <span style="color: yellow;">mood</span>, <span style="color: yellow;">stress</span>, <span style="color: yellow;">trauma</span>, <span style="color: lightgreen;">fatigue</span>, and <span style="color: lightgreen;">power reserves</span>, populate the display. The comprehensive overview of your current state is slightly concerning in just how much data the watch is collecting from your body.

<<maincomputer>>"The cold storage release process has been completed. You were rescued from a cryopod. The duration of your sleep and the specifics of your rescue are currently unknown.<</maincomputer>>
There is a moment of silence as you take in the information. The atmospheric filtration system cycles several times, and the hum of the station's systems feel deafening.
Well, it could be worse, couldn't it? You could be dead.
Your new watch lights up again, and a strange tingling sensation can be felt in your wrist.

<<nobr>>
<<maincomputer>>User information has been retrieved based on biometric implant scan data. Current location: Meltisar, Main Orbital Relay - 1, Lower Decks, Cold Storage. Note: Your credit balance is zero, and you have incurred debt for storage and usage fees."<</maincomputer>>

<<set $combinedDifficultyScore = ((2000 - $worldEconomyScore - $dangerLevelScore) / 200)>>
<<set $player.debt = Math.max(50000, Math.min(50000000, $combinedDifficultyScore * 2000000))>>
<</nobr>>\
<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>\
[[How much debt exactly? Am I in danger?|Intro4][$playerIntro5 = 1;$timeadd = 1]]
[[Great, I woke up and I'm already broke?|Intro4][$playerIntro5 = 2;$timeadd = 1]]
[[Does this place have debt slavery?|Intro4][$playerIntro5 = 3;$timeadd = 1]]
[[Fuck!|Intro4][$playerIntro5 = 4;$timeadd = 1]]<</say>>


:: Intro4 {"position":"625,150","size":"100,100"}
<<nobr>><<playerp>>
<<if $playerIntro5 is 1>>
<<maincomputer>>"Your current debt stands at <<formatNumber $player.debt>> credits. While significant, it's not an immediate danger to your well-being. However, I advise addressing it at your earliest convenience," the smartwatch advises pragmatically.<</maincomputer>>
<<elseif $playerIntro5 is 2>>
<<maincomputer>>"Regrettably, yes. Financial management is not within my programming, but I suggest formulating a repayment plan soon," the watch responds sympathetically.
"Your current debt stands at <<formatNumber $player.debt>> credits. While significant, it's not an immediate danger to your well-being.<</maincomputer>>
<<elseif $playerIntro5 is 3>>
<<maincomputer>>"Debt slavery is strictly prohibited on Meltisar. However, your debt obligations need to be met. I recommend seeking employment opportunities," the watch informs you in a matter-of-fact tone.
"Your current debt stands at <<formatNumber $player.debt>> credits. While significant, it's not an immediate danger to your well-being.<</maincomputer>>
<<else>>
<<maincomputer>>"I understand your frustration. However, expressing discontent will not resolve your financial predicament. A plan of action is required," the watch responds with a hint of sternness.
"Your current debt stands at <<formatNumber $player.debt>> credits. While significant, it's not an immediate danger to your well-being."<</maincomputer>>
<</if>><<addmins $timeadd>><<set $playerIntro5 to 1>><<updatebar>><</nobr>>
A soft chime from your watch draws your attention to an incoming message. You glance at the screen, seeing an alert about a job opportunity nearby. "Job posting: Service personnel at local restaurant. Payment: 5 credits per hour." 

It seems like a potential start to tackle your debt. Until you think about the numbers for more than half a second.

<<nobr>><<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"With my current debt, a 40-hour work week, and estimated living costs, exactly how long will that take to pay off?"
<</say>>
<<nobr>>
<<set $weeklyEarnings = 5 * 40>>
<<set $weeklyNetIncome = $weeklyEarnings - 175>>
<<set $weeksToRepay = Math.ceil($player.debt / $weeklyNetIncome)>>
<</nobr>>
<<maincomputer>>"Calculating based on your current debt of <<= $player.debt.toLocaleString() >> credits, assuming an average earnings of 5 credits per hour, and estimated weekly living costs of 175 credits... One moment please."<</maincomputer>><</nobr>>
You wait patiently, but the fact that it's taking more than a few seconds to process is ridiculous. You already know that based on the job listing, you might as well just forget about ever repaying anything.

<<nobr>><<maincomputer>>"You will require approximately <span style="color: red;"><<formatNumber $weeksToRepay>></span> weeks to repay the debt, provided there are no additional expenses or changes in income."<</maincomputer>>
<<set $yearsToRepay = $weeksToRepay / 52>>
<<set $yearsToRepay = $yearsToRepay.toFixed(0)>><!-- There are 52 weeks in a year -->
<</nobr>><<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"That's roughly <<formatNumber $yearsToRepay>> years... That's not happening."<</say>>
There is a sympathetic beep from the computer, and you sigh. You look around the room once again. Other than the door, there doesn't appear to be another way out.

<<maincomputer>>"User mathmatics core appears to be operating satisfactorily. I have accessed the local job market with multiple listings that offer better rates of return; however, they require specialized skills. Shall I display them?"<</maincomputer>>\
<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>\
[[Is that required for me to get out of here?|Intro5][$playerIntro6 = 1;$timeadd = 1]]
[[I need to think about this.|Intro5][$playerIntro6 = 2;$timeadd = 1]]
[[Is there anything else I can do besides work?|Intro5][$playerIntro6 = 3;$timeadd = 1]]
[[Just give me some time to process this.|Intro5][$playerIntro6 = 4;$timeadd = 1]]<</say>>


:: Intro5 {"position":"750,275","size":"100,100"}
<<nobr>><<addmins $timeadd>><<updatebar>><<if $playerIntro6 is 1>>
    <<maincomputer>>"Securing employment is not a prerequisite for station access. However, it is advisable for addressing your financial obligations."<</maincomputer>>
    <br>
    The cool hum of the main computer's voice echoes in the sterile, dimly lit room, a stark reminder of your current confinement. The walls, a seamless expanse of metal, hold a clinical detachment that seems to mirror your isolation.
    <br><br>
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"Not much I can do while locked in here, right?"<</say>>
<<elseif $playerIntro6 is 2>>
    <<maincomputer>>"Understood. Calculating your options is a prudent course of action."<</maincomputer>>
    <br>
    The cool hum of the main computer's voice echoes in the sterile, dimly lit room, a stark reminder of your current confinement. The walls, a seamless expanse of metal, hold a clinical detachment that seems to mirror your isolation.
    <br><br>
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"I'm still trapped in this room, though."<</say>>
<<elseif $playerIntro6 is 3>>
    <<maincomputer>>"Exploring all available options is recommended. Employment is the most direct method to alleviate debt."<</maincomputer>>
    <br>
    The cool hum of the main computer's voice echoes in the sterile, dimly lit room, a stark reminder of your current confinement. The walls, a seamless expanse of metal, hold a clinical detachment that seems to mirror your isolation.
    <br><br>
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"But I'm still stuck in here, so that's a problem."<</say>>
<<else>>
    <<maincomputer>>"Processing time is essential for informed decision-making. I am here to assist when you are ready."<</maincomputer>>
    <br>
    The cool hum of the main computer's voice echoes in the sterile, dimly lit room, a stark reminder of your current confinement. The walls, a seamless expanse of metal, hold a clinical detachment that seems to mirror your isolation.
    <br><br>
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"First step, getting out of this room, though."<</say>><</if>><</nobr>>\
<<maincomputer>>"You may access a local bulletin board for job listings from any station terminal. However, your identification is required."<</maincomputer>>
The locker before you clicks and whirs as its locking mechanism disengages. The door swings open with a faint creak, revealing its contents bathed in soft light. You approach cautiously, as if the items within are relics of a former life.

<<maincomputer>>"I have now unlocked your locker containing your ID card and belongings."<</maincomputer>>
You reach inside and retrieve the ID card. Its surface is sleek and cool to the touch, displaying your name <<print $player.name>>, etched alongside biometric data that confirms your identity. A designation label marks you as 'Refugee,' a status you suspect would be benefical to shed.

As your fingers trace over the card's embedded chip, you also pull out a standard skinsuit. It's lightweight yet durable, designed for utility rather than comfort. The fabric shifts and conforms to your movements as you slip into it. The absence of a helmet leaves your face exposed, a vulnerability you're acutely aware of.

<<maincomputer>>"With your identification, you will have access to public areas on the station. This will facilitate your job search and movement."<</maincomputer>>
You take one last look at the spartan room that has been your temporary cell. With ID card in hand and skinsuit donned, you're ready to step into the corridors of the station — into uncertainty, but also possibility.

[[Explore the Station.|Cold Storage][$timeadd = 1]]


:: JaxAskPeople [conversation] {"position":"850,750","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/commonarea.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks Common Area",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Lower Decks Common Area</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"Who are the people around here?"<</say>>
<<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"The Lower Decks? It's a melting pot. You've got your traders, drifters, and dreamers. Then there are those who've hit rock bottom, and those who make a living off them. It's a place where fortunes can turn on a credit chip."<</say>>

<p>As you glance around, you see a diverse crowd. There are groups huddled in intense conversation, lone figures skulking in the shadows, and workers hauling cargo. The hum of activity is punctuated by the occasional shout or burst of laughter.</p>

<p>Among the faces, you notice the wary eyes of those who've seen too much, the hopeful gazes of newcomers, and the sharp glances of those sizing up opportunities—or threats.</p>

<<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"Everyone's got an angle here. Trust is earned, not given. If you're looking to make connections, show you can be useful. But watch your back; not everyone plays by the rules."<</say>>

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"Thanks for the heads-up, Jax."<</say>>

[[Continue.|JaxChat]]
<</nobr>>



:: JaxAskStation [conversation] {"position":"950,625","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/coldstoragedoor.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Station Overview",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Station Overview</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"Can you tell me more about the station?"<</say>>
    <<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"MOR-1 isn't just a spaceport; it's a relic from the expansion era, built to last and packed with history. Here in the Lower Decks, you'll find a network of corridors, markets, and makeshift homes. It's rough, but it's lively."<</say>>
    <p>"Above these decks, the station changes face. The Mid Decks are bustling with commerce, while the Upper Decks are for the elite. Despite its age, MOR-1 remains a vital hub, its core pulsating with life."</p>
    <<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"The station's got layers, like an old city. Each level has its own secrets. You've got to be careful, though. Not everyone here is friendly, and not every corner is safe."<</say>>
    <<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"Speaking of secrets, ever been to cold storage? It's a part of the station not many talk about."<</say>>
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"Cold storage? Can't say that I have. What's down there?"<</say>>
    <<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"It's an old section, used back in the early days for stasis. Now, it's mostly abandoned, or so they say. Some believe it's haunted. Station systems going haywire..."<</say>><br>
    For a moment he looks like he's lost in a memory before he snaps out of it.
    <br><br>
    <<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"You don't mind if I get a bit... detailed about it, do you?"<</say>>
       <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"I don't mind, Jax. Go on."<</say>>
        <<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"Well, rumor has it that cold storage is where they kept things... or people... that needed to be forgotten. Some say you can still hear whispers if you listen closely."<</say>>
               <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"No one broke in? You said there wasn't any security."<</say>>
               <br>
               Jax shakes his head.
               <br><br>
        <<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"Try breaking down a station infra door, and they'll actually show up. Guns blazing. So it's not really advised. Still, people could get in if they wanted, just I doubt anyone thought it was worth the effort. Nothing valuable in this section."<</say>><br>
        There's a lull in the conversation before he continues.<br><br>
        <<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"Keep your wits about you, and with your luck you'll find opportunities in every corner. Just remember, not all that glitters is gold, and not every shadow hides danger. Learn to navigate both, and you might just make it here."<</say>>
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"Thanks, Jax. I'll keep that in mind."<</say>>
    [[Continue.|JaxChat]]
<</nobr>>


:: JaxAskWork [conversation] {"position":"950,525","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/workareas.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks, Cold Storage",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Lower Decks</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"How can I earn some credits quickly?"<</say>>
<<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"Quick credits? Down here in the Lower Decks, you've got options, but they ain't all pretty. Lower Engineering's always looking for parts or help with a workshift. It's hard graft, but it pays. Bars like Mariners Rest are good for overhearing things... opportunities."<</say>>

<<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"The Promenade's got a few spots worth checking out, too. Nebula Noodles for a quick shift. Patch-It Pod's in the Hab Cells, that's also decent gig. Fix up some gear, sell it on. You can go through the recyclers for free stuff, find the gems... then trade them on up at Grafter's Gear for better things."<</say>>

<<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"The Grafter's a good sort, always needs scrap. Trade it for parts, then flip those at the Wharfside Tech Emporium for Cyberware. Wheel and deal, and you'll make a profit."<</say>>

<p>Jax leans in closer, his voice dropping to a whisper.</p>

<<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"But if you're feeling brave—or desperate—the Black Market Bazaar's where the real money's at. It's risky, though. You didn't hear that from me."<</say>>

<<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"There's a fabricator at the wharf too, but that's for the high rollers. Licensing fees'll bleed you dry unless you've got creds to burn. Keep your eyes peeled, though. Opportunities are like vents on a ship—there's always one open somewhere."<</say>>

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>[[Thanks for the tips, Jax. I'll be careful.|JaxChat]]<</say>>
<</nobr>>


:: JaxChat [conversation] {"position":"950,725","size":"100,100"}
 <<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/coldstoragedoor.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Station Overview",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Station Overview</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>Jax nods to you as you come back up to him.</p>
<<say 'Jax' setup.ImagePath+'/characters/minor/jax.jpg'>>"Got some more questions?"<</say>>
<<say $player.name setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>
    [[Can you tell me more about the station?|JaxAskStation][$timeadd += 5]]<br>
    [[Who are the people around here?|JaxAskPeople][$timeadd += 5]]<br>
    [[How can I earn some credits quickly?|JaxAskWork][$timeadd += 5]]<br>
    [[I'm good. Thanks for the advice. I'll see you around.|Cold Storage][$timeadd += 5]]
<</say>>
<</nobr>>


:: JaxIntro [conversation] {"position":"850,650","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/coldstoragedoor.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Cold Storage Exit",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Cold Storage Exit</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">


Stepping out of the pristine confines of cold storage, you're immediately struck by the disarray of the station. The corridor is grimy, the walls streaked with years of neglect. The air carries a heavy scent of oil and stale sweat—a stark contrast to the sterile chill you've left behind.

A figure detaches itself from the shadows, their attire a patchwork of scavenged materials. They eye you with a mix of surprise and opportunism, a half-smirk playing on their lips.
<br><br>
<<say '???' setup.ImagePath+'/characters/minor/jax.jpg'>>"Ain't often we see folks stroll outta there. You must've got a story to tell. Or maybe you're just lucky."<</say>>
<br>
The stranger's gaze lingers on you, as if trying to read your history in the lines of your face.
<br><br>
<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"I... I'm not sure what I'm doing, to be honest. Just trying to get my bearings."<</say>>
<br>
The scavenger chuckles, shaking their head with a mix of amusement and disbelief.
<br><br>
<<say '???' setup.ImagePath+'/characters/minor/jax.jpg'>>"Well, if you're planning on sticking around, you'll need credits. And fast. Find somewhere to crash or cough up for a cell in the Habitation Cells. But be careful—lower decks aren't for the faint-hearted."<</say>>

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"What about security?"<</say>>
<br>
The scavenger's laugh is a sharp bark in the quiet corridor.
<br><br>
<<say '???' setup.ImagePath+'/characters/minor/jax.jpg'>>"Security? That's a good one. You're looking at the closest thing to it. Keep your eyes open and you might just stay out of trouble."<</say>>
<br>
The scavenger extends a hand, the smirk now a full-fledged grin.
<br><br>
<<say 'Jax Weaver' setup.ImagePath+'/characters/minor/jax.jpg'>>"Name's Jax. Jax Weaver."<</say>>
<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"<<=$player.name>>. At least I'm pretty sure."<</say>><br>
You hesitantly shake his hand. At least the first person you found was friendly. In the distant a low murmur of humanity beckons, hinting there are far more people to meet than just Jax.
<br><br>
<<say 'Jax Weaver' setup.ImagePath+'/characters/minor/jax.jpg'>>"Not the first around here with memory problems. You lot show up a lot. Like I said... the 'decks can be a dangerous place."<</say>>
<br>
He nods toward the room you came out of, the sliding door still humming as it waits for you to move away.
<br><br>
<<say 'Jax Weaver' setup.ImagePath+'/characters/minor/jax.jpg'>>"You mind if I check it out after you go? That place has been sealed off, new 'holes that aren't taken are hard to find 'round here."<</say>>

<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"Sure, doesn't belong to me, knock yourself out."<</say>><br>
<br>
He smiles and nods at you.
<br><br>
<<say 'Jax Weaver' setup.ImagePath+'/characters/minor/jax.jpg'>>"Got any questions for me? I can answer them for you now, or if I'm still around you can check back."<</say>>

<<say $player.name setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>
    [[Can you tell me more about the station?|JaxAskStation][$timeadd += 5]]<br>
    [[Who are the people around here?|JaxAskPeople][$timeadd += 5]]<br>
    [[How can I earn some credits quickly?|JaxAskWork][$timeadd += 5]]<br>
    [[I'm good. Thanks for the advice. I'll see you around.|Cold Storage][$timeadd += 5]]
<</say>>

<</nobr>>


:: Journal [noreturn safe menu nobr] {"position":"1200,175","size":"100,100"}
<<set _startDate = new Date(3562, 2, 17, 3, 24)>>  /* Start date */
<<set _currentDate = $gameDate>>  /* Current game date */
<<set _timeDiff = _currentDate - _startDate>>  /* Time difference in milliseconds */
<<set _days = Math.floor(_timeDiff / (1000 * 60 * 60 * 24))>>  /* Total days passed */
<<set _months = Math.floor(_days / 30)>>  /* Approximate months passed */
<<set _years = Math.floor(_months / 12)>>  /* Years passed */
<<set _remainingMonths = _months % 12>>  /* Remaining months after subtracting years */
<<set _remainingDays = _days % 30>>  /* Remaining days after subtracting months */

You have been surviving for:
<<set _timeSurvived = "">>
<<if _years > 0>>
    <<set _timeSurvived += _years + " year(s)">>
    <<if _remainingMonths > 0 or _remainingDays > 0>><<set _timeSurvived += " and " >><</if>>
<</if>>
<<if _remainingMonths > 0>>
    <<set _timeSurvived += _remainingMonths + " month(s)">>
    <<if _remainingDays > 0>><<set _timeSurvived += " and " >><</if>>
<</if>>
<<if _remainingDays > 0>>
    <<set _timeSurvived += _remainingDays + " day(s)">>
<</if>>
<<print _timeSurvived>> since your journey began.

<<print "Today's Date: " + window.GameMonths[_currentDate.getMonth()] + " " + _currentDate.getDate() + ", " + _currentDate.getFullYear()>>

<br>
<!-- Return Link -->
<<link "Return" $return>><</link>>


:: LDBMCriminalHitman [event nobr] {"position":"2075,1200","size":"100,100"}
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/events/hitman.jpg'>>
<<addmins $timeadd>> <!-- Updates the in-game clock based on previously set timeadd -->
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: lightblue; font-weight: bold; font-size: 24px;">Hitman</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">

<p>The battle is fierce, and you're forced to use every trick at your disposal to survive. The hitman is relentless, but eventually, you gain the upper hand and they flee into the darkness from which they came.</p>
    <p>Exhausted and injured, you realize this was no random encounter. Someone wants you out of the picture, and they're willing to pay a high price to see it done. The Lower Decks have just become even more dangerous for you.</p>
    <<set $player.health -= Math.round($player.health * 0.07 + 20)>>
    <<set $player.stress += Math.round($player.stress * 0.05 + 20)>>
    <<changemoods "health" "major" "NegEffectOnPlayer">>
    <<changemoods "stress" "major" "NegEffectOnPlayer">>
    
    <br><br>
        <<link "Back to your quarters." $LastHomeZone>><</link>>
    <br><br>
    TODO: Implement combat system


:: LDBMCriminalPickpocket [event nobr] {"position":"2200,1200","size":"100,100"}
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/events/pickpocket.jpg'>>
<<addmins $timeadd>> <!-- Updates the in-game clock based on previously set timeadd -->
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: lightblue; font-weight: bold; font-size: 24px;">Pickpocket!</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">

<p>The realization hits hard; in the Lower Decks, every credit counts. You curse under your breath, vowing to be more vigilant. The thief is long gone, lost in the sea of faces that crowd the marketplace.</p>
    <p>With a heavy heart, you make a mental note of the loss and push forward. The encounter has been costly, and not just in credits. Your confidence has taken a hit, and it will take time to rebuild.</p>
    <<set $player.stress += Math.round($player.stress * 0.03 + 10)>>
    <<set $player.credits -= 75>>
    <<changemoods "stress" "minor" "NegEffectOnPlayer">>
    <<creditchange 75 "negative">>
    
    <br><br>
        <<link "Back to your quarters." $LastHomeZone>><</link>>
     <br><br>
    TODO: Implement combat system


:: LDBMCriminalSkirmish [event nobr] {"position":"2175,1075","size":"100,100"}
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/events/criminalshoot.jpg'>>
<<addmins $timeadd>> <!-- Updates the in-game clock based on previously set timeadd -->
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: lightblue; font-weight: bold; font-size: 24px;">Criminal Skirmish</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">

<p>The skirmish is brief but intense. You manage to hold your own, but not without sustaining a few bruises and scrapes. As the smugglers retreat, you take stock of your injuries and the time lost.</p>
    <p>It's a stark reminder that in the Lower Decks, violence is a language spoken with swift and brutal eloquence. You've survived this time, but the encounter leaves you wary of future confrontations.</p>
    <<set $player.health -= Math.round($player.health * 0.05 + 15)>>
    <<set $player.stress += Math.round($player.stress * 0.04 + 15)>>
    <<changemoods "health" "major" "NegEffectOnPlayer">>
    <<changemoods "stress" "minor" "NegEffectOnPlayer">>
    
    <<link "Back to your quarters." $LastHomeZone>><</link>>
    
    TODO: Implement combat system


:: LDBMPoliceArrested [event nobr] {"position":"1925,950","size":"100,100"}
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/arrest.jpg'>>
<<addmins $timeadd>> <!-- Updates the in-game clock based on previously set timeadd -->
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: lightblue; font-weight: bold; font-size: 24px;">Arrested</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">

<p>The clank of the cell door echoes in your ears as you're thrown into the brig. The stark reality of your situation sets in—you've been arrested, and the evidence against you is daunting.</p>
<<set $player.stress += Math.round($player.stress * 0.05 + 25)>>
<<set $player.fatigue += Math.round($player.fatigue * 0.05 + 15)>>
<<changemoods "stress" "major" "NegEffectOnPlayer">>
<<changemoods "fatigue" "minor" "NegEffectOnPlayer">>

<<set _arrestScenario to random(1, 4)>>

<<switch _arrestScenario>>
    <<case 1>>
        <p>Your cell is a small, windowless room, the only light coming from a flickering bulb overhead. The guards are unsympathetic to your pleas, their stern faces a constant reminder of your predicament. You're left alone with your thoughts, the silence punctuated only by the distant sounds of the station.</p>
        <p>As the hours pass, the isolation begins to gnaw at you. The walls seem to close in, and the air grows thick and heavy. You pace the cell, trying to keep the creeping despair at bay, but it's a losing battle. The uncertainty of your future weighs heavily on your mind.</p>
        <p>Eventually, the door opens. You're released due to procedural errors, but the damage has been done. Your name has been tarnished, and the whispers follow you as you exit the brig. The relief of freedom is tainted by the stain on your reputation.</p>
        <<set $player.mood -= Math.round($player.mood * 0.15 + 20)>>
        <<set $timeadd to (12 * 60)>>
        <<changemoods "mood" "major" "NegEffectOnPlayer">>
        <<set $lowerdeckBlackActivity -= 20000>>
    <<case 2>>
        <p>The interrogation is harsh, the questions sharp and unyielding. The officers are convinced of your guilt, and they press you for a confession. You hold firm, denying the allegations, but each denial seems to only fuel their determination.</p>
        <p>Time becomes a blur as the interrogation stretches on. You're denied food and rest, the officers using exhaustion as a tool to break your will. But you cling to the truth, the knowledge that you're innocent, even as they try to twist your words against you.</p>
        <p>When they finally admit defeat, releasing you for lack of evidence, you're a shell of your former self. The station's corridors feel alien as you stagger to your quarters, the ordeal leaving you with a deep-seated sense of injustice and a burning desire for retribution.</p>
        <<set $player.mood -= Math.round($player.mood * 0.15 + 25)>>
        <<set $timeadd to (14 * 60)>>
        <<changemoods "mood" "major" "NegEffectOnPlayer">>
        <<set $lowerdeckBlackActivity -= 20000>>
    <<case 3>>
        <p>The cell is cold, the thin blanket provided doing little to ward off the chill. The guards ignore your requests, their indifference a clear message—you're not worth their time. The sound of your own breathing is your only company, a constant reminder of the solitude.</p>
        <p>As the hours tick by, you feel the weight of the station above you, a crushing pressure that seems to sap your strength. You try to sleep, to find some escape from the reality of your situation, but rest is elusive, chased away by the specter of what might come.</p>
        <p>Freedom comes at last, not with an apology, but with a curt nod and a gruff order to leave. You're innocent, but the experience has left its mark. Trust in the station's justice system is shattered, and you know that things will never be quite the same again.</p>
        <<set $player.mood -= Math.round($player.mood * 0.15 + 30)>>
        <<set $timeadd to (16 * 60)>>
        <<changemoods "mood" "major" "NegEffectOnPlayer">>
        <<set $lowerdeckBlackActivity -= 20000>>
    <<case 4>>
        <p>The questioning is relentless, a never-ending stream of accusations and demands for information you don't have. The officers are like predators, circling, waiting for any sign of weakness. But you give them nothing, holding onto your integrity with a fierce determination.</p>
        <p>The lack of human contact is the hardest part. You're left to stew in your own thoughts, the uncertainty of your fate a constant companion. The station's justice system feels like a farce, and you're the unwilling actor in its twisted play.</p>
        <p>When they finally release you, citing a lack of actionable evidence, the sense of relief is overwhelming. But it's tempered by anger, by the knowledge that you were wronged by the very system that's supposed to protect you. The walk back to your quarters is long, each step heavy with the weight of what you've endured.</p>
        <<set $player.mood -= Math.round($player.mood * 0.15 + 35)>>
        <<set $timeadd to (18 * 60)>>
        <<changemoods "mood" "major" "NegEffectOnPlayer">>
        <<set $lowerdeckBlackActivity -= 20000>>
<</switch>>

<<addmins $timeadd>>

<<link "Back to your quarters." $LastHomeZone>><</link>>
<</nobr>>

TODO: Add arrest system


:: LDBMPoliceConvicted [event nobr] {"position":"1925,825","size":"100,100"}
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/convict.jpg'>>
<<addmins $timeadd>> <!-- Updates the in-game clock based on previously set timeadd -->
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: lightblue; font-weight: bold; font-size: 24px;">Convicted</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">

<<nobr>>
<<set $currentArea to "prison">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/prisoncell.jpg'>>
<<set $location to {
    name: "Prison Cell",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<p>The gavel falls, and the sound seals your fate. Convicted. The word echoes through the courtroom and settles heavily in your chest. Despite your best efforts, the evidence was stacked against you, and now you face the consequences.</p>
<<set $player.stress += Math.round($player.stress * 0.05 + 30)>>
<<set $player.fatigue += Math.round($player.fatigue * 0.05 + 20)>>
<<changemoods "stress" "major" "NegEffectOnPlayer">>
<<changemoods "fatigue" "minor" "NegEffectOnPlayer">>

<<set _convictionScenario to random(1, 4)>>

<<switch _convictionScenario>>
    <<case 1>>
        <p>Your first day in the prison cell is a blur. The stark walls and the cold floor are a far cry from the life you once knew. The other inmates are distant, sizing you up as the newcomer. You're left to ponder the turns your life has taken to lead you here.</p>
        <p>Days turn into weeks. The routine is monotonous and dehumanizing. You work, eat, and sleep at the mercy of the prison schedule. The small freedoms you once took for granted are now just memories, each one a reminder of what you've lost.</p>
        <p>When you're finally allowed a moment alone in the exercise yard, you look up at the sliver of sky visible between the high walls. The conviction has changed you, hardened you. You vow to survive, to come out of this ordeal stronger than before.</p>
        <<set $player.mood -= Math.round($player.mood * 0.05 + 35)>>
        <<set $timeadd to (24 * 60 * 30)>> <!-- Assuming 30 days in prison -->
        <<changemoods "mood" "major" "NegEffectOnPlayer">>
        <<set $lowerdeckBlackActivity -= 50000>>
    <<case 2>>
        <p>The cell is claustrophobic, the air stale and heavy. You lie on the thin mattress, listening to the sounds of the prison around you. The clanging of doors, the shouts of guards, the murmurs of other prisoners—it's a cacophony that never ceases.</p>
        <p>As the days pass, you find a routine that keeps you sane. You read, exercise, and write letters that you know may never be sent. The conviction looms over you like a shadow, a constant reminder of the life you're missing beyond these walls.</p>
        <p>One day, you're pulled from your cell and informed that your case has been reopened. There's a chance for appeal, a glimmer of hope in the darkness. You cling to it, letting it fuel your determination to reclaim your freedom and clear your name.</p>
        <<set $player.mood -= Math.round($player.mood * 0.05 + 40)>>
        <<set $timeadd to (24 * 60 * 45)>> <!-- Assuming 45 days in prison -->
        <<changemoods "mood" "major" "NegEffectOnPlayer">>
        <<set $lowerdeckBlackActivity -= 50000>>
    <<case 3>>
        <p>The first night in your cell is the longest night of your life. The conviction has stripped you of your identity, reduced you to a number. You're processed, cataloged, and left alone with the weight of your sentence pressing down on you.</p>
        <p>Time becomes a meaningless concept. The days blend together, each one indistinguishable from the last. You do what you can to stay fit, to keep your mind sharp, but the monotony is a relentless enemy, chipping away at your resolve.</p>
        <p>Eventually, you find solace in the small acts of kindness from a few sympathetic guards and fellow inmates. These moments of human connection become your lifeline, a reminder that even in the depths of despair, there is still hope for redemption.</p>
        <<set $player.mood -= Math.round($player.mood * 0.05 + 45)>>
        <<set $timeadd to (24 * 60 * 60)>> <!-- Assuming 60 days in prison -->
        <<changemoods "mood" "major" "NegEffectOnPlayer">>
        <<set $lowerdeckBlackActivity -= 50000>>
    <<case 4>>
        <p>The reality of your conviction hits you as you're escorted to your cell. The finality of the sentence is a heavy chain around your neck. You're innocent, but that truth doesn't matter within these walls. Here, you're just another convict.</p>
        <p>You fight to keep your dignity, to maintain some semblance of the person you were before. You engage in prison programs, seek legal advice, and do everything in your power to fight for an appeal. The days are long, but you refuse to let them break you.</p>
        <p>And then, a breakthrough. New evidence comes to light, and there's talk of a retrial. Hope surges within you, a fierce flame that refuses to be extinguished. You may be down, but you're not out—not yet.</p>
        <<set $player.mood -= Math.round($player.mood * 0.05 + 50)>>
        <<set $timeadd to (24 * 60 * 75)>> <!-- Assuming 75 days in prison -->
        <<changemoods "mood" "major" "NegEffectOnPlayer">>
        <<set $lowerdeckBlackActivity -= 50000>>
<</switch>>

<<addmins $timeadd>>

<<link "Back to your quarters." $LastHomeZone>><</link>>
<</nobr>>

TODO: Full prison system


:: LDBMPoliceDetained [event nobr] {"position":"1800,950","size":"100,100"}
<<nobr>>
<<set $currentArea to "detainment">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/security.jpg'>>
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: lightblue; font-weight: bold; font-size: 24px;">Detained</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">
<<set _detainmentScenario to random(1, 4)>>
<<switch _detainmentScenario>>
    <<case 1>>
        <p>The interrogation room is cold and unwelcoming, the bright lights making it hard to think. The officers question you for hours, their skepticism apparent in every accusation they throw your way. You maintain your innocence, but the seed of doubt has been planted.</p>
        <p>As the hours drag on, you can feel your resolve weakening. The relentless barrage of questions, the insinuations of guilt, it all starts to blur together. You're left wondering if they'll ever let you go, if you'll see the outside of these four walls again.</p>
        <p>Finally, after what feels like an eternity, they conclude the interrogation. They have no evidence, no reason to hold you further. You're released back into the station's corridors, the echoes of the officers' final warnings ringing in your ears. The ordeal has taken its toll, leaving you drained and on edge.</p>
        <<set $player.mood -= Math.round($player.mood * 0.05 + 15)>>
        <<set $timeadd to (8 * 60)>>
        <<changemoods "mood" "major" "NegEffectOnPlayer">>
        <<set $lowerdeckBlackActivity -= 10000>>
    <<case 2>>
        <p>The small room feels like it's closing in on you, each question from the officers a hammer chipping away at your psyche. They're relentless, convinced of your guilt, and every denial you offer is met with more skepticism. The stress is palpable, a thick fog that fills the space between you and your accusers.</p>
        <p>Time loses meaning as the interrogation stretches on. You're tired, hungry, and the repeated insistence on your guilt is starting to wear you down. You catch yourself second-guessing your own memories, the pressure of the situation threatening to break you.</p>
        <p>When they finally release you, citing a lack of concrete evidence, you're not sure whether to feel relieved or insulted. The walk back to your quarters is a blur, your mind reeling from the intensity of the experience. It's going to take some time to recover from this.</p>
        <<set $player.mood -= Math.round($player.mood * 0.05 + 10)>>
        <<set $timeadd to (6 * 60)>>
        <<changemoods "mood" "major" "NegEffectOnPlayer">>
        <<set $lowerdeckBlackActivity -= 10000>>
    <<case 3>>
        <p>The questioning starts off intense and only gets worse. The officers use every tactic in the book to try and trip you up, to make you confess to crimes you didn't commit. You're bombarded with questions, some so absurd you wonder if this is all some sort of twisted game.</p>
        <p>As the interrogation drags on, you feel your energy draining away. The room is claustrophobic, the air stale, and every glance from the officers feels like an accusation. You're fighting to keep your composure, to hold onto the truth amidst the barrage of lies they're trying to pin on you.</p>
        <p>Exhaustion sets in by the time they decide to let you go. They've found nothing, and they know it. The walk out of the detainment center is long and silent. You're free, but the weight of the experience lingers, a heavy cloak draped over your shoulders.</p>
        <<set $player.mood -= Math.round($player.mood * 0.05 + 20)>>
        <<set $timeadd to (10 * 60)>>
        <<changemoods "mood" "major" "NegEffectOnPlayer">>
        <<set $lowerdeckBlackActivity -= 10000>>
    <<case 4>>
        <p>The officers are like vultures, circling around you, waiting for any sign of weakness. They dissect your every word, looking for inconsistencies, for the slip-up that will give them what they want. But you give them nothing, because there's nothing to give.</p>
        <p>Your mind races as you try to keep up with their questions. They're trying to confuse you, to make you doubt yourself. The strain is immense, and you can feel the fatigue setting in, your body and mind pushed to their limits.</p>
        <p>It's with a mixture of relief and resentment that you're finally released. They have no proof, no case to make against you. The relief of being out is tempered by the knowledge that they could do this again, at any time, for any reason. The station feels a little less like home now.</p>
        <<set $player.mood -= Math.round($player.mood * 0.05 + 25)>>
        <<set $timeadd to (12 * 60)>>
        <<changemoods "mood" "major" "NegEffectOnPlayer">>
        <<set $lowerdeckBlackActivity -= 10000>>
<</switch>>

<<addmins $timeadd>>
<br><br>
<<link "Back to your quarters." $LastHomeZone>><</link>>
<</nobr>>

TODO: Add arrest system


:: LDBMcriminalaction [event nobr] {"position":"2050,1075","size":"100,100"}
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/events/pickpocket.jpg'>>
<<addmins $timeadd>> <!-- Updates the in-game clock based on previously set timeadd -->
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: lightblue; font-weight: bold; font-size: 24px;">Criminal Encounter</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">
<!-- Criminal Encounter based on $lowerdeckHeat and $lowerdeckBlackActivity -->
<p>As you navigate the treacherous underbelly of the Lower Decks, your involvement in the Black Market Bazaar's illegal activities has not gone unnoticed.</p>

<<set _encounterList to []>>
<<for _i = 2; _i <= 10; _i++>>
    <<if _i <= $lowerdeckHeat>>
        <<set _encounterList.push(_i)>>
    <</if>>
<</for>>

<<set _selectedActivity to _encounterList[random(0, _encounterList.length - 1)]>>
<<switch _selectedActivity>>
<<case 2>>
    <p>As you make your way through the crowded corridors, a sudden jostle from a passerby nearly knocks you off your feet. You steady yourself and catch a glimpse of a pickpocket disappearing into the crowd with a few of your credits.</p>
    <p>Though the loss is minor, it's enough to put you on edge. You make a mental note to be more cautious. The Lower Decks are teeming with those who prey on the unwary, and you've just become their latest victim.</p>
    <p>With a sigh, you adjust your belongings to prevent further thefts and continue on your way, the incident a small blemish on an otherwise uneventful journey.</p><br>
    <<set $player.stress += Math.round($player.stress * 0.02 + 5)>>
    <<set $player.credits -= 20>>
    <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>
    <<creditchange 20 "negative">><br><br>
    <<link "Continue." $nextPassage>><</link>>

<<case 3>>
    <p>While navigating a narrow alley, you're approached by a grifter who offers you a chance at a game of chance. Sensing the likelihood of a scam, you politely decline, but the encounter leaves you wary.</p>
    <p>The grifter's eyes follow you as you walk away, and you can't shake the feeling that you've narrowly avoided a trap. The Lower Decks are full of such opportunists, looking to make a quick credit at someone else's expense.</p>
    <p>As you leave the alley behind, you're relieved to have kept your credits safe, but the encounter has taken a toll on your nerves.</p><br>
    <<set $player.stress += Math.round($player.stress * 0.02 + 5)>>
    <<changemoods "stress" "minor" "NegEffectOnPlayer">><br><br>
    <<link "Continue." $nextPassage>><</link>>

<<case 4>>
    <p>Amidst the din of the Lower Decks, you overhear a heated exchange between two criminals. They're arguing over a botched job, and it's clear that the situation could escalate at any moment.</p>
    <p>You keep your distance, but the argument soon turns violent. A stray blaster shot zings past you, a near miss that sends adrenaline coursing through your veins.</p>
    <p>Once the scuffle ends and the parties disperse, you take a moment to collect yourself. The encounter was too close for comfort, and it's a stark reminder of the dangers that lurk around every corner here.</p><br>
    <<set $player.stress += Math.round($player.stress * 0.03 + 10)>>
    <<changemoods "stress" "minor" "NegEffectOnPlayer">><br><br>
    <<link "Continue." $nextPassage>><</link>>

<<case 5>>
    <p>As you pass through a dimly lit section of the Lower Decks, a figure emerges from the shadows. It's a thief, and they're demanding your credits. You know better than to resist in such situations.</p>
    <p>With a calm demeanor, you hand over a small sum, enough to satisfy the thief without putting a significant dent in your finances. The thief nods and quickly disappears back into the darkness.</p>
    <p>The encounter leaves you feeling frustrated and violated. You've survived this time, but the loss, however small, is a reminder of the constant threat that hangs over all who travel these paths.</p><br>
    <<set $player.stress += Math.round($player.stress * 0.02 + 5)>>
    <<set $player.credits -= 30>>
    <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>
    <<creditchange 30 "negative">><br><br>
    <<link "Continue." $nextPassage>><</link>>

<<case 6>>
    <p>While traversing a crowded market, a sudden outburst catches your attention. A local gang is shaking down a merchant, and the situation quickly turns ugly.</p>
    <p>You consider intervening, but the risk is too great. Instead, you offer a subtle distraction, allowing the merchant to slip away. The gang's anger is palpable, and in the confusion, you receive a glancing blow.</p>
    <p>As you make your escape, you feel the sting of the injury. It's a minor wound, but it's enough to remind you of the precarious balance of power in the Lower Decks.</p><br>
    <<set $player.health -= Math.round($player.health * 0.03 + 10)>>
    <<set $player.stress += Math.round($player.stress * 0.02 + 5)>>
    <<changemoods "health" "minor" "NegEffectOnPlayer">><br>
    <<changemoods "stress" "minor" "NegEffectOnPlayer">><br><br>
    <<link "Continue." $nextPassage>><</link>>

<<case 7>>
    <p>As you approach an intersection, a desperate individual bumps into you, whispering a plea for help. They're being pursued by a loan shark's enforcers, and they see you as their only chance at escape.</p>
    <p>You quickly assess the situation and decide to intervene. Using your knowledge of the area, you create a diversion and guide the individual to safety. The enforcers pass by, none the wiser.</p>
    <p>The individual thanks you profusely before disappearing into the crowd. You've done a good deed, but the encounter has left you on high alert. The Lower Decks are no place for heroes, and you can't afford to let your guard down again.</p><br>
    <<set $player.stress += Math.round($player.stress * 0.02 + 5)>>
    <<changemoods "stress" "minor" "NegEffectOnPlayer">><br><br>
    <<link "Continue." $nextPassage>><</link>>

<<case 8>>
<<set _randomEvent to random(1, 3)>>
<<If _randomEvent == 1>>
    <p>As you slip through a bustling exchange, a skilled thief slips your credit chit out of your pocket. You only have a few seconds before he disappears in the crowd.</p><br><br>
        [[Continue.|LDBMCriminalPickpocket]]
    
<<elseif _randomEvent == 2>>
    <p>Amidst the dim lighting and the clatter of machinery, you find yourself face to face with a group of smugglers. They mistake you for a rival and, without warning, a scuffle ensues.</p><br><br>
    [[Continue.|LDBMCriminalSkirmish]]
    
<<else>>
<p>As you near your destination, an ominous figure emerges from the shadows. It's a hitman, and their target is clear. You've been marked, and the ensuing confrontation is a matter of life and death.</p><br><br>
    [[Continue.|LDBMCriminalHitman]]
    <</if>>
<</switch>>


:: LDBMpoliceaction [event nobr] {"position":"1800,825","size":"100,100"}
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/events/security.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: lightblue; font-weight: bold; font-size: 24px;">Police Action</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">

<p>As you make your way through the Lower Decks, the presence of law enforcement is a constant shadow, their vigilance a reminder of the consequences of your actions in the Black Market Bazaar.</p>

<<set _encounterList to []>>
<<for _i = 2; _i <= 10; _i++>>
    <<if _i <= $lowerdeckHeat>>
        <<set _encounterList.push(_i)>>
    <</if>>
<</for>>

<<set _selectedHeat to _encounterList[random(0, _encounterList.length - 1)]>>
<<switch _selectedHeat>>
    <<case 2>>
        <p>You notice a pair of officers eyeing you from across the corridor, but they seem preoccupied with their own conversation and soon move on.</p>
        <<set $lowerdeckBlackActivity -= 100>><br><br>
        <<link "Continue." $nextPassage>><</link>>
    <<case 3>>
        <p>An officer stops you for a quick ID scan. It's routine, nothing more, and you're on your way again with minimal delay.</p>
        <<set $lowerdeckBlackActivity -= 100>><br><br>
        <<link "Continue." $nextPassage>><</link>>
    <<case 4>>
        <<set _randomEvent to random(1, 2)>>
        <<if _randomEvent == 1>>
            <p>Your heart skips a beat as a security drone hovers nearby, its sensors flickering. After a moment, it buzzes off, leaving you to ponder the close call.</p>
            <<set $lowerdeckBlackActivity -= 100>><br><br>
            <<link "Continue." $nextPassage>><</link>>
        <<else>>
            <p>A checkpoint forces you to line up for inspection. The officers are thorough, and you can't help but sweat as they examine your belongings.</p>
            <<set $player.stress += Math.round($player.stress * 0.03 + 10)>>
            <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>
            <<set $lowerdeckBlackActivity -= 200>><br><br>
            <<link "Continue." $nextPassage>><</link>>
        <</if>>
    <<case 5>>
        <<set _randomEvent to random(1, 2)>>
        <<if _randomEvent == 1>>
            <p>You're briefly detained by a patrol for a cursory search. They find nothing incriminating, but the encounter leaves you rattled.</p><br>
            <<set $player.stress += Math.round($player.stress * 0.02 + 5)>>
            <<changemoods "stress" "minor" "NegEffectOnPlayer">>
            <<set $lowerdeckBlackActivity -= 500>><br><br>
            <<link "Continue." $nextPassage>><</link>>
        <<else>>
            <p>Security seems to be tightening. You're pulled aside for questioning and released only after an hour of heated demands.</p><br>
            <<set $player.stress += Math.round($player.stress * 0.04 + 15)>>
            <<changemoods "stress" "minor" "NegEffectOnPlayer">>
            <<set $timeadd += 60>>
            <<addmins $timeadd>>
            <<set $lowerdeckBlackActivity -= 500>><br><br>
            <<link "Continue." $nextPassage>><</link>>
        <</if>>
    <<case 6>>
        <p>Today's not your day. You're detained and taken in for questioning. The ordeal will be draining, both mentally and physically.</p><br>
        <<set $player.stress += Math.round($player.stress * 0.05 + 20)>>
        <<set $player.fatigue += Math.round($player.fatigue * 0.05 + 10)>>
        <<changemoods "stress" "major" "NegEffectOnPlayer">><br>
        <<changemoods "fatigue" "minor" "NegEffectOnPlayer">><br><br>
        [[You have been detained.|LDBMPoliceDetained]]
    <<case 7>>
        <p>You're caught in a surprise sting operation. The evidence against you is damning, and you're whisked away before you can protest.</p><br>
        <<set $player.stress += Math.round($player.stress * 0.06 + 25)>>
        <<set $player.fatigue += Math.round($player.fatigue * 0.06 + 15)>>
        <<set $player.credits -= 50>>
        <<changemoods "stress" "major" "NegEffectOnPlayer">><br>
        <<changemoods "fatigue" "major" "NegEffectOnPlayer">><br><br>
        <<creditchange 50 "negative">>
        [[You have been detained.|LDBMPoliceArrested]]
    <<case 8>>
        <p>It's a full-blown raid. Law enforcement descends upon you with overwhelming force, and any thoughts of escape are quickly dashed. The repercussions will be severe and long-lasting.</p><br>
        <<set $player.stress += Math.round($player.stress * 0.07 + 30)>>
        <<set $player.fatigue += Math.round($player.fatigue * 0.07 + 20)>>
        <<set $player.credits -= 100>>
        <<changemoods "stress" "major" "NegEffectOnPlayer">><br>
        <<changemoods "fatigue" "major" "NegEffectOnPlayer">><br>
        <<creditchange 100 "negative">><br><br>
        <<set $timeadd to 60>>
        <<addmins $timeadd>>
        [[You have been detained.|LDBMPoliceConvicted]]
    <<default>>
        <p>You notice a pair of officers eyeing you from across the corridor, but they seem preoccupied with their own conversation and soon move on.</p>
        <<link "Continue." $nextPassage>><</link>>
<</switch>>


:: LastHomeDarts [lowerdeckact] {"position":"550,1850","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/thelasthome.jpg'>>
<<addmins $timeadd>>
<<set $player.credits -= 5>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Last Home - Darts Game",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $lastHomeDartsEventsRecord>> <<set $lastHomeDartsEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $lastHomeDartsEventsRecord.today != _today>>
    <<set $lastHomeDartsEventsRecord.today to _today>>
    <<set $lastHomeDartsEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available darts events -->
<<for _i to 1; _i <= 10; _i++>>
    <<if not $lastHomeDartsEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available darts events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $lastHomeDartsEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available darts events -->
    <<set _randomEvent to 0>> <!-- Default to the default event -->
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Last Home</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The rhythmic thud of darts punctuates the murmur of The Last Home. Off-duty crewmen from various sectors of the station cluster around the dartboard, engaging in friendly competition. With a drink in hand, you step up to the line, greeted by grins and playful banter. It's a moment of camaraderie and skill, a reprieve from the demanding life aboard the station.</p>

<!-- Random Darts Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Bullseye Victory -->
        <p>With an uncanny streak of bullseyes, you impress the onlookers and earn a small prize from the bar's ongoing darts competition.</p>
        <<set $player.credits += 20>>
        <<creditchange 20 "positive">><br>

    <<case 2>> <!-- Close Game -->
        <p>The game comes down to the wire, with each player matching each other's skill shot for shot. In the end, you narrowly lose, but the thrill of competition was its own reward.</p>

    <<case 3>> <!-- Comedic Misfire -->
        <p>Apparently, darts is not your game. Your throw goes wildly off course, sparking a round of good-hearted laughter at your expense.</p>
        <<set $player.mood -= Math.round($player.mood * 0.02)>>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">><br>

    <<case 4>> <!-- New Friendship -->
        <p>Your casual game of darts turns into a lively chat with a fellow player, leading to a potential new friendship.</p>
        <<set $player.mood += Math.round($player.mood * 0.05)>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">><br>

    <<case 5>> <!-- Sore Loser -->
        <p>You win the game, but your opponent doesn't take it well. The resulting tension is a bit draining.</p>
        <<set $player.mood -= Math.round($player.mood * 0.02)>>
        <<set $player.stress += Math.round($player.stress * 0.02)>>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">>
        <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>

    <<case 6>> <!-- Betting Round -->
        <p>A spur-of-the-moment bet adds some stakes to the game. Your steady hand ensures you come out on top.</p>
        <<set $player.credits += 15>>
        <<creditchange 15 "positive">><br>

    <<case 7>> <!-- Drunken Distraction -->
        <p>A group of rowdy patrons distracts you during a crucial throw, causing you to lose this round.</p>
        <<set $player.mood -= Math.round($player.mood * 0.05)>>
        <<changemoods "mood" "major" "NegEffectOnPlayer">><br>

    <<case 8>> <!-- Unintended Trick Shot -->
        <p>What was supposed to be an embarrassing miss turns into an unintentional trick shot, earning a round of applause and boosting your mood significantly.</p>
        <<set $player.mood += Math.round($player.mood * 0.05)>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">><br>

    <<case 9>> <!-- Fatigue Takes Its Toll -->
        <p>As the game drags on, your throws become less precise. You decide to call it quits and give your arm a rest.</p>
        <<set $player.fatigue += Math.round($player.fatigue * 0.02)>>
        <<changemoods "fatigue" "minor" "NegEffectOnPlayer">><br>

    <<case 10>> <!-- Unexpected Challenge -->
        <p>A station champion challenges you to a match. Despite your best efforts, you lose, but the experience leaves you feeling more prepared for the next challenge.</p>
        <<set $player.stress -= Math.round($player.stress * 0.05)>>
        <<changemoods "stress" "major" "PosEffectOnPlayer">><br>

    <<default>> <!-- Default Darts Event -->
        <p>After a few throws, it's clear tonight isn't your night for darts. You decide to quit while you're behind, saving your credits and pride. No major loss, just a dent in your evening's plans.</p>
        <<set $player.credits -= 5>>
        <<creditchange 5 "negative">><br>
<</switch>>
<br>

<!-- Continue Link -->
[[Head back to the bar.|The Last Home]]
<</nobr>>



:: LastHomeDrink [lowerdeckact] {"position":"575,2050","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/thelasthome.jpg'>>
<<addmins $timeadd>>
<<set $player.credits -= 5>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Last Home - Grabbing a Drink",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $lastHomeEventsRecord>> <<set $lastHomeEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $lastHomeEventsRecord.today != _today>>
    <<set $lastHomeEventsRecord.today to _today>>
    <<set $lastHomeEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<!-- Create a list of available events that have not occurred today -->
<<set _availableEvents to []>>
<<for _i to 1; _i <= 10; _i++>>
    <<if not $lastHomeEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<!-- Select a random event from the available ones or default if none are available -->
<<if _availableEvents.length>> <!-- If there are still available events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $lastHomeEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available events -->
    <<set _randomEvent to 0>> <!-- Default to the default event -->
<</if>>

<!-- Standard Heading Template -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Last Home</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The Last Home's ambient lighting casts soothing shadows across the establishment, inviting you to take a seat at the bar. You order a drink, the ice clinking softly in the glass, and lean in to catch the fragments of hushed conversations. Tales from the edge of the galaxy mix with the latest station gossip, offering a glimpse into the lives of those who call MOR-1 their temporary haven.</p>

<!-- Random Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Local Spacers' Toast -->
        <p>A group of spacers toast to a successful voyage and invite you to join. The camaraderie lifts your spirits.</p>
        <<set $player.mood += Math.round($player.mood * 0.02)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 2>> <!-- Unfortunate Spill -->
        <p>Your drink gets knocked over in a minor scuffle at the bar. It's a small loss, but it dampens the mood.</p>
        <<set $player.mood -= Math.round($player.mood * 0.01)>>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">><br>

    <<case 3>> <!-- Helpful Advice -->
        <p>An old engineer shares some tales and gives you advice on maintaining your gear, which might just save your life one day.</p>
        <<set $player.trauma -= Math.round($player.trauma * 0.02)>>
        <<changemoods "trauma" "minor" "PosEffectOnPlayer">><br>

    <<case 4>> <!-- Rumor Has It -->
        <p>You catch wind of a cargo ship looking for extra hands. This could be your ticket to a steady job.</p>
        <<set $player.powerReserves += Math.round($player.powerReserves * 0.02)>>
        <<changemoods "powerReserves" "minor" "PosEffectOnPlayer">><br>

    <<case 5>> <!-- Quiet Reflection -->
        <p>The low hubbub of the bar allows you a moment of reflection, easing your mind.</p>
        <<set $player.stress -= Math.round($player.stress * 0.02)>>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 6>> <!-- A Toast to the Fallen -->
        <p>The bar falls silent for a toast to crewmembers lost to the void. It's a sobering reminder of the dangers out here.</p>
        <<set $player.mood -= Math.round($player.mood * 0.01)>>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">>
        <<set $player.stress -= Math.round($player.stress * 0.01)>>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 7>> <!-- Winning Hand -->
        <p>You join a game of cards and your luck holds out. Walking away with a few extra credits feels good.</p>
        <<set $player.credits += 15>>
        <<creditchange 15 "positive">><br>

    <<case 8>> <!-- Overheard Plans -->
        <p>Overhearing plans for a black market deal, you file away the information. Knowledge is power, after all.</p>
        <<set $player.powerReserves += Math.round($player.powerReserves * 0.01)>>
        <<changemoods "powerReserves" "minor" "PosEffectOnPlayer">><br>

    <<case 9>> <!-- Dockworker's Challenge -->
        <p>A friendly arm-wrestling challenge with a dockworker proves to be tougher than expected. You welcome the physical exertion, though.</p>
        <<set $player.health += Math.round($player.health * 0.01)>>
        <<changemoods "health" "minor" "PosEffectOnPlayer">><br>

    <<case 10>> <!-- Misplaced Wallet -->
        <p>You find a wallet under your seat. Honesty wins out as you return it to its grateful owner, who rewards you with a few credits.</p>
        <<set $player.credits += 10>>
        <<creditchange 10 "positive">><br>

    <<default>> <!-- Default Event -->
        <p>The night wanes, and despite the warmth of the bar, luck isn't on your side as you find yourself buying a round of drinks for newly made friends, or perhaps losing a handful of credits in an ill-advised bet. Either way, it's an evening to remember, even with a slightly lighter wallet.</p>
        <<set $player.credits -= 5>>
        <<creditchange 5 "negative">>
        <<set $player.credits += 5>>
        <<creditchange 5 "positive">><br>
<</switch>>
<br>

<!-- Continue Link -->
[[Return to the bustle of The Last Home.|The Last Home]]
<</nobr>>


:: LastHomeGamble [lowerdeckact] {"position":"550,1950","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/thelasthomegamble.jpg'>>
<<addmins $timeadd>>
<<set $player.credits -= 10>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Last Home - Gambling",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $lastHomeGambleEventsRecord>> <<set $lastHomeGambleEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $lastHomeGambleEventsRecord.today != _today>>
    <<set $lastHomeGambleEventsRecord.today to _today>>
    <<set $lastHomeGambleEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available gambling events -->
<<for _i to 1; _i <= 10; _i++>>
    <<if not $lastHomeGambleEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available gambling events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $lastHomeGambleEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available gambling events -->
    <<set _randomEvent to 0>> <!-- Default to the default event -->
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Last Home</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>At the back of The Last Home, a raucous cheer erupts from a circle of patrons huddled around a gambling table. You make your way through the crowd, the allure of chance and the glint of credits calling you to join. With a confident nod, you place your bet among the hopeful and the desperate, the clatter of dice echoing the beating heart of the Lower Decks.</p>

<!-- Random Gambling Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Impressive Jackpot -->
        <p>A risky bet pays off as you hit an impressive jackpot on the slot machine, eliciting cheers from around. Your initial investment pales in comparison to the hefty pile of credits now in front of you.</p>
        <<set $player.credits += 100>> <!-- Including the initial -10 credits buy-in -->
        <<creditchange 100 "positive">><br>

    <<case 2>> <!-- Bad Luck at the Dice Table -->
        <p>The dice seem cursed tonight; no matter how you throw them, they betray you. The losses mount quickly, prompting you to step away before the damage gets worse.</p>
        <<set $player.credits -= 30>> <!-- Including the initial buy-in -->
        <<creditchange 30 "negative">><br>

    <<case 3>> <!-- Error in Your Favor -->
        <p>Due to a miscalculation by your opponents, a pot you thought lost is awarded to you. It's a modest win, but a win nonetheless.</p>
        <<set $player.credits += 30>> <!-- Including the initial buy-in -->
        <<creditchange 30 "positive">><br>

    <<case 4>> <!-- Strategic Fold -->
        <p>Recognizing a losing hand early on, you strategically fold and watch as the pot grows. It turns out to be the right call, as your modest bet is returned to you when the accused cheater is revealed.</p><br>
        <<set $player.credits += 10>> <!-- Refunded the initial buy-in -->

    <<case 5>> <!-- Unexpected Bonus -->
        <p>You didn't win the main pot, but a side bet with another player comes through for you in the end. Sometimes, it's the side games that pay off.</p>
        <<set $player.credits += 35>> <!-- Including the initial buy-in -->
        <<creditchange 35 "positive">><br>

    <<case 6>> <!-- Generous Stranger -->
        <p>After a string of losses, a sympathetic stranger places a lucky token in your hand. Inspired, your next bet turns the tide.</p>
        <<set $player.credits += 25>> <!-- Including the initial buy-in -->
        <<creditchange 25 "positive">><br>

    <<case 7>> <!-- Crushing Loss -->
        <p>A high-stakes game draws you in, and the thrill of the risk clouds your judgment. The loss is more than you anticipated, leaving a bitter taste.</p>
        <<set $player.credits -= 50>> <!-- Including the initial buy-in -->
        <<creditchange 50 "negative">><br>

    <<case 8>> <!-- Clean Sweep -->
        <p>Your competitors underestimate you, and hand after hand falls into your favor. By the end of the game, you've cleanly swept the table.</p>
        <<set $player.credits += 70>> <!-- Including the initial buy-in -->
        <<creditchange 70 "positive">><br>

    <<case 9>> <!-- Miraculous Turnaround -->
        <p>Just when all seemed lost, a miraculous turn of the cards swings fortune back to you. You manage to recoup your losses and then some, breathing a sigh of relief.</p>
        <<set $player.credits += 20>> <!-- Including the initial buy-in -->
        <<creditchange 20 "positive">><br>

    <<case 10>> <!-- The High Roller's Edge -->
        <p>A high roller at the table ups the ante to a level few can match. You decide to follow suit and it pays off tremendously, boosting both your wallet and your confidence.</p>
        <<set $player.credits += 90>> <!-- Including the initial buy-in -->
        <<creditchange 90 "positive">><br>

    <<default>> <!-- Default Gambling Event -->
        <p>The evening's gambles come and go; sometimes you're up, sometimes you're down. As the night comes to a close and your pile of chips is cashed out, you find yourself just a little bit ahead of where you started.</p>
        <<set $player.credits += 15>> <!-- Including the initial buy-in -->
        <<creditchange 15 "positive">><br>
<</switch>>



<!-- Continue Link -->
[[Head back to the bar.|The Last Home]]
<</nobr>>


:: LastHomeHeartToHeart [lowerdeckact] {"position":"650,1800","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/thelasthome.jpg'>>
<<addmins $timeadd>>
<<set $player.credits -= 5>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Last Home - Heart to Heart",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $lastHomeHeartEventsRecord>> <<set $lastHomeHeartEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $lastHomeHeartEventsRecord.today != _today>>
    <<set $lastHomeHeartEventsRecord.today to _today>>
    <<set $lastHomeHeartEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available heart to heart events -->
<<for _i to 1; _i <= 10; _i++>>
    <<if not $lastHomeHeartEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available heart to heart events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $lastHomeHeartEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available heart to heart events -->
    <<set _randomEvent to 0>> <!-- Default to the default event -->
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Last Home</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>As time wears on, the crowd at The Last Home thins, leaving only the echo of departed patrons. You find yourself at the bar, face reflected in the well-worn countertop, as the bartender wipes down glasses. It's the perfect time for a quiet conversation, to share the weight of existence on MOR-1 with someone who understands the art of listening.</p>

<!-- Random Heart to Heart Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Shared Sorrows -->
        <p>The bartender shares a story of lost love, and you find common ground in shared sorrows. You both feel a weight lifted after the talk.</p>
        <<set $player.mood += Math.round($player.mood * 0.05)>>
        <<set $player.stress += Math.round($player.stress * 0.05)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 2>> <!-- A Toast to Better Times -->
        <p>A toast to better times results in a couple of free drinks and a boost to your spirits.</p>
        <<set $player.mood += Math.round($player.mood * 0.075)>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">><br>

    <<case 3>> <!-- Advice from the Bartender -->
        <p>The bartender's practical advice on dealing with station politics could come in handy. You're grateful for the wisdom.</p>
        <<set $player.powerReserves += 5>>
        <<changemoods "powerReserves" "minor" "PosEffectOnPlayer">><br>

    <<case 4>> <!-- Old Friends Remembered -->
        <p>Reminiscing about old friends brings both laughter and a twinge of sadness. It's a bittersweet evening.</p>
        <<set $player.mood += Math.round($player.mood * 0.025)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 5>> <!-- Lending an Ear -->
        <p>Listening to the bartender's troubles, you offer a sympathetic ear. Sometimes all someone needs is to be heard.</p>
        <<set $player.stress += Math.round($player.stress * 0.05)>>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 6>> <!-- Connecting Over Music -->
        <p>The bartender plays an old tune, and you both get lost in the music. For a moment, nothing else matters.</p>
        <<set $player.mood += Math.round($player.mood * 0.075)>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">><br>

    <<case 7>> <!-- A Shoulder to Cry On -->
        <p>After a few too many, the bartender breaks down about personal losses. The evening becomes heavier than you expected.</p>
        <<set $player.mood -= Math.round($player.mood * 0.05)>>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">><br>

    <<case 8>> <!-- Shared Laughter -->
        <p>Jokes and laughter dominate the evening, making for light-hearted and refreshing conversation.</p>
        <<set $player.mood += Math.round($player.mood * 0.1)>>
        <<set $player.stress += Math.round($player.stress * 0.025)>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 9>> <!-- The Wisdom of Age -->
        <p>Stories of the bartender's early years on MOR-1 give you a sense of history and grounding.</p>
        <<set $player.powerReserves += 10>>
        <<changemoods "powerReserves" "major" "PosEffectOnPlayer">><br>

    <<case 10>> <!-- Comforting Presence -->
        <p>The quiet presence of another person provides a comforting backdrop to your thoughts. You leave feeling calmer.</p>
        <<set $player.stress += Math.round($player.stress * 0.05)>>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<default>> <!-- Default Heart to Heart Event -->
        <p>The conversation turns mundane, and while you spend a few credits on drinks, you gain little from the exchange.</p>
        <<set $player.credits -= 5>>
        <<creditchange 5 "negative">><br>
<</switch>>
<br>

<!-- Continue Link -->
[[Head back to the bar.|The Last Home]]
<</nobr>>



:: LastHomeWork [lowerdeckact] {"position":"750,1800","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/thelasthome.jpg'>>
<<addmins $timeadd>> <!-- Working a shift takes time. -->
<<set $location to {
    name: "Meltisar System, MOR-1, The Last Home - Working Shift",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Last Home</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Flavor text about offering to help at the bar -->
<p>The Last Home is more than a bar—it's a crossroads for those seeking purpose or escape.</p>

<p>You offer your help to the bar staff, who quickly take you up on it. It seems they're short-handed like usual. You look around and see several customers waiting to be served:</p>

<!-- Create an array of customer names to choose from -->
<<set _customerNames to [
    "Refugee", "Stowaway", "Outcast", "Deserter", "Fugitive", "Scrapper",
    "Vagrant", "Relic Hunter", "Deck Swab", "Ex-Convict", "Orphan", "Beggar",
    "Downtrodden Miner", "Worn-Out Medic", "Retired Soldier", "Defector",
    "Former Engineer", "Mutineer", "Street Artist", "Ex-Corporate Spy", "Cult Survivor",
    "Displaced Diplomat", "Struggling Musician", "Clanless Warrior", "Disgraced Academic",
    "Down-and-out Merchant", "Aging Pilot", "Maverick Hacker", "Spacefarer", "Nomad"
]>>

<!-- Randomize the customer names -->
<<set _customers to _customerNames.shuffle()>>

<!-- Customer serving section for group 1 -->
<<set _group1 to _customers.splice(0, 3)>>
<div id="customerGroup1">
    <ul>
    <<for _i = 0; _i < _group1.length; _i++>>
        <<set _tip to random(1, 2)>>
        <<capture _i _tip _group1[_i]>>
            <<link _group1[_i]>>
                <<replace "#customerGroup1">>
                    <p>You deftly serve the <<=_group1[_i]>>. They appreciate the quick service and leave a tip of $<<=_tip>>. It's not much, but every little bit helps.<span style="color: green;"> +$<<=_tip>> Credits</span></p>
                    <<set $player.credits += _tip>>
                    <<updatebar>>
                <</replace>>
            <</link>>
        <</capture>>
    <</for>>
    </ul>
</div>

<!-- Group 2 -->
<div id="customerGroup2">
    <ul>
    <<set _group2 to _customers.splice(0, 3)>>
    <<for _i = 0; _i < _group2.length; _i++>>
        <<set _tip = random(1, 2)>>
        <<capture _i _tip _group2[_i]>>
            <<link _group2[_i]>>
                <<replace "#customerGroup2">>
                    <p>You serve the <<=_group2[_i]>> and receive a tip of $<<=_tip>>.<span style="color: green;"> +$<<=_tip>> Credits</span></p>
                    <<set $player.credits += _tip>>
                    <<updatebar>>
                <</replace>>
            <</link>>
        <</capture>>
    <</for>>
    </ul>
</div>

<!-- Group 3 -->
<div id="customerGroup3">
    <ul>
    <<set _group3 to _customers.splice(0, 3)>>
    <<for _i = 0; _i < _group3.length; _i++>>
        <<set _tip = random(1, 2)>>
        <<capture _i _tip _group3[_i]>>
            <<link _group3[_i]>>
                <<replace "#customerGroup3">>
                    <p>The <<=_group3[_i]>> nods appreciatively as you hand over their order, leaving a $<<=_tip>> tip.<span style="color: green;"> +$<<=_tip>> Credits</span></p>
                    <<set $player.credits += _tip>>
                    <<updatebar>>
                <</replace>>
            <</link>>
        <</capture>>
    <</for>>
    </ul>
</div>

<!-- Group 4 -->
<div id="customerGroup4">
    <ul>
    <<set _group4 to _customers.splice(0, 3)>>
    <<for _i = 0; _i < _group4.length; _i++>>
        <<set _tip = random(1, 2)>>
        <<capture _i _tip _group4[_i]>>
            <<link _group4[_i]>>
                <<replace "#customerGroup4">>
                    <p>With a swift exchange, you handle the <<=_group4[_i]>>'s request. They leave a $<<=_tip>> tip for your service.<span style="color: green;"> +$<<=_tip>> Credits</span></p>
                    <<set $player.credits += _tip>>
                    <<updatebar>>
                <</replace>>
            <</link>>
        <</capture>>
    <</for>>
    </ul>
</div>

<!-- Group 5 -->
<div id="customerGroup5">
    <ul>
    <<set _group5 to _customers.splice(0, 3)>>
    <<for _i = 0; _i < _group5.length; _i++>>
        <<set _tip = random(1, 2)>>
        <<capture _i _tip _group5[_i]>>
            <<link _group5[_i]>>
                <<replace "#customerGroup5">>
                    <p>You engage in a bit of small talk with the <<=_group5[_i]>> as you serve them, earning a $<<=_tip>> tip for the friendly service.<span style="color: green;"> +$<<=_tip>> Credits</span></p>
                    <<set $player.credits += _tip>>
                    <<updatebar>>
                <</replace>>
            <</link>>
        <</capture>>
    <</for>>
    </ul>
</div>

<!-- Group 6 -->
<div id="customerGroup6">
    <ul>
    <<set _group6 to _customers.splice(0, 3)>>
    <<for _i = 0; _i < _group6.length; _i++>>
        <<set _tip = random(1, 2)>>
        <<capture _i _tip _group6[_i]>>
            <<link _group6[_i]>>
                <<replace "#customerGroup6">>
                    <p>The atmosphere lightens as the <<=_group6[_i]>> laughs off a joke, leaving you a $<<=_tip>> tip as thanks.<span style="color: green;"> +$<<=_tip>> Credits</span></p>
                    <<set $player.credits += _tip>>
                    <<updatebar>>
                <</replace>>
            <</link>>
        <</capture>>
    <</for>>
    </ul>
</div>

<!-- Finish Shift Link -->
[[Finish your shift|The Last Home]]
<</nobr>>


:: LockboxHubInquire [lowerdeckact] {"position":"1075,1675","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lockbox.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Lockbox Hub - Managerial Office",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Lockbox Hub - Managerial Office</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

You approach the managerial office, a clean and efficient space overlooking the rows of high-security lockers. Behind a sleek desk, the lockbox manager, greets you with a practiced smile. His uniform is immaculate, a stark contrast to the bustling activity of the hub outside.
<br><br>
<<say 'Sable Mercer' setup.ImagePath+'/characters/minor/sablemercer.jpg'>>"Greetings! I'm Sable Mercer, manager of The Lockbox Hub. Looking for a secure spot to store your valuables? Our storage service is complimentary for all residents—courtesy of the station's business taxes."<</say>>
<br>
<<set $enoughCredits = $player.credits >= 300>>

You nod, taking in the array of lockers that line the walls. 
<br><br>
<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"That's quite convenient considering that they charge you for breathing here," you reply. "How does this work?"<</say>>
<br>
Sable gestures for you to follow and walks you through the facility. 
<br><br>
<<say 'Sable Mercer' setup.ImagePath+'/characters/minor/sablemercer.jpg'>>"Each resident gets a locker assigned, free of charge. And if you're feeling adventurous, you can purchase access to an abandoned locker for 300 credits. Who knows what you might find."<</say>>
<br>
You eye the abandoned lockers, mulling over the possibilities. Sable catches your look and chuckles.
<br><br>
<<if $enoughCredits>>\
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"I have enough credits to afford it, but I'll need to think it over."<</say>>
    <<say 'Sable Mercer' setup.ImagePath+'/characters/minor/sablemercer.jpg'>>"Take your time. The lockers aren't going anywhere. When you're ready, just let me know."<</say>>
<<else>>\
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"I'll need to gather 300 credits first before even considering it."<</say>>
    <<say 'Sable Mercer' setup.ImagePath+'/characters/minor/sablemercer.jpg'>>"No rush. We're here whenever you're prepared to dive into the unknown. It's always a bit of a gamble, but that's part of the excitement, isn't it?"<</say>>
<</if>>
<br>
You watch as a drone whizzes by, carrying a small crate to one of the upper lockers. Sable follows your gaze. "Our delivery drones are quite the efficient little workers. They handle all intra-deck transport, making storage here a breeze."
<br><br>
<<say 'Sable Mercer' setup.ImagePath+'/characters/minor/sablemercer.jpg'>>"However, they don't traverse between decks or provide off-station service. For that kind of heavy lifting, you might want to check out the Wharf or hire a transport service—unless you've got your own ship hidden somewhere?" he adds with a playful raise of his eyebrows.<</say>>
<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>"Me, own a ship?" you feign surprise, "If I did, I might not be as worried about locker space."<</say>>
<<say 'Sable Mercer' setup.ImagePath+'/characters/minor/sablemercer.jpg'>>"You'd be surprised at what comes through these doors. I've seen folks who don't look like they own a credit to their name, yet they have keys to some of the largest freighters docked at the station. And if you ever find yourself in need of more extensive storage solutions, for bulk goods or the like, we can certainly accommodate. Just give me a shout."<</say>>
<br>
You consider Sable's offer for a moment.
<br>
<</nobr>>
<<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>
    [["Thank you for the information, Mr. Mercer."|The Lockbox Hub]]
    [["This place better be as secure as you say."|The Lockbox Hub]]
    [["What kind of special storage options are available?"|LockboxHubSpecialRequests]]
<</say>>



:: LockboxHubPurchaseAbandonedLocker [lowerdeckact] {"position":"1250,1525","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lockboxhub2.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Lockbox Hub - Abandoned Locker",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Generate random rewards -->
<<set _foundItems = []>> <!-- Initialize an array to hold found items -->
<<set _randomCredits = 0>> <!-- Initialize variable to hold random credits -->

<<if random(1, 2) == 1>> <!-- Determine if parts or credits will be found -->
    <<set _foundItem to random(1, 5)>>
    <<set _itemString = "lowerdecks" + ["Parts", "Scrap", "Cyberware", "StolenItems", "Contraband"][_foundItem - 1]>>
    <<set _foundItems.push(_itemString)>>
    <<set _foundItems.push(_itemString)>> <!-- Add two items to the array -->
<<else>>
    <<set _randomCredits to random(100, 450)>>
    <<set $player.credits += _randomCredits>> <!-- Add random credits to player's balance -->
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Lockbox Hub - Abandoned Locker</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Display found items or credits -->
<p>As you pry open the abandoned locker, a musty scent wafts out, mingling with the sterile air of the hub. It's a scent full of secrets, holding the promise of forgotten treasures within.</p>

<<if _foundItems.length>> <!-- If items were found -->
    <p>You rummage through the contents, and your efforts uncover:</p>
    <ul>
    <<for _item range _foundItems>>
    <<set _itemName to _item.replace("lowerdecks", "")>>
    <<set _itemDisplayName to {
        "Parts": "Mechanical Parts",
        "Scrap": "Assorted Scrap Metal",
        "Cyberware": "Cybernetic Components",
        "StolenItems": "Unclaimed Stolen Goods",
        "Contraband": "Illegal Contraband"
    }[_itemName]>>
    <<run State.variables[_item]++>> <!-- Increment the global variable directly using State.variables -->
    <li><<print _itemDisplayName>>: +1</li>
<</for>>

    </ul>
    <p>Each piece feels heavy with history, and you can't help but wonder about the locker's previous owner.</p>
<<else>> <!-- If credits were found instead -->
    <p>You don't find much, but after selling a few bits of junk to the recycler you discover a stash of credits. Counting them out, you find a total of <<print _randomCredits>> credits.</p>
    <p><span style="color: green;"><<print _randomCredits>> Credits found!</span></p>
    <<if _randomCredits < 300>>
        <p>It's not the windfall you were hoping for, but it cuts down on your loss a bit.</p>
    <<elseif _randomCredits > 300>>
        <p>You've turned a tidy profit on this locker—fortune smiles upon you today.</p>
    <<else>>
        <p>You've broken even on this gamble. Not a loss, but the thrill of risk now seems a distant memory.</p>
    <</if>>
<</if>>

<!-- Continue Link -->
[[Return to The Lockbox Hub.|The Lockbox Hub]]
<</nobr>>



:: LockboxHubSpecialRequests [lowerdeckact] {"position":"950,1550","size":"100,100"}
<<nobr>>
<<if not $visitedSpecialRequests>> <!-- First visit -->
    <<set $visitedSpecialRequests to true>>
    <<set $currentArea to "lowerdecks">>
    <<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lockbox.jpg'>>
    <<addmins $timeadd>>
    <<set $location to {
        name: "Meltisar System, MOR-1, The Lockbox Hub - Special Storage Requests",
        outside: false,
        vacuum: false,
        temperature: true
    }>>
    <<updatebar>>

    <<say 'Sable Mercer' setup.ImagePath+'/characters/minor/sablemercer.jpg'>>
    "For those who require space for bulk goods or larger items, we offer specialized warehousing services. The fee is 1000 credits per week for each cubic meter of storage. For items that are larger but not in bulk, the cost varies depending on the item."
    <</say>>

    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>
    "That seems like quite a steep price for storage."
    <</say>>

    <<say 'Sable Mercer' setup.ImagePath+'/characters/minor/sablemercer.jpg'>>
    "Believe me, I'm well aware. However, our clients who need such services are usually well above the average station dweller. Folks who are managing shiploads and business shipments don't usually flinch at the cost."
    <</say>>

    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>
    "Looks like I've got some climbing to do on the economic ladder."
    <</say>>

    <<say 'Sable Mercer' setup.ImagePath+'/characters/minor/sablemercer.jpg'>>
    "Don't we all? But it's always good to have aspirations, right?"
    <</say>>

    <!-- Continue Link -->
    <<say '$player.name' setup.ImagePath+'/characters/'+$playerP+'/'+$playerP+'.jpg'>>[[I'll keep that in mind. Thanks, Sable.|The Lockbox Hub][$timeadd = 5]]<</say>>

<<else>> <!-- Subsequent visits -->
    <<set $currentArea to "lowerdecks">>
    <<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lockbox.jpg'>>
    <<addmins $timeadd>>
    <<set $location to {
        name: "Meltisar System, MOR-1, The Lockbox Hub - Special Storage Requests",
        outside: false,
        vacuum: false,
        temperature: true
    }>>
    <<updatebar>>

    <p>You're back at Sable's office for more details on special storage options.</p>

    <!-- Option Links -->
[[Never mind, I need to think it over.|The Lockbox Hub][$timeadd = 5]]

<</if>>
<</nobr>>



:: Lower Deck Promenade [travel] {"position":"400,1050","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Lower Deck Promenade",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<<mapWidget "images/locs/melt/mor1/lower/map/lowerdeckprom.jpg">>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Lower Deck Promenade</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
Places of Interest:
[[Nebula Noodles.|Nebula Noodles][$timeadd = 5]]
[[Grafter's Gear.|Grafters Gear][$timeadd = 5]]
[[The Electric Emporium.|The Electric Emporium][$timeadd = 5]]
[[Void Vistas.|Void Vistas][$timeadd = 5]]
[[Loiter. (00:15)|Lower Deck Promenade][$timeadd = 15]]

Travel:
[[Back to the Lower Decks Hub.|Lower Decks][$timeadd = 5]]
[[(Clockwise) The station's primary outer corridor leads to Lower Engineering.|Station Infrastructure][$timeadd = 5]]
[[(Counter-Clockwise) The station's primary outer corridor leads to the Lower Observation Deck.|Lower Observation Deck][$timeadd = 5]]
[[A small forgotten shortcut leads to the station's underbelly.|Forgotten Slums][$timeadd = 5]]

The Lower Deck Promenade is a buzzing artery of commerce and makeshift living. Stalls line the walkway, draped with mismatched tarpaulins and lit by the stutter of makeshift neon. Hackers peddle cracked software from under their hoods, while street chefs serve up steaming bowls of vat-grown noodles.

The air is dense with competing smells: the grease of street food, the sharp tang of illicit stims, and the mustiness that comes from too many bodies in too little space. The din of countless languages fills your ears, the constant drone of bargaining and back-alley dealings forming the soundtrack of the lower decks.

The thoroughfare is constantly abuzz with MOR-1's downtrodden; it's a place where fortunes can plummet or soar on the turn of a card, the slice of a data chip, or the promise of a better berth.

Crisscrossing the promenade, you see pathways leading to other sectors—some shrouded in darkness, others bustling with neon-lit life. Each passageway holds the potential for opportunity or the risk of peril for those who dare to walk them.


:: Lower Decks [travel] {"position":"1100,1425","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerdecks.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<<mapWidget "images/locs/melt/mor1/lower/map/lowerdeckhub.jpg">>
<!-- Adding an ID to the first heading -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Lower Decks</span></h2>
<!-- Adding an ID to the first horizontal rule -->
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<!-- Adding an ID to the second heading -->
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<!-- Adding an ID to the second horizontal rule -->
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">


<<if $lowerdecksfirstvisit !== 1>>
<p>Emerging from the dimly lit confines of cold storage, you're immediately enveloped by the vibrant chaos of the station's hub. The stark transition is disorienting—the quiet hum of refrigeration units is replaced by the cacophony of a living, breathing marketplace. The air is warmer here, tinged with the scent of exotic spices and the tang of ionized metal.</p>

<p>Around you, the station <span style="color: #FFD700;">teems with life</span>. A sea of faces from countless species moves in a constant stream, each individual absorbed in their own story. The hubbub of conversation is punctuated by the clatter of machinery and the occasional hiss of steam from an overworked food stall.</p>

<p>The architecture here is a patchwork of repairs and improvisations. Pipes and cables snake along the ceiling, disappearing into the bulkheads. The walls are plastered with layers of advertisements, each vying for attention with bold colors and flashing lights. It's clear that the Lower Decks serve as the <span style="color: #4CAF50;">beating heart</span> of MOR-1, a place where survival hinges on wit and will.</p>

<p>As you navigate through the crowd, you catch snippets of haggling, the laughter of shared jokes, and the occasional snarl of a deal gone sour. The station's inhabitants move with a purposeful energy, each one a cog in the vast machine of station life.</p>

<p>Despite the initial sensory overload, you begin to find a rhythm in the chaos. The station's pulse becomes a guiding beat, leading you deeper into the network of commerce and camaraderie that defines the Lower Decks. Here, in the nexus of activity, you sense that every choice you make could be the start of a new chapter in your own story.</p>

<p>Strands of <span style="color: #00BFFF;">neon signage</span> cut through the gloom, offering a hazy illumination to navigate by. Rugged signs with hastily scrawled directions point towards these arteries, providing the only guidance through the labyrinth. Here, at the nexus of the Lower Decks, every being forges their path—some towards <span style="color: lightgreen;">hope</span>, others towards <span style="color: #DC143C;">oblivion</span>.</p>
<<set $lowerdecksfirstvisit to 1>>
<</if>>

<</nobr>>
Places of Interest:
[[The Lockbox Hub. (00:15)|The Lockbox Hub][$timeadd = 5]]
[[Take the Escalator to the Upper Deck Checkpoint. (00:05)|Upper Deck Checkpoint][$timeadd = 5]]
[[Loiter. (00:15)|Lower Decks][$timeadd = 15]]

Travel:
[[Promenade.|Lower Deck Promenade][$timeadd = 5]]
[[Hab Cells.|Habitation Cells][$timeadd = 5]]
[[Lower Wharf.|Lower Wharf][$timeadd = 5]]
[[Lower Engineering.|Station Infrastructure][$timeadd = 5]]
[[Lower Observation Deck.|Lower Observation Deck][$timeadd = 5]]
[[Slums.|Forgotten Slums][$timeadd = 5]]
[[Cold Storage.|Cold Storage][$timeadd = 5]]

The Lower Decks of MOR-1 unfold before you as a sprawling lattice of corridors and sections, pulsing with the lifeblood of the station's underprivileged. Overhead, naked light tubes flicker erratically, casting unstable shadows over the crowded thoroughfare. Vendors hawk their wares from ramshackle stalls tucked into every conceivable nook, peddling everything from cheap repair parts to grey-market augmentations.

The air is thick with the mingling scents of synthetic oil and fried sustenance, and a constant murmur fills the space—a cacophony of bartering, machinery, and the occasional raised voice as tempers flare. Strands of neon signage cut through the gloom, offering a hazy illumination to navigate by.

In the midst of the controlled chaos, the pathways branch off, leading to the other facets of this metallic underworld.

Rugged signs with hastily scrawled directions point towards these arteries, providing the only guidance through the labyrinth. Here, at the nexus of the Lower Decks, every being forges their path—some towards hope, others towards oblivion.


:: Lower Observation Deck [travel] {"position":"300,1650","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerobservation.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Lower Observation Deck",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<<mapWidget "images/locs/melt/mor1/lower/map/lowerdeckobv.jpg">>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Lower Observation Deck</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
Places of Interest:
[[Approach a Lonely ATM|LowerObservationATM]]
[[Loiter. (00:15)|Lower Observation Deck][$timeadd = 15]]

Travel:
[[Retract to the bustling life of the Lower Decks Hub.|Lower Decks][$timeadd = 5]]
[[(Clockwise) The Station's primary outer corridor leads to the Lower Deck Promenade.|Lower Deck Promenade][$timeadd = 5]]
[[(Counter-Clockwise) The Station's primary outer corridor leads to the Habitation Cells.|Habitation Cells][$timeadd = 5]]

A serene escape from the clamor of MOR-1's lower decks, the Lower Observation Deck offers a momentary reprieve with its panoramic view of the void beyond. The vast expanse of space stretches out, dotted with the flickering lights of distant stars and the occasional silhouette of a passing ship.

Tattered benches line the viewports, many occupied by solitary figures gazing out at the cosmos, lost in thought. Scratches and graffiti on the glass tell tales of those who came before, leaving their marks as silent witnesses to the solitude of space.

Despite the inherent beauty of the celestial vista, a somber mood hangs over the Lower Observation Deck. It’s a space that invites introspection and provides a stark reminder of how small each visitor is in comparison to the galaxy's vastness. It’s a place to dream, to long, or to simply sit in quiet reflection.


:: Lower Wharf [travel] {"position":"1325,650","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Lower Wharf",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<<mapWidget "images/locs/melt/mor1/lower/map/lowerdeckwharf.jpg">>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Lower Wharf</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
Places of Interest:
[[Explore the Wharfside Tech Emporium|WharfsideTechEmporium][$timeadd = 10]]
[[Check out The Dockside Fabricator|DocksideFabricator][$timeadd = 10]]
[[Enter Mariner's Rest|MarinersRest][$timeadd = 5]]
[[Loiter. (00:15)|Lower Wharf][$timeadd = 15]]

Travel:
[[Take the Lift to the Lower Decks Hub.|Lower Decks][$timeadd = 5]]
[[(Clockwise) The station's primary outer corridor leads to the Black Market Bazaar.|Black Market Bazaar][$timeadd = 5]]
[[(Counter-Clockwise) The station's primary outer corridor leads to Lower Engineering.|Station Infrastructure][$timeadd = 5]]

Pungent with the smell of engine fuel and sea brine synthetics, the Lower Wharf is the underbelly of interstellar trade. Rusting freighters dock alongside sleek smugglers' craft, the air echoing with the clang of metal and shout of loaders. Furtive figures negotiate in shadowed corners, conducting transactions best left unscrutinized.

Lights flicker across stacked containers, creating a patchwork of light and darkness. The distant hum of machinery is a constant reminder of the ceaseless commerce that flows through the veins of MOR-1. Here, goods from across the galaxy exchange hands, legally or otherwise, before disappearing into the labyrinth of the station.

Despite the hustle, there's a sense of impermanence to the Lower Wharf. Everything is in transit—people, goods, dreams. The wharf's myriad pathways stand ready to take you to the heart of the Lower Decks or further into its depths.


:: LowerEngineeringDonateParts [lowerdeckact] {"position":"675,650","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerengineering.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Engineering",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $lowerEngineeringDonationEventsRecord>> <<set $lowerEngineeringDonationEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $lowerEngineeringDonationEventsRecord.today != _today>>
    <<set $lowerEngineeringDonationEventsRecord.today to _today>>
    <<set $lowerEngineeringDonationEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to no event -->

<<set _availableEvents to []>> <!-- List of available donation events -->
<<for _i to 1; _i <= 10; _i++>>
    <<if not $lowerEngineeringDonationEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available donation events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $lowerEngineeringDonationEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available donation events -->
    <<set _randomEvent to 0>> <!-- Reset events for the next day -->
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Lower Engineering</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>Amidst the hum of machinery and the clatter of tools, you offer your parts to the engineering team. The engineers, always in need of supplies, welcome your contribution. As you hand over the parts, you can't help but feel a sense of camaraderie with the hardworking crew keeping the station running.</p>

<!-- Random Donation Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Critical Repair -->
        <p>As you hand over the parts to the engineering team, a critical alert blares through the station's PA system. A life support conduit has ruptured in one of the habitation sectors. Thanks to your timely donation, the engineers are able to patch the breach swiftly, averting a potential disaster. The station's residents breathe easier, both literally and figuratively, and the market reflects the positive sentiment. You leave the engineering bay with a sense of pride and a little extra weight in your credit pouch.</p>
        <<set _creditsEarned to random(100, 250)>>
        <<set _fatigueReduction to random(5, 15)>>
        <<set _economyBoost to random(5, 10)>>
        <<set $player.credits += _creditsEarned>>
        <<set $player.fatigue -= _fatigueReduction>>
        <<set $worldEconomyScore += _economyBoost>>
        <<creditchange _creditsEarned "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">>
        <<addmins $timeadd>><br>
        !-- I will provide the entire switch without placeholders or stopping until it is done. --!

    <<case 2>> <!-- Efficiency Boost -->
        <p>Your parts donation coincides with a station-wide efficiency audit. The engineers are in the midst of recalibrating the power distribution network when your components arrive. With your high-quality parts, they're able to enhance the grid's performance, reducing energy waste and improving output. The station administrator personally thanks you for your contribution, noting the positive ripple effect it will have on the economy. As you check your account balance, you can't help but smile at the generous compensation for your foresight.</p>
        <<set _creditsEarned to random(100, 250)>>
        <<set _fatigueReduction to random(5, 15)>>
        <<set _economyBoost to random(5, 10)>>
        <<set $player.credits += _creditsEarned>>
        <<set $player.fatigue -= _fatigueReduction>>
        <<set $worldEconomyScore += _economyBoost>>
        <<creditchange _creditsEarned "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">>
        <<addmins $timeadd>><br>
        !-- I will provide the entire switch without placeholders or stopping until it is done. --!

    <<case 3>> <!-- Maintenance Upgrade -->
        <p>The engineering deck is abuzz with activity as you arrive with your parts. A major maintenance overhaul is underway, targeting several of the older systems that have been limping along for far too long. Your parts are a perfect match for the outdated components, and the upgrade goes off without a hitch. The engineers share stories of past close calls that your donation has now rendered obsolete. The station's economy takes a noticeable upturn as confidence in the infrastructure grows. Your account receives a healthy credit deposit, a tangible thank you for your contribution to the station's well-being.</p>
        <<set _creditsEarned to random(100, 250)>>
        <<set _fatigueReduction to random(5, 15)>>
        <<set _economyBoost to random(5, 10)>>
        <<set $player.credits += _creditsEarned>>
        <<set $player.fatigue -= _fatigueReduction>>
        <<set $worldEconomyScore += _economyBoost>>
        <<creditchange _creditsEarned "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">>
        <<addmins $timeadd>><br>
        !-- I will provide the entire switch without placeholders or stopping until it is done. --!

    <<case 4>> <!-- Emergency Use -->
        <p>The station's warning sirens wail as you deliver your parts to the engineering bay. An unexpected power surge has put the main reactor at risk of overload. Your components are exactly what's needed to stabilize the situation. As the engineers work with focused intensity, you assist where you can, handing them tools and offering support. After tense moments, the lights flicker back to normal, and a collective sigh of relief echoes through the corridors. The station's economy takes an optimistic turn, reflecting the averted crisis. Your comm device pings with a notification of a substantial credit transfer, a reward for your crucial role in the emergency.</p>
        <<set _creditsEarned to random(100, 250)>>
        <<set _fatigueReduction to random(5, 15)>>
        <<set _economyBoost to random(5, 10)>>
        <<set $player.credits += _creditsEarned>>
        <<set $player.fatigue -= _fatigueReduction>>
        <<set $worldEconomyScore += _economyBoost>>
        <<creditchange _creditsEarned "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">>
        <<addmins $timeadd>><br>
        !-- I will provide the entire switch without placeholders or stopping until it is done. --!

    <<case 5>> <!-- Research Contribution -->
        <p>In the quieter section of the engineering deck, a team of researchers eagerly accepts your parts. They're working on a prototype that could revolutionize energy consumption on the station. Your donation accelerates their progress, and within hours, they achieve a breakthrough. The news spreads quickly, boosting morale and economic forecasts alike. The research team ensures you're credited for your support, and the station's finance office disburses a generous sum into your account, reflecting the potential your contribution has unlocked.</p>
        <<set _creditsEarned to random(100, 250)>>
        <<set _fatigueReduction to random(5, 15)>>
        <<set _economyBoost to random(5, 10)>>
        <<set $player.credits += _creditsEarned>>
        <<set $player.fatigue -= _fatigueReduction>>
        <<set $worldEconomyScore += _economyBoost>>
        <<creditchange _creditsEarned "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">>
        <<addmins $timeadd>><br>
        !-- I will provide the entire switch without placeholders or stopping until it is done. --!

    <<case 6>> <!-- System Optimization -->
        <p>The engineering bay hums with a focused energy as you arrive with your parts. Today's task is a full system optimization, a preventative measure to keep the station's critical systems running at peak efficiency. Your parts are integrated into the life support systems, enhancing their reliability and reducing the risk of future failures. The engineers commend your foresight, and the station's economic indicators tick upwards as news of the successful optimization spreads. Your personal finances also see an uptick, as the station's administration awards you a tidy sum for your contribution to the safety and efficiency of the station.</p>
        <<set _creditsEarned to random(100, 250)>>
        <<set _fatigueReduction to random(5, 15)>>
        <<set _economyBoost to random(5, 10)>>
        <<set $player.credits += _creditsEarned>>
        <<set $player.fatigue -= _fatigueReduction>>
        <<set $worldEconomyScore += _economyBoost>>
        <<creditchange _creditsEarned "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">>
        <<addmins $timeadd>><br>
        !-- I will provide the entire switch without placeholders or stopping until it is done. --!

    <<case 7>> <!-- Power Grid Reinforcement -->
        <p>With the station's power grid nearing its capacity, your timely donation of high-grade parts is a godsend to the overworked engineers. They set to work reinforcing the grid's weakest segments, integrating your components with practiced skill. As the final connections are secured, the grid's efficiency readings jump to levels not seen in years. The economic impact is immediate, with energy traders and businesses across the station feeling a surge of optimism. Your account balance swells with a hefty credit bonus, a tangible thank you for your part in securing the station's energetic future.</p>
        <<set _creditsEarned to random(100, 250)>>
        <<set _fatigueReduction to random(5, 15)>>
        <<set _economyBoost to random(5, 10)>>
        <<set $player.credits += _creditsEarned>>
        <<set $player.fatigue -= _fatigueReduction>>
        <<set $worldEconomyScore += _economyBoost>>
        <<creditchange _creditsEarned "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">>
        <<addmins $timeadd>><br>
        !-- I will provide the entire switch without placeholders or stopping until it is done. --!

    <<case 8>> <!-- Habitat Improvement -->
        <p>The habitat sections of the station have been plagued by environmental control issues for weeks. Your delivery of specialized parts is met with cheers from the habitat technicians. With your help, they're able to replace the faulty systems, instantly improving air quality and temperature regulation. Residents express their gratitude with small gifts and tokens of appreciation. The station's economic indicators reflect the uplifted mood, and you receive a generous credit deposit for your contribution to the community's well-being.</p>
        <<set _creditsEarned to random(100, 250)>>
        <<set _fatigueReduction to random(5, 15)>>
        <<set _economyBoost to random(5, 10)>>
        <<set $player.credits += _creditsEarned>>
        <<set $player.fatigue -= _fatigueReduction>>
        <<set $worldEconomyScore += _economyBoost>>
        <<creditchange _creditsEarned "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">>
        <<addmins $timeadd>><br>
        !-- I will provide the entire switch without placeholders or stopping until it is done. --!

    <<case 9>> <!-- Safety Measures -->
        <p>Station safety is no small matter, and your donation arrives just as the engineering team is reviewing the latest safety protocols. With your high-quality parts, they upgrade several critical systems, enhancing the automated response to potential hazards. The station's safety rating improves, and with it, the confidence of its inhabitants and investors. The market responds positively to the news, and your personal finances benefit from the station's increased economic stability. A substantial credit reward is transferred to your account, a small price for the peace of mind you've helped provide.</p>
        <<set _creditsEarned to random(100, 250)>>
        <<set _fatigueReduction to random(5, 15)>>
        <<set _economyBoost to random(5, 10)>>
        <<set $player.credits += _creditsEarned>>
        <<set $player.fatigue -= _fatigueReduction>>
        <<set $worldEconomyScore += _economyBoost>>
        <<creditchange _creditsEarned "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">>
        <<addmins $timeadd>><br>
        !-- I will provide the entire switch without placeholders or stopping until it is done. --!

    <<case 10>> <!-- Tech Advancement -->
        <p>As you navigate through the maze of conduits and machinery in Lower Engineering, you find a small team huddled around a prototype device that promises to revolutionize the station's tech. Your parts are a perfect fit for the final piece of the puzzle. With a few adjustments, the device whirs to life, its potential impact on station life almost palpable. Word of the successful test spreads like wildfire, boosting the station's economic outlook. The team showers you with thanks, and the station's treasury credits your account with a handsome sum for your pivotal role in this technological leap forward.</p>
        <<set _creditsEarned to random(100, 250)>>
        <<set _fatigueReduction to random(5, 15)>>
        <<set _economyBoost to random(5, 10)>>
        <<set $player.credits += _creditsEarned>>
        <<set $player.fatigue -= _fatigueReduction>>
        <<set $worldEconomyScore += _economyBoost>>
        <<creditchange _creditsEarned "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">>
        <<addmins $timeadd>><br>
        !-- I will provide the entire switch without placeholders or stopping until it is done. --!

    <<default>> <!-- Default Donation Event -->
        <p>Your routine donation of parts to the engineering bay may not make the headlines, but it's the consistent support from individuals like you that keeps the station running smoothly. The engineers put your parts to good use, maintaining the myriad systems that ensure life aboard the station remains comfortable and secure. The station's economy benefits from these small, unseen acts of maintenance, and your account sees a modest increase in credits. It's a simple transaction, but one that leaves you feeling connected to the lifeblood of the station.</p>
        <<set _creditsEarned to random(100, 250)>>
        <<set _fatigueReduction to random(5, 15)>>
        <<set _economyBoost to random(5, 10)>>
        <<set $player.credits += _creditsEarned>>
        <<set $player.fatigue -= _fatigueReduction>>
        <<set $worldEconomyScore += _economyBoost>>
        <<creditchange _creditsEarned "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">>
        <<addmins $timeadd>><br>
        !-- I will provide the entire switch without placeholders or stopping until it is done. --!
<</switch>>
<span class="i-gain">+Lower Rep</span>
<<set $lowerdecksRep += 5>>
<br><br>
<!-- Continue Link -->
[[Back to Lower Engineering.|Station Infrastructure]]
<</nobr>>


:: LowerEngineeringWorkShift [lowerdeckact] {"position":"600,750","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerengineering.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Engineering",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $lowerEngineeringShiftEventsRecord>> <<set $lowerEngineeringShiftEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $lowerEngineeringShiftEventsRecord.today != _today>>
    <<set $lowerEngineeringShiftEventsRecord.today to _today>>
    <<set $lowerEngineeringShiftEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to no event -->

<<set _availableEvents to []>> <!-- List of available shift events -->
<<for _i to 1; _i <= 10; _i++>>
    <<if not $lowerEngineeringShiftEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available shift events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $lowerEngineeringShiftEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available shift events -->
    <<set _randomEvent to 0>> <!-- Reset events for the next day -->
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Lower Engineering</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>You don your work gear and join the engineering crew for today's shift. The station's heart beats with the rhythm of machines and the pulse of flowing energy. It's another day to keep the gears turning and the lights on for everyone aboard.</p>

<!-- Random Shift Events -->

<<switch _randomEvent>>
    <<case 1>> <!-- Calibration Precision -->
        <p>The day's task is a meticulous calibration of the station's atmospheric processors. The tedious work requires your undivided attention, but the satisfaction of a job well done is its own reward.</p>
        <<set _earnedCredits = random(25, 50)>>
        <<set $player.credits += _earnedCredits>>
        <<set $player.stress -= Math.round($player.stress * 0.05)>>
        <<set $player.mood += Math.round($player.mood * 0.02)>>
        <<set $worldEconomyScore += 1>>
        <<creditchange _earnedCredits "positive">>
        <<changemoods "stress" "minor" "NegEffectOnPlayer">>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">><br>

    <<case 2>> <!-- System Overhaul -->
        <p>You're part of a team performing a major overhaul on the power distribution network. The pressure is intense as the station relies on your swift and accurate work.</p>
        <<set _earnedCredits = random(25, 50)>>
        <<set $player.credits += _earnedCredits>>
        <<set $player.stress -= Math.round($player.stress * 0.10)>>
        <<set $player.mood -= Math.round($player.mood * 0.02)>>
        <<set $worldEconomyScore += 1>>
        <<creditchange _earnedCredits "positive">>
        <<changemoods "stress" "major" "NegEffectOnPlayer">>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">><br>

    <<case 3>> <!-- Unexpected Malfunction -->
        <p>An unexpected malfunction in the life support system turns your routine shift into a race against time. You manage to fix the issue, but not without some high-stress moments.</p>
        <<set _earnedCredits = random(25, 50)>>
        <<set $player.credits += _earnedCredits>>
        <<set $player.stress -= Math.round($player.stress * 0.15)>>
        <<set $player.mood -= Math.round($player.mood * 0.05)>>
        <<set $worldEconomyScore += 1>>
        <<creditchange _earnedCredits "positive">>
        <<changemoods "stress" "major" "NegEffectOnPlayer">>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">><br>

    <<case 4>> <!-- Routine Inspection -->
        <p>Your shift involves a routine inspection of the coolant systems. It's uneventful, but the monotony wears on you by the end of the day.</p>
        <<set _earnedCredits = random(25, 50)>>
        <<set $player.credits += _earnedCredits>>
        <<set $player.stress += Math.round($player.stress * 0.02)>>
        <<set $player.mood -= Math.round($player.mood * 0.05)>>
        <<set $worldEconomyScore += 1>>
        <<creditchange _earnedCredits "positive">>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">><br>

    <<case 5>> <!-- Emergency Patch-Up -->
        <p>A critical leak is detected in one of the fuel lines, and you're tasked with an emergency patch-up. The successful repair boosts your confidence, despite the high-pressure situation.</p>
        <<set _earnedCredits = random(25, 50)>>
        <<set $player.credits += _earnedCredits>>
        <<set $player.stress -= Math.round($player.stress * 0.10)>>
        <<set $player.mood += Math.round($player.mood * 0.04)>>
        <<set $worldEconomyScore += 1>>
        <<creditchange _earnedCredits "positive">>
        <<changemoods "stress" "major" "NegEffectOnPlayer">>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">><br>

    <<case 6>> <!-- Software Debugging -->
        <p>The day is spent debugging software glitches that have been plaguing the waste recycling systems. It's frustrating work, but the relief of resolving the issues is palpable.</p>
        <<set _earnedCredits = random(25, 50)>>
        <<set $player.credits += _earnedCredits>>
        <<set $player.stress -= Math.round($player.stress * 0.10)>>
        <<set $player.mood += Math.round($player.mood * 0.02)>>
        <<set $worldEconomyScore += 1>>
        <<creditchange _earnedCredits "positive">>
        <<changemoods "stress" "major" "NegEffectOnPlayer">>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">><br>

    <<case 7>> <!-- Network Upgrades -->
        <p>The day's focus is on upgrading the station's communication network. While the improvements are significant, the complexity of the task leaves you mentally exhausted.</p>
        <<set _earnedCredits = random(25, 50)>>
        <<set $player.credits += _earnedCredits>>
        <<set $player.stress -= Math.round($player.stress * 0.10)>>
        <<set $player.mood -= Math.round($player.mood * 0.04)>>
        <<set $worldEconomyScore += 1>>
        <<creditchange _earnedCredits "positive">>
        <<changemoods "stress" "major" "NegEffectOnPlayer">>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">><br>

    <<case 8>> <!-- Energy Efficiency -->
        <p>You work on a project aimed at increasing energy efficiency throughout the station. The success of your efforts brings a sense of accomplishment, though the day is long and tiring.</p>
        <<set _earnedCredits = random(25, 50)>>
        <<set $player.credits += _earnedCredits>>
        <<set $player.stress += Math.round($player.stress * 0.05)>>
        <<set $player.mood += Math.round($player.mood * 0.02)>>
        <<set $worldEconomyScore += 1>>
        <<creditchange _earnedCredits "positive">>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">><br>

    <<case 9>> <!-- Unexpected Breakdown -->
        <p>An unexpected breakdown of a primary coolant pump throws your shift into chaos. The stressful situation is resolved thanks to your quick thinking, but it takes a toll on your overall well-being.</p>
        <<set _earnedCredits = random(25, 50)>>
        <<set $player.credits += _earnedCredits>>
        <<set $player.stress -= Math.round($player.stress * 0.15)>>
        <<set $player.mood -= Math.round($player.mood * 0.10)>>
        <<set $worldEconomyScore += 1>>
        <<creditchange _earnedCredits "positive">>
        <<changemoods "stress" "major" "NegEffectOnPlayer">>
        <<changemoods "mood" "major" "NegEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">><br>

    <<case 10>> <!-- Prototype Testing -->
        <p>You're selected to assist in testing a new prototype designed to enhance reactor efficiency. The excitement of working with cutting-edge technology is palpable, but the pressure to deliver results is immense.</p>
        <<set _earnedCredits = random(25, 50)>>
        <<set $player.credits += _earnedCredits>>
        <<set $player.stress -= Math.round($player.stress * 0.10)>>
        <<set $player.mood += Math.round($player.mood * 0.05)>>
        <<set $worldEconomyScore += 1>>
        <<creditchange _earnedCredits "positive">>
        <<changemoods "stress" "major" "NegEffectOnPlayer">>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">><br>

    <<default>> <!-- Standard Maintenance -->
        <p>Your shift is filled with standard maintenance tasks. It's a steady day's work, with no surprises, but the repetitive nature of the tasks doesn't do much for your mood.</p>
        <<set _earnedCredits = random(25, 50)>>
        <<set $player.credits += _earnedCredits>>
        <<set $player.stress += Math.round($player.stress * 0.02)>>
        <<set $player.mood -= Math.round($player.mood * 0.02)>>
        <<set $worldEconomyScore += 1>>
        <<creditchange _earnedCredits "positive">>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">>
        <<changemoods "economy" "minor" "PosEffectOnPlayer">><br>
<</switch>>

<br>
<!-- Continue Link -->
[[Back to Lower Engineering.|Station Infrastructure]]
<</nobr>>


:: LowerEvent1 [event] {"position":"1100,1200","size":"100,100"}
<<nobr>>
<!-- this is the first event and can serve as a template for other events -->
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/event.jpg'>>
<!-- addmins is a function that adds the previous timeadd to the clock, its run at the top of a passage to update the clock, it shouldn't be changed to a value here, instead we are running the previous time add. Instead, at the bottom of the passage, based on how long the even took, set $timeadd there. addmins resets timeadd to 0 -->
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: lightblue; font-weight: bold; font-size: 24px;">Lower Decks - Incident</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Event Description based on Combined Difficulty Score -->
<!-- The following paragraphs change based on the combined difficulty score -->
<<if $combinedDifficultyScore <= 3>>
    <p>The Lower Decks are unusually calm today. The corridors, though dimly lit, are peaceful, and the usual hustle is replaced by a serene quietness. It seems the recent economic stability has brought a temporary respite from the usual chaos.</p>
<<elseif $combinedDifficultyScore <= 6>>
    <p>The corridors of the Lower Decks are bustling with activity. Traders and inhabitants go about their business warily, a reflection of the moderate danger and economic uncertainty that characterizes this area of the station.</p>
<<else>>
    <p>The Lower Decks are a scene of turmoil. The flickering lights cast long shadows over the debris-strewn corridors, evidence of recent conflicts and economic hardship. Tension hangs heavy in the air, a constant reminder of the high danger and dire economic situation.</p>
<</if>>


<!-- Additional Effect based on Danger Score -->
<!-- Player stat effects are indicated with colored spans: Yellow (-), Red (--), Green (+/++) -->
<!-- Comment: Stat effect markers (+Stress, -Mood, etc.) are placed at the end of sentences or paragraphs without periods, indicating the change in player stats. In this system, higher values are better, so an increase (+) is positive and a decrease (-) is negative. -->
<<if $dangerLevelScore < 400>> <!-- Lower score means higher danger -->
    <p>As you make your way through the area, the heavy presence of gangs and aggressive security patrols is noticeable. Their watchful eyes and the palpable tension in the air are a constant stressor. The need to remain alert and cautious takes a toll on your mental and physical well-being. <span style="color: yellow;">-Fatigue</span></p>
    <<set $player.stress -= 10>>
    <<set $player.fatigue -= 10>>
    <<set $player.mood -= 10>>
    <p>The encounter leaves you more stressed, and in a worse mood than before, making your journey through these corridors increasingly challenging. <span style="color: red;">-Mood</span> <span style="color: red;">-Stress</span></p>
<</if>>

<!-- Continue Link -->
<<link "Continue" $continue>><</link>>

<!-- 
Player stat variables that can be modified by events include: 
$player.health, $player.mood, $player.stress, $player.trauma, 
$player.fatigue, $player.powerReserves, $player.credits, $player.debt

Guidelines for Adjusting Player Stats:
1. Each stat ranges from 0 to 1000.
2. Adjustments to stats should be carefully considered based on the event's context and frequency.
3. For frequent or recurring events, changes to stats should generally be minor to avoid excessively penalizing or benefiting the player. For example, a loss or gain of 10 points in an event that occurs regularly provides a noticeable but not severe impact.
4. More significant changes can be justified for rare or particularly impactful events. However, these should be used sparingly and align with the narrative or gameplay mechanics.
5. In this template, we adjust 'stress', 'fatigue', and 'mood' by -10 points each as the player is observed by others, creating a mild but noticeable effect that reflects the narrative context without being overly punitive.

Note on this Template: If this is being used as a template, keep in mind that all the comments and notes in it shouldn't be repeated when making the new event unless the comment is specific to the event. This will reduce comment overhead.
-->
<</nobr>>



:: LowerEvent2 [event] {"position":"1000,1200","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/event.jpg'>>
<<addmins $timeadd>> <!-- Updates the in-game clock based on previously set timeadd -->
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: lightblue; font-weight: bold; font-size: 24px;">Encounter at the Lower Decks</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Event Description with Random Character and Cost -->
<!-- Random character and cost add unpredictability and depth to the event -->
<<set _characters = ["a scrappy-looking individual", "a mysterious cloaked figure", "an old acquaintance", "a wary station worker", "a chatty merchant"]>>
<<set _character = _characters.random()>>
<<set _cost = random(5, 100)>>
<<set _stressRelief = Math.round(_cost / 2)>>
<p>As you navigate the maze-like corridors of the Lower Decks, you're approached by <<=_character>>. "Got any credits for some valuable info?" they ask, eyes glinting with sly knowledge.</p>

<!-- Player Choices Container -->
<div id="_choiceId">

    <!-- Player Choice: Give Credits -->
    <<if $player.credits >= _cost>>
        <<linkreplace "Give <<= _cost >> credits for info">>
            <<replace "#_choiceId">>
                <<set $player.credits -= _cost>>
                <<set _warnings = ["a security checkpoint", "a gang looking for 'tax'", "a chemical spill", "a malfunctioning security drone", "a heated argument escalating", "an area with faulty lighting"]>>
                <<set _warning = _warnings.random()>>
                <p>You hand over the credits, and <<= _character >> leans in closer. "Be careful around the next corridor. There's <<= _warning >>. Good luck," they whisper, before disappearing into the crowd.</p>
                <<set $player.stress += _stressRelief>>
                <p>You feel a bit relieved knowing what to avoid ahead.<span style="color: green;"> +Stress</span></p>
                <<link "Continue" $continue>><</link>>
            <</replace>>
        <</linkreplace>>
    <<else>>
        <span style="color: grey;">Give <<= _cost >> credits for info (Not enough credits)</span>
    <</if>>
<br>
    <!-- Player Choice: Refuse -->
    <<linkreplace "Refuse and walk away">>
        <<replace "#_choiceId">>
            <p>You decline and continue on your way, keeping an eye out for any trouble on your own.</p>
            <<link "Continue" $continue>><</link>>
        <</replace>>
    <</linkreplace>>
</div>
<!-- Event Description based on Combined Difficulty Score -->
<<if $combinedDifficultyScore <= 2>>
    <p>Whispers of calm spread through the Lower Decks as if the station itself has taken a deep, soothing breath. The dim corridors are tranquil, the usual clamor giving way to a rare hush that invites a moment of respite for weary souls.</p>
    <<set $player.mood += Math.round($player.mood * 0.05 + 10)>>
    <<changemoods "mood" "major" "PosEffectOnPlayer">><br>
<<elseif $combinedDifficultyScore >= 3 and $combinedDifficultyScore <= 5>>
    <p>Glimmers of hope flicker amidst the routine bustle. Merchants display their wares with a touch more zeal, and the residents' conversations are tinged with a cautious optimism that better cycles may be on the horizon.</p>
    <<set $player.mood += Math.round($player.mood * 0.03 + 5)>>
    <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>
<<elseif $combinedDifficultyScore >= 6 and $combinedDifficultyScore <= 8>>
    <p>The pulse of the decks is steady and strong, mirroring the resolve of those who wander them. Every exchange, every hurried step speaks to the collective effort to thrive despite the shadows that loom in the background.</p>
    <<set $player.mood += Math.round($player.mood * 0.02 + 3)>>
    <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>
<<else>>
    <p>An uneasy current flows through the corridors, as if the very air is charged with the station's collective anxieties. Each glance shared between passersby is heavy with unspoken challenges, a silent testament to the resilience required to endure these trying times.</p>
    <<set $player.mood -= Math.round($player.mood * 0.05 + 10)>>
    <<changemoods "mood" "major" "NegEffectOnPlayer">><br>
<</if>>

<!-- Additional Effect based on Danger Score -->
<<if $dangerLevelScore < 300>>
    <p>Caution taints the atmosphere as frequent alarms and confrontations punctuate your path. The station's pulse races, a reflection of the heightened vigilance required to navigate these charged encounters.</p>
    <<set $player.stress += Math.round($player.stress * 0.05 + 10)>>
    <<set $player.fatigue += Math.round($player.fatigue * 0.05 + 5)>>
    <<set $player.mood -= Math.round($player.mood * 0.05 + 10)>>
    <<changemoods "stress" "major" "NegEffectOnPlayer">>
    <<changemoods "fatigue" "minor" "NegEffectOnPlayer">>
    <<changemoods "mood" "major" "NegEffectOnPlayer">><br>
<<elseif $dangerLevelScore >= 300 and $dangerLevelScore < 600>>
    <p>A subtle tension permeates the crowd, with security patrols threading through the masses like steel threads in a tapestry. The wary glances of your fellow travelers remind you that alertness here is not a choice, but a necessity.</p>
    <<set $player.stress += Math.round($player.stress * 0.03 + 5)>>
    <<set $player.fatigue += Math.round($player.fatigue * 0.03 + 3)>>
    <<set $player.mood -= Math.round($player.mood * 0.03 + 5)>>
    <<changemoods "stress" "minor" "NegEffectOnPlayer">>
    <<changemoods "fatigue" "minor" "NegEffectOnPlayer">>
    <<changemoods "mood" "minor" "NegEffectOnPlayer">><br>
<<elseif $dangerLevelScore >= 600 and $dangerLevelScore < 900>>
    <p>Amidst the backdrop of commerce and chatter, signs of discord surface. A hastily scrubbed slogan here, a wary eye there—small reminders that while the surface may seem calm, the waters below are ever turbulent.</p>
    <<set $player.stress += Math.round($player.stress * 0.02 + 3)>>
    <<set $player.mood -= Math.round($player.mood * 0.02 + 3)>>
    <<changemoods "stress" "minor" "NegEffectOnPlayer">>
    <<changemoods "mood" "minor" "NegEffectOnPlayer">><br>
<<else>>
    <p>The decks today exude a relative peace, as if the station has found a momentary respite from its usual trials. Laughter echoes where once there were harsh words, and the guards' presence is reassuring rather than imposing.</p>
    <<set $player.mood += Math.round($player.mood * 0.05 + 15)>>
    <<changemoods "mood" "major" "PosEffectOnPlayer">><br>
<</if>>
<</nobr>>


:: LowerEvent3 [event] {"position":"900,1200","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/event.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: lightblue; font-weight: bold; font-size: 24px;">Lower Decks - Incident</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">


<<switch _randomScenario>>
    <<case 1>>
        <<if $combinedDifficultyScore <= 3>>
            <p>A street artist has created a vibrant mural that captures the essence of the Lower Decks. It draws a small, appreciative crowd, and you feel a sense of community as you pause to admire the work.</p>
            <<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
            <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<elseif $combinedDifficultyScore <= 6>>
            <p>You witness a skilled pickpocket deftly lift a wallet, but you manage to alert the victim in time. Grateful, they offer you a small reward for your vigilance.</p>
            <<set $player.credits += 10>>
            <<set $player.mood += Math.round($player.mood * 0.01 + 2.5)>>
            <<creditchange 10 "positive">>
            <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<else>>
            <p>A heated argument between merchants escalates, and you're caught in the crossfire. It's a stark reminder of the tension that pervades the Lower Decks.</p>
            <<set $player.health -= Math.round($player.health * 0.02 + 5)>>
            <<set $player.stress += Math.round($player.stress * 0.02 + 5)>>
            <<changemoods "health" "minor" "NegEffectOnPlayer">>
            <<changemoods "stress" "minor" "NegEffectOnPlayer">>
        <</if>>
        <br>
    <<case 2>>
        <<if $combinedDifficultyScore <= 3>>
            <p>You come across a vendor selling exotic fruits at a discounted price. The unexpected deal boosts your spirits and your energy levels.</p>
            <<set $player.health += Math.round($player.health * 0.01 + 2.5)>>
            <<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
            <<changemoods "health" "minor" "PosEffectOnPlayer">>
            <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<elseif $combinedDifficultyScore <= 6>>
            <p>An unscheduled power fluctuation causes a momentary blackout. Though brief, it's a reminder of the underlying instability of the Lower Decks.</p>
            <<set $player.stress += Math.round($player.stress * 0.01 + 2.5)>>
            <<changemoods "stress" "minor" "NegEffectOnPlayer">>
        <<else>>
            <p>You stumble upon a clandestine deal gone wrong. The participants scatter, leaving you to hastily retreat from the chaos that ensues.</p>
            <<set $player.stress += Math.round($player.stress * 0.03 + 7.5)>>
            <<changemoods "stress" "major" "NegEffectOnPlayer">>
            <<set $timeadd to 5>>
            <<addmins $timeadd>>
        <</if>>
        <br>
    <<case 3>>
        <<if $combinedDifficultyScore <= 3>>
            <p>A local musician plays a hauntingly beautiful melody that echoes through the corridors. The soothing sound lingers with you, lightening your step.</p>
            <<set $player.mood += Math.round($player.mood * 0.03 + 7.5)>>
            <<changemoods "mood" "major" "PosEffectOnPlayer">>
        <<elseif $combinedDifficultyScore <= 6>>
            <p>Marketplace rumors of a potential security crackdown have everyone on edge. While nothing comes of it, the rumors alone are enough to dampen the mood.</p>
            <<set $player.mood -= Math.round($player.mood * 0.01 + 2.5)>>
            <<changemoods "mood" "minor" "NegEffectOnPlayer">>
        <<else>>
            <p>Emergency sirens wail as you navigate through a section cordoned off by security. The sight of armed patrols and the air of urgency add to the day's stress.</p>
            <<set $player.stress += Math.round($player.stress * 0.02 + 5)>>
            <<changemoods "stress" "minor" "NegEffectOnPlayer">>
            <<set $timeadd to 10>>
            <<addmins $timeadd>>
        <</if>>
        <br>
    <<default>>
        <p>As you make your way through the Lower Decks, the day passes without incident. It's a rare moment of peace in an otherwise tumultuous environment, and you take a deep breath, savoring the quiet.</p>
        <p>Today, at least, the decks are in your favor.</p>
        <br>
<</switch>>


<br>

<!-- Continue Link -->
<<link "Continue" $continue>><</link>>

<</nobr>>



:: LowerEvent4 [event] {"position":"800,1200","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/event.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: lightblue; font-weight: bold; font-size: 24px;">Lower Decks - Incident</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">
<!-- Event Description based on Combined Difficulty Score -->
<!-- Random Travel Events -->
<<set _randomEvent to random(1, 10)>>
<<switch _randomEvent>>
    <<case 1>>
        <p>As you navigate the bustling marketplace, a vendor catches your eye, offering free samples of a new energy drink. The vibrant taste and rush of energy leave you feeling revitalized and ready to face the station's challenges.</p>
        <<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 2>>
        <p>While traversing the crowded decks, you encounter a tourist with a bewildered expression, map in hand. Your guidance not only earns their heartfelt thanks but also a small token of appreciation.</p>
        <<set $player.credits += 10>>
        <<creditchange 10 "positive">><br>

    <<case 3>>
        <p>A routine walk turns into a nerve-wracking ordeal when a security drone, its sensors glitching, marks you as a person of interest. The situation is resolved without incident, but not without a spike in your stress levels.</p>
        <<set $player.stress += Math.round($player.stress * 0.02 + 5)>>
        <<changemoods "stress" "minor" "NegEffectOnPlayer">>
        <<set $timeadd to 5>>
        <<addmins $timeadd>><br>

    <<case 4>>
        <p>The market's energy is infectious today, and you find yourself haggling with a keen-eyed merchant over some spare parts. The deal you strike is favorable, boosting both your wallet and your mood.</p>
        <<set $player.credits += 20>>
        <<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <<creditchange 20 "positive">>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 5>>
        <p>Amidst the hum of the Lower Decks, you're halted by a routine security check. The officers are professional, and the process is swift, leaving you with a small sense of relief as you continue on your way.</p>
        <<set $player.mood += Math.round($player.mood * 0.01 + 2.5)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 6>>
        <p>Warnings of a skilled pickpocket operating in the area have you on high alert. You take extra precautions with your belongings, avoiding any mishaps but at the cost of your energy.</p>
        <<set $player.fatigue += Math.round($player.fatigue * 0.02 + 2.5)>>
        <<changemoods "fatigue" "minor" "NegEffectOnPlayer">><br>

    <<case 7>>
        <p>A power outage casts the corridor into darkness, forcing you to navigate by the dim glow of emergency lights. The detour through the quiet, shadowy decks offers an unexpected moment of tranquility.</p>
        <<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<set $timeadd to 10>>
        <<addmins $timeadd>><br>

    <<case 8>>
        <p>The sudden appearance of a celebrity sends a ripple of excitement through the crowd. You're swept up in the moment, the collective enthusiasm lifting your spirits.</p>
        <<set $player.mood += Math.round($player.mood * 0.03 + 7.5)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 9>>
        <p>In these trying times, a local charity's efforts to provide meals to those in need is a beacon of hope. Your decision to lend a hand not only helps others but also nourishes your own well-being.</p>
        <<set $player.mood += Math.round($player.mood * 0.04 + 10)>>
        <<set $player.health += Math.round($player.health * 0.02 + 5)>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">>
        <<changemoods "health" "minor" "PosEffectOnPlayer">><br>

    <<case 10>>
        <p>An emergency drill interrupts your journey, causing a slight delay. Despite the inconvenience, the display of readiness and coordination by the station's personnel is a reassuring sight.</p>
        <<set $player.mood += Math.round($player.mood * 0.01 + 2.5)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<set $timeadd to 15>>
        <<addmins $timeadd>><br>

    <<default>> <!-- Default Travel Event -->
        <p>Your passage through the Lower Decks is uneventful, granting you a rare opportunity for introspection. The relative calm allows you to gather your thoughts and focus on the path ahead.</p>
        <<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>
<</switch>>
<br>



<!-- Continue Link -->
<<link "Continue" $continue>><</link>>
<</nobr>>



:: LowerEvent5 [event] {"position":"800,1100","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/event.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: lightblue; font-weight: bold; font-size: 24px;">Lower Decks - Critical Incident</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">

<<set _timeDelay to 0>> <!-- Temporary variable for time delay -->
<<set _randomScenario to random(1, 3)>>
<<switch _randomScenario>> <!-- Using the random scenario variable for switch cases -->
    <<case 1>> <!-- Scenario 1 -->
        <<if $combinedDifficultyScore <= 5>>
            <p>The decks are alive with the sound of innocent mirth as a group of children chase each other, their laughter a rare and precious melody in the often grim quarters of the station. You pause to watch their game, the simple joy of their play cutting through the weight of your daily struggles and lifting your spirits.<br></p>
            <<set $player.mood += Math.round($player.mood * 0.05 + 10)>>
            <<changemoods "mood" "major" "PosEffectOnPlayer">>
            <!-- I will continue until all events are done, no placeholders -->
        <<elseif $combinedDifficultyScore >= 6 and $combinedDifficultyScore < 8>>
            <p>A heated argument erupts in the marketplace, the air crackling with tension as two rival factions dispute over a contested stall. The clash is brief but intense, leaving bystanders, including yourself, on edge as the echoes of the confrontation fade away.<br></p>
            <<set $player.health -= Math.round($player.health * 0.02 + 5)>>
            <<set $player.stress += Math.round($player.stress * 0.02 + 10)>>
            <<changemoods "health" "minor" "NegEffectOnPlayer">><br>
            <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>
            <!-- I will continue until all events are done, no placeholders -->
        <<else>>
            <p>A sudden explosion rocks the station, the result of a sabotage attempt on the life support systems. As alarms blare and emergency lights flash, you join the throng of panicked residents in a desperate bid for safety, the fear palpable in the air.<br></p>
            <<set $player.health -= Math.round($player.health * 0.05 + 10)>>
            <<set $player.stress += Math.round($player.stress * 0.05 + 20)>>
            <<set $timeadd to 10>>
            <<changemoods "health" "major" "NegEffectOnPlayer">><br>
            <<changemoods "stress" "major" "NegEffectOnPlayer">><br>
            <<addmins $timeadd>>
            <!-- I will continue until all events are done, no placeholders -->
        <</if>>
    <<case 2>> <!-- Scenario 2 -->
        <<if $combinedDifficultyScore <= 4>>
            <p>Hidden among the refuse of a neglected corridor, you discover an object of unexpected value. The small, intricate device is a relic from an earlier time, its craftsmanship speaking of a bygone era. The sale of such a find will no doubt bolster your credits and bring a rare smile to your face.<br></p>
            <<set $player.credits += Math.round($player.credits * 0.05 + 10)>>
            <<set $player.mood += Math.round($player.mood * 0.05 + 10)>>
            <<creditchange Math.round($player.credits * 0.05 + 10) "positive">>
            <<changemoods "mood" "major" "PosEffectOnPlayer">><br>
            <!-- I will continue until all events are done, no placeholders -->
        <<elseif $combinedDifficultyScore <= 7>>
            <p>An abrupt security lockdown seals the bulkheads around you, trapping you in a confined space with strangers. Hours pass with no explanation, the uncertainty gnawing at your resolve and chipping away at your composure.<br></p>
            <<set $player.stress += Math.round($player.stress * 0.02 + 10)>>
            <<set $timeadd to 20>>
            <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>
            <<addmins $timeadd>>
            <!-- I will continue until all events are done, no placeholders -->
        <<else>>
            <p>In the midst of a chaotic medical emergency, you find yourself thrust into the role of a makeshift medic. With no one else to turn to, you apply pressure to a stranger's wound, your hands shaking as you recall half-remembered first aid training. The gratitude in the survivor's eyes is your only reward as the crisis abates.<br></p>
            <<set $player.stress += Math.round($player.stress * 0.05 + 20)>>
            <<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
            <<set $timeadd to 20>>
            <<changemoods "stress" "major" "NegEffectOnPlayer">><br>
            <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>
            <<addmins $timeadd>>
            <!-- I will continue until all events are done, no placeholders -->
        <</if>>
    <<case 3>> <!-- Scenario 3 -->
        <<if $combinedDifficultyScore <= 4>>
            <p>The haunting melody of a troubadour's song weaves through the corridors, a poignant reminder of the station's storied past. The lyrics speak of resilience and hope, a narrative that resonates with your own experiences and kindles a warm feeling of connection within you.<br></p>
            <<set $player.mood += Math.round($player.mood * 0.05 + 10)>>
            <<changemoods "mood" "major" "PosEffectOnPlayer">><br>
            <!-- I will continue until all events are done, no placeholders -->
        <<elseif $combinedDifficultyScore <= 7>>
            <p>A malfunction in the environmental systems sends a wave of foul-smelling air through the decks. The stench is a minor annoyance, yet it lingers unpleasantly, a reminder of the station's imperfections and the discomforts of space living.<br></p>
            <<set $player.mood -= Math.round($player.mood * 0.02 + 5)>>
            <<changemoods "mood" "minor" "NegEffectOnPlayer">><br>
            <!-- I will continue until all events are done, no placeholders -->
        <<else>>
            <p>A peaceful protest turns violent as security forces intervene with a heavy hand. The brutality of the crackdown is shocking, leaving you and many others shaken as the cries of the oppressed echo off the cold metal walls.<br></p>
            <<set $player.stress += Math.round($player.stress * 0.05 + 20)>>
            <<set $player.mood -= Math.round($player.mood * 0.05 + 20)>>
            <<set $timeadd to 30>>
            <<changemoods "stress" "major" "NegEffectOnPlayer">><br>
            <<changemoods "mood" "major" "NegEffectOnPlayer">><br>
            <<addmins $timeadd>>
            <!-- I will continue until all events are done, no placeholders -->
        <</if>>
<</switch>><br>


<!-- Continue Link -->
<<link "Continue" $continue>><</link>>

<</nobr>>



:: LowerEvent6 [event] {"position":"900,1100","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/event.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: lightblue; font-weight: bold; font-size: 24px;">Lower Decks - Danger Zone</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Random Event based on Danger Level Score -->
<<set _timeDelay to 0>> <!-- Temporary variable for time delay -->

<<switch $dangerLevelScore>> <!-- Using 'true' to allow for complex condition checks -->
    <<case $dangerLevelScore < 100>> <!-- High Alert -->
        <p>The corridors echo with the sharp retort of gunfire, a stark reminder that the lower decks are a crucible of conflict. Caught in the crossfire of a violent skirmish between station security and insurgent forces, you dive for cover behind a bulkhead, the air sizzling with energy blasts. By some miracle, you emerge from the chaos unscathed, but the encounter takes its toll on your nerves and your body.</p>
        <<set $player.health -= Math.round($player.health * 0.05 + 15)>>
        <<set $player.stress += Math.round($player.stress * 0.05 + 20)>>
        <<set $timeadd to 30>>
        <<changemoods "health" "major" "NegEffectOnPlayer">><br>
        <<changemoods "stress" "major" "NegEffectOnPlayer">><br>
        <<addmins $timeadd>>
        <!-- I will continue until all events are done, no placeholders -->

    <<case $dangerLevelScore >= 100 and $dangerLevelScore < 200>> <!-- Extortion Witness -->
        <p>As you navigate the dimly lit passageways, a sudden commotion draws your attention. A group of hardened gang members, their faces obscured by menacing visors, are shaking down a local vendor. The air is thick with tension and fear. You press yourself against the wall, making yourself as inconspicuous as possible, and slip away before you draw their predatory gaze. The encounter leaves you with a heavy sense of dread, and you can't help but quicken your pace.</p>
        <<set $player.stress += Math.round($player.stress * 0.05 + 15)>>
        <<set $timeadd to 20>>
        <<changemoods "stress" "major" "NegEffectOnPlayer">><br>
        <<addmins $timeadd>>
        <!-- I will continue until all events are done, no placeholders -->

    <<case $dangerLevelScore >= 200 and $dangerLevelScore < 300>> <!-- Tense Standoff -->
        <p>Turning a corner, you stumble upon a standoff. Two rival factions face each other down, their hands hovering over weapons, their eyes filled with mutual animosity. You hold your breath, hoping not to become collateral damage in someone else's fight. After what feels like an eternity, the groups disperse, leaving the corridor in an uneasy silence. The incident leaves you with a lingering sense of unease that clings to you like the station's recycled air.</p>
        <<set $player.stress += Math.round($player.stress * 0.02 + 10)>>
        <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>
        <!-- I will continue until all events are done, no placeholders -->

    <<case $dangerLevelScore >= 300 and $dangerLevelScore < 400>> <!-- Security Drill -->
        <p>Without warning, alarms blare throughout the deck, their shrill cry sending a ripple of panic through the crowd. People scramble in all directions, seeking shelter from an unseen threat. Moments later, an announcement declares it to be a routine security drill, but the damage is done. The false alarm has frayed your nerves, leaving you with a heightened sense of vulnerability as you resume your journey through the station's labyrinthine corridors.</p>
        <<set $player.stress += Math.round($player.stress * 0.02 + 5)>>
        <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>
        <!-- I will continue until all events are done, no placeholders -->

    <<case $dangerLevelScore >= 400 and $dangerLevelScore < 500>> <!-- Urgent Response -->
        <p>As you round a bend, a squad of security personnel rushes past you, their boots thundering against the metal grating. They move with a purpose that suggests urgency, their faces set in grim determination. You overhear snippets of their comms chatter, something about an incident on another level. Though the situation doesn't involve you directly, the sight of the armed response is a stark reminder of the dangers that lurk within the station.</p>
        <<set $player.stress += Math.round($player.stress * 0.01 + 5)>>
        <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>
        <!-- I will continue until all events are done, no placeholders -->

    <<case $dangerLevelScore >= 500 and $dangerLevelScore < 600>> <!-- Peaceful Demonstration -->
        <p>Amidst the usual din of the lower decks, a harmonious chant catches your ear. You come upon a gathering of individuals, their voices united in a call for better living conditions. Their peaceful demonstration, a rare sight on the station, offers a glimmer of hope in a place often marred by strife. The collective optimism is infectious, and you find your spirits lifted as you pass by the assembly.</p>
        <<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>
        <!-- I will continue until all events are done, no placeholders -->

    <<case $dangerLevelScore >= 600 and $dangerLevelScore < 700>> <!-- Helpful Advice -->
        <p>While navigating the maze-like structure of the lower decks, you encounter a local security officer. With a knowing glance, they pull you aside and offer sage advice on avoiding the more perilous areas. "Keep clear of the eastern corridors during the late cycles," they whisper, before blending back into the shadows. The unexpected guidance leaves you with a sense of reassurance, a rare commodity in these parts.</p>
        <<set $player.mood += Math.round($player.mood * 0.01 + 5)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>
        <!-- I will continue until all events are done, no placeholders -->

    <<case $dangerLevelScore >= 700 and $dangerLevelScore < 800>> <!-- Quiet Corridors -->
        <p>Today, the corridors are unusually tranquil. The omnipresent hum of the station's machinery fills the void where you would expect the clamor of the crowd. It's a welcome reprieve from the constant vigilance required to survive here. You take a moment to enjoy the silence, letting the calm wash over you like a soothing balm.</p>
        <!-- Neutral outcome: no stat changes, but a moment of peace -->
        <!-- I will continue until all events are done, no placeholders -->

    <<case $dangerLevelScore >= 800 and $dangerLevelScore < 900>> <!-- Increased Security -->
        <p>Today's patrol through the decks reveals a surprising sight: an increased presence of security drones, their sensors sweeping methodically through the area. Their silent vigil seems to have a calming effect on the residents, and you can't help but feel a bit safer under their watchful gaze. It's a subtle reminder that, despite its flaws, there are forces at work striving to maintain order on the station.</p>
        <!-- Positive outcome: implied increase in safety -->
        <!-- I will continue until all events are done, no placeholders -->

    <<case $dangerLevelScore >= 900>> <!-- Idyllic Decks -->
        <p>As you step onto the decks, you're greeted by an unusual sight—smiling faces and laughter. Children play in the corridors, darting between the legs of amiable passersby, while vendors hawk their wares with a jovial banter absent of the usual desperation. It's as if a wave of contentment has washed over the station, leaving in its wake an almost idyllic atmosphere. For a fleeting moment, the station feels less like a fortified bastion in the void of space and more like a community, a home. The lightness of the day lifts your spirits, offering a respite from the usual grind.</p>
        <<set $player.mood += Math.round($player.mood * 0.05 + 10)>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">><br>
        <!-- I will continue until all events are done, no placeholders -->
<</switch>>
<br>

<!-- Continue Link -->
<<link "Continue" $continue>><</link>>

<</nobr>>



:: LowerEvent7 [event] {"position":"1000,1100","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/event.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Lower Decks",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="eventTitleHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="color: gold; font-weight: bold; font-size: 24px;">Lower Decks - Economic Sector</span>
</h2>
<hr id="eventTitleHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Location Description -->
<h2 id="eventLocationHeading" style="margin-top: 10px; margin-bottom: 10px;">
    <span style="font-size: 14px;"><<= $location.name >></span>
</h2>
<hr id="eventLocationHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Random Event based on World Economy Score -->
<<if $worldEconomyScore < 100>>
    <p>The market is in <span style="color: red;">freefall</span>. Desperate traders offer goods at rock-bottom prices, trying to liquidate assets before they lose everything.</p>
    <<set $player.stress -= Math.round($player.stress * 0.05 + 10)>>
    <<changemoods "stress" "major" "PosEffectOnPlayer">><br>

<<elseif $worldEconomyScore >= 100 and $worldEconomyScore < 200>>
    <p>Investment scams are rampant. You nearly fall for a <span style="color: orange;">too-good-to-be-true</span> scheme before spotting the telltale signs of fraud.</p>
    <<set $player.stress -= Math.round($player.stress * 0.05 + 10)>>
    <<changemoods "stress" "major" "PosEffectOnPlayer">><br>

<<elseif $worldEconomyScore >= 200 and $worldEconomyScore < 300>>
    <p>A <span style="color: yellow;">modest upturn</span> in the economy brings cautious optimism. Small businesses offer discounts to attract more customers, hoping for a recovery.</p>
    <<set $player.credits += 10>>
    <<creditchange 10 "positive">><br>

<<elseif $worldEconomyScore >= 300 and $worldEconomyScore < 400>>
    <p>Local markets are stable, but rumors of impending economic policies keep everyone <span style="color: yellow;">on their toes</span>.</p>
    <!-- No change in player stats -->

<<elseif $worldEconomyScore >= 400 and $worldEconomyScore < 500>>
    <p>The economy shows signs of <span style="color: green;">growth</span>. You manage to sell a trinket for a decent price.</p>
    <<set $player.credits += 20>>
    <<creditchange 20 "positive">><br>

<<elseif $worldEconomyScore >= 500 and $worldEconomyScore < 600>>
    <p>Consumer confidence is on the rise. You find a good deal on some much-needed supplies, and it doesn't put a <span style="color: green;">dent in your wallet</span>.</p>
    <<set $player.credits += 30>>
    <<creditchange 30 "positive">><br>

<<elseif $worldEconomyScore >= 600 and $worldEconomyScore < 700>>
    <p>Momentum in the markets means good business. Your investments yield a <span style="color: blue;">healthy return</span>.</p>
    <<set $player.credits += 40>>
    <<creditchange 40 "positive">><br>

<<elseif $worldEconomyScore >= 700 and $worldEconomyScore < 800>>
    <p>The bustling economy has led to a <span style="color: blue;">job boom</span>. You're offered a lucrative contract for a simple delivery job.</p>
    <<set $player.credits += 50>>
    <<creditchange 50 "positive">><br>

<<elseif $worldEconomyScore >= 800 and $worldEconomyScore < 900>>
    <p>With the economy thriving, you take a chance on a small investment which quickly <span style="color: blue;">doubles in value</span>.</p>
    <<set $player.credits += 60>>
    <<creditchange 60 "positive">><br>

<<else>>
    <p>The Lower Decks are alive with the sound of prosperity. A passing trader gifts you a valuable item as a sign of <span style="color: green;">good fortune</span>.</p>
    <<set $player.credits += 70>>
    <<creditchange 70 "positive">><br>
<</if>>

<br>
<!-- Continue Link -->
<<link "Continue" $continue>><</link>>

<</nobr>>



:: LowerObservationATM [lowerdeckact] {"position":"300,1775","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerobservation.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "ATM Machine - Lower Observation Deck",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<p>You approach the ATM machine, its screen flickering to life as you draw near. It offers you the option to transfer your hard-earned credits into debt repayment.</p>

<<if $player.credits < 1000>>
    <span style="color: red">You do not have enough credits to think about paying your debt back.</span>
<</if>>
<<if $player.credits >= 1000>>
    <<link "Pay debt off (1000Cr.)">>
        <<set $player.credits -= 1000>>
        <<set $player.debt -= 1000>>
        <<creditchange -1000 "negative">>
        <<debtchange -1000 "positive">>
        <<addmins $timeadd>>
        <<updatebar>>
        <</link>><br>
<</if>>
<<if $player.credits >= 10000>>
    <<link "Pay debt off (10000Cr.)">>
        <<set $player.credits -= 10000>>
        <<set $player.debt -= 10000>>
        <<creditchange -10000 "negative">>
        <<debtchange -10000 "positive">>
        <<addmins $timeadd>>
        <<updatebar>>
        <</link>><br>
<</if>>
<<if $player.credits >= 100000>>
    <<link "Pay debt off (100000Cr.)">>
        <<set $player.credits -= 100000>>
        <<set $player.debt -= 100000>>
        <<creditchange -100000 "negative">>
        <<debtchange -100000 "positive">>
        <<addmins $timeadd>>
        <<updatebar>>
        <</link>><br>
<</if>>
<<if $player.credits >= 1000000>>
    <<link "Pay debt off (1000000Cr.)">>
        <<set $player.credits -= 1000000>>
        <<set $player.debt -= 1000000>>
        <<creditchange -1000000 "negative">>
        <<debtchange -1000000 "positive">>
        <<addmins $timeadd>>
        <<updatebar>>
        <</link>><br>
<</if>>

<p>After completing your transactions, you step away from the ATM, feeling the weight of your debt slightly lifted.</p>

<<link "Back to the Lower Observation Deck.">>
    <<set $timeadd to 5>>
    <<addmins $timeadd>>
    <<goto "Lower Observation Deck">>
<</link>>
<</nobr>>


:: MarinersRest [poi] {"position":"1200,625","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/marinersrest.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Mariner's Rest",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Mariner's Rest</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>

<!-- Things to do at Mariner's Rest -->
<<nobr>>Things to do:<br>
<!-- Check and provide an option to work the bar -->
[[Work the bar. (01:00)|MarinersRestWorkBar][$player.credits += 10; $player.fatigue -= 15; $timeadd = 60]]<br>
<!-- Check if player has enough credits to grab a drink -->
<<if $player.credits >= 5>>
    [[Grab a drink and unwind to the ambient sounds of the port. (00:15 Cr. 5)|MarinersRestDrink][$player.credits -= 5; $timeadd = 15]]<br>
<<else>>
    <span class="disabledLink">Grab a drink and unwind to the ambient sounds of the port. (00:15 Cr. 5)</span><br>
<</if>>
<!-- Check if player has enough credits to order a hearty meal -->
<<if $player.credits >= 10>>
    [[Order a hearty meal and boost your spirits. (01:00 Cr. 10)|MarinersRestMeal][$player.health += 20; $player.mood += 10; $player.credits -= 10; $timeadd = 60]]<br>
<<else>>
    <span class="disabledLink">Order a hearty meal and boost your spirits. (01:00 Cr. 10)</span><br>
<</if>>
<</nobr>>

<!-- Travel options from Mariner's Rest -->
Travel:
[[Return to the bustling hub of the Lower Wharf.|Lower Wharf][$timeadd = 5]]

<!-- Description of Mariner's Rest atmosphere -->
Mariner's Rest is a haven amidst the hustle of the Lower Wharf, a place where weary travelers and station residents alike can find some semblance of peace. The wooden walls are adorned with relics of old ships, and the air carries the aroma of hearty meals being prepared. Laughter and the clinking of glasses fill the space, as stories are exchanged over meals and drinks. It's a small piece of respite where one can briefly escape the rigors of station life.



:: MarinersRestDrink [lowerdeckact] {"position":"1200,500","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/marinersrest.jpg'>>
<<addmins $timeadd>>
<<set $player.credits -= 5>>
<<set $location to {
    name: "Meltisar System, MOR-1, Mariner's Rest - Grabbing a Drink",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $marinersRestDrinkEventsRecord>> <<set $marinersRestDrinkEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $marinersRestDrinkEventsRecord.today != _today>>
    <<set $marinersRestDrinkEventsRecord.today to _today>>
    <<set $marinersRestDrinkEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<!-- Create a list of available events that have not occurred today -->
<<set _availableEvents to []>>
<<for _i to 1; _i <= 10; _i++>>
    <<if not $marinersRestDrinkEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<!-- Select a random event from the available ones or default if none are available -->
<<if _availableEvents.length>> <!-- If there are still available events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $marinersRestDrinkEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available events -->
    <<set _randomEvent to 0>> <!-- Default to the default event -->
<</if>>

<!-- Standard Heading Template -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Mariner's Rest</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The dim lighting and quiet hum of conversation in Mariner's Rest offer a welcome reprieve from the station's cacophony. You order your favorite drink and find a spot where you can unwind, the gentle melody of a distant harmonica blending with the sound of clinking glasses.</p>

<!-- Random Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Spacer's Salute -->
        <<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <p>A group of spacers celebrating a successful salvage operation welcome you to their table. The shared stories and laughter are a welcome distraction from the tough life at the port.</p>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 2>> <!-- Bitter Brew -->
        <<set $player.mood -= Math.round($player.mood * 0.02)>>
        <p>Your drink is more bitter than expected. It's not terrible, but it's not the relaxing experience you were hoping for.</p>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">><br>

    <<case 3>> <!-- Old Spacer's Yarn -->
        <<set $player.stress += Math.round($player.stress * 0.02 + 5)>>
        <p>An aged spacer regales you with stories of distant stars and close calls. Their wisdom could come in handy on your travels.</p>
        <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>

    <<case 4>> <!-- Lucrative Tip -->
        <<set $player.powerReserves += Math.round($player.powerReserves * 0.02 + 5)>>
        <p>You overhear a tip about a lucrative trade route from a loose-lipped freighter captain. This information could be worth something.</p>
        <<changemoods "powerReserves" "minor" "PosEffectOnPlayer">><br>

    <<case 5>> <!-- Serendipitous Silence -->
        <<set $player.stress -= Math.round($player.stress * 0.02)>>
        <p>A sudden lull in the bar's noise grants you a moment of serenity, soothing your weary mind.</p>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 6>> <!-- Somber Remembrance -->
        <<set $player.mood -= Math.round($player.mood * 0.02)>>
        <<set $player.stress -= Math.round($player.stress * 0.02)>>
        <p>The bar observes a moment of silence for a vessel lost to the void. It's a poignant reminder of the risks all spacers share.</p>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 7>> <!-- Lucky Hand -->
        <<set $player.credits += 15>>
        <p>An impromptu game of cards goes your way, and you walk away with a small windfall. The extra credits lift your spirits.</p>
        <<creditchange 15 "positive">><br>

    <<case 8>> <!-- Eavesdropped Opportunity -->
        <<set $player.powerReserves += Math.round($player.powerReserves * 0.02 + 5)>>
        <p>Listening in on a hushed conversation, you learn about a potential job opportunity. It pays to keep your ears open.</p>
        <<changemoods "powerReserves" "minor" "PosEffectOnPlayer">><br>

    <<case 9>> <!-- Arm-Wrestling Bout -->
        <<set $player.health += Math.round($player.health * 0.02 + 5)>>
        <p>A challenge from a burly dockworker leads to a friendly arm-wrestling match. You don't win, but the physical exertion feels good.</p>
        <<changemoods "health" "minor" "PosEffectOnPlayer">><br>

    <<case 10>> <!-- Generous Patron -->
        <<set $player.mood += Math.round($player.mood * 0.05 + 10)>>
        <p>A patron leaves a hefty tip at the bar and insists on buying a round for everyone. You can't help but feel a bit more cheerful.</p>
        <<changemoods "mood" "major" "PosEffectOnPlayer">><br>

    <<default>> <!-- Default Event -->
        <<set $player.credits -= 5>>
        <p>The evening winds down, and you find yourself a few credits lighter after sharing stories and drinks with newfound friends. It's a small price for the memories and warmth shared in this corner of the stars.</p>
        <<creditchange 5 "negative">><br>
<</switch>>


<!-- Continue Link -->
[[Return to the comforting embrace of Mariner's Rest.|MarinersRest]]
<</nobr>>



:: MarinersRestMeal [lowerdeckact] {"position":"1100,500","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/marinersrest.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Mariner's Rest",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $marinersRestMealEventsRecord>> <<set $marinersRestMealEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $marinersRestMealEventsRecord.today != _today>>
    <<set $marinersRestMealEventsRecord.today to _today>>
    <<set $marinersRestMealEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to no event -->

<<set _availableEvents to []>> <!-- List of available meal events -->
<<for _i to 1; _i <= 10; _i++>>
    <<if not $marinersRestMealEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available meal events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $marinersRestMealEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available meal events -->
    <<set _randomEvent to 0>> <!-- Reset events for the next day -->
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Mariner's Rest</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>You find a cozy corner in the bustling tavern and settle down with a menu. The aromas of spiced meats and fresh bread fill the air, promising a satisfying meal. As you place your order, the sounds of the port fade into the background, replaced by the anticipation of a comforting, hearty meal.</p>

<!-- Random Meal Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Hearty Stew -->
        <<set $player.health += Math.round($player.health * 0.05 + 20)>>
        <<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <p>The stew is rich and flavorful, filled with tender chunks of meat and vegetables. It warms you to the core and lifts your spirits.</p>
        <<changemoods "health" "major" "PosEffectOnPlayer">>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 2>> <!-- Galactic Gourmet -->
        <<set $player.mood += Math.round($player.mood * 0.05 + 10)>>
        <p>The chef's special does not disappoint. Every bite is a culinary adventure, a blend of spices and flavors from across the galaxy that leaves you delighted.</p>
        <<changemoods "mood" "major" "PosEffectOnPlayer">><br>

    <<case 3>> <!-- Comfort Food -->
        <<set $player.health += Math.round($player.health * 0.02 + 5)>>
        <<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <p>It's nothing fancy, but the simple, home-cooked meal in front of you is exactly what you needed. It's a reminder of home in the vastness of space.</p>
        <<changemoods "health" "minor" "PosEffectOnPlayer">>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 4>> <!-- Spice Surprise -->
        <<set $player.health += Math.round($player.health * 0.02 + 5)>>
        <<set $player.mood -= Math.round($player.mood * 0.02 + 5)>>
        <p>The meal is unexpectedly spicy. It's delicious, but the heat is intense and lingers long after you've finished eating.</p>
        <<changemoods "health" "minor" "PosEffectOnPlayer">>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">><br>

    <<case 5>> <!-- Exotic Flavors -->
        <<set $player.health += Math.round($player.health * 0.03 + 5)>>
        <<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <p>Today's menu features an exotic dish that challenges your palate. The unusual combination of flavors is intriguing and leaves you feeling adventurous.</p>
        <<changemoods "health" "minor" "PosEffectOnPlayer">>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 6>> <!-- Local Delicacy -->
        <<set $player.health += Math.round($player.health * 0.05 + 15)>>
        <p>You indulge in a local delicacy known for its restorative properties. The hearty fare is not only delicious but also invigorating.</p>
        <<changemoods "health" "major" "PosEffectOnPlayer">><br>

    <<case 7>> <!-- A Moment of Peace -->
        <<set $player.health += Math.round($player.health * 0.02 + 5)>>
        <<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <p>As you enjoy a quiet meal, you find a moment of peace in your hectic life. The food is good, and for a short while, your worries seem far away.</p>
        <<changemoods "health" "minor" "PosEffectOnPlayer">>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 8>> <!-- Unexpected Company -->
        <<set $player.health += Math.round($player.health * 0.02 + 5)>>
        <<set $player.mood += Math.round($player.mood * 0.05 + 15)>>
        <p>A fellow patron strikes up a conversation with you. The meal is enjoyable, and the company is pleasant, brightening your day.</p>
        <<changemoods "health" "minor" "PosEffectOnPlayer">>
        <<changemoods "mood" "major" "PosEffectOnPlayer">><br>

    <<case 9>> <!-- Overcooked Disappointment -->
        <<set $player.health -= Math.round($player.health * 0.01 + 2)>>
        <<set $player.mood -= Math.round($player.mood * 0.02 + 5)>>
        <p>Unfortunately, today's meal is overcooked and dry. It's a disappointing dining experience that leaves you slightly less cheerful than before.</p>
        <<changemoods "health" "minor" "NegEffectOnPlayer">>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">><br>

    <<case 10>> <!-- A Burst of Energy -->
        <<set $player.health += Math.round($player.health * 0.02 + 5)>>
        <<set $player.powerReserves += Math.round($player.powerReserves * 0.02 + 5)>>
        <p>The dish you selected is surprisingly energizing. You finish your meal feeling rejuvenated and ready to tackle any challenge.</p>
        <<changemoods "health" "minor" "PosEffectOnPlayer">>
        <<changemoods "powerReserves" "minor" "PosEffectOnPlayer">><br>

    <<default>> <!-- Default Meal Event -->
        <<set $player.health += Math.round($player.health * 0.02 + 5)>>
        <p>The meal is satisfying and filling, a solid square meal that helps you recharge after a long day. You feel ready to face whatever challenges come next.</p>
        <<changemoods "health" "minor" "PosEffectOnPlayer">><br>
<</switch>>



<!-- Continue Link -->
[[Back to Mariner's Rest.|MarinersRest]]
<</nobr>>



:: MarinersRestWorkBar [lowerdeckact] {"position":"1075,625","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/marinersrestwork.jpg'>>
<<addmins $timeadd>> <!-- Working a shift takes time. -->
<<set $location to {
    name: "Meltisar System, MOR-1, Mariner's Rest - Working Shift",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Mariner's Rest</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Flavor text about offering to help at the bar -->
<p>Mariner's Rest is teeming with patrons from all walks of life, each with their own tale of spacefaring adventures.</p>

<p>You roll up your sleeves and step behind the bar, ready to lend a hand. The regular bartender, with a grateful nod, directs you to a group of patrons waiting for their orders.</p>

<!-- Randomized customer array -->
<<set _customerNames to [
    "Rugged Miner", "Ship Engineer", "Spacefarer", "Freelancer", "Merchant Trader", "Retired Pilot",
    "Starry-Eyed Tourist", "Veteran Spacer", "Grizzled Captain", "Deckhand", "Wandering Scholar", "Galactic Drifter",
    "Dockworker", "Haggard Bounty Hunter", "Up-and-Coming Starlet", "Jaded Mercenary", "Fledgling Astronaut", "Intrepid Explorer",
    "Down-on-Luck Gambler", "Curious Researcher", "Ornery Mechanic", "Spacer on Leave", "Astrogator", "Off-Duty Security Officer",
    "Ship's Cook", "Holovid Enthusiast", "Comms Operator", "Astrophysicist", "Smuggler", "Lost Tourist"
]>>

<!-- Shuffle the customer names -->
<<set _customers to _customerNames.shuffle()>>

<!-- Customer serving section -->
<<set _group to _customers.splice(0, 5)>>
<div id="customerGroup">
    <ul>
    <<for _i = 0; _i < _group.length; _i++>>
        <<set _tip to random(1, 3)>>
        <<capture _i _tip _group[_i]>>
            <<link _group[_i]>>
                <<replace "#customerGroup">>
                    <p>You serve the <<=_group[_i]>> their favorite drink. They thank you with a smile and a tip of $<<=_tip>>.<span style="color: green;"> +$<<=_tip>> Credits</span></p>
                    <<set $player.credits += _tip>>
                    <<set $player.fatigue -= 5>> <!-- Reduce fatigue for each served customer -->
                    <<updatebar>>
                <</replace>>
            <</link>>
        <</capture>>
    <</for>>
    </ul>
</div>

<!-- Customer serving section -->
<<set _group to _customers.splice(0, 5)>>
<div id="customerGroup2">
    <ul>
    <<for _i = 0; _i < _group.length; _i++>>
        <<set _tip to random(1, 3)>>
        <<capture _i _tip _group[_i]>>
            <<link _group[_i]>>
                <<replace "#customerGroup2">>
                    <p>You serve the <<=_group[_i]>> their favorite drink. They thank you with a smile and a tip of $<<=_tip>>.<span style="color: green;"> +$<<=_tip>> Credits</span></p>
                    <<set $player.credits += _tip>>
                    <<set $player.fatigue -= 5>> <!-- Reduce fatigue for each served customer -->
                    <<updatebar>>
                <</replace>>
            <</link>>
        <</capture>>
    <</for>>
    </ul>
</div>

<!-- Customer serving section -->
<<set _group to _customers.splice(0, 5)>>
<div id="customerGroup3">
    <ul>
    <<for _i = 0; _i < _group.length; _i++>>
        <<set _tip to random(1, 3)>>
        <<capture _i _tip _group[_i]>>
            <<link _group[_i]>>
                <<replace "#customerGroup3">>
                    <p>You serve the <<=_group[_i]>> their favorite drink. They thank you with a smile and a tip of $<<=_tip>>.<span style="color: green;"> +$<<=_tip>> Credits</span></p>
                    <<set $player.credits += _tip>>
                    <<set $player.fatigue -= 5>> <!-- Reduce fatigue for each served customer -->
                    <<updatebar>>
                <</replace>>
            <</link>>
        <</capture>>
    <</for>>
    </ul>
</div>

<!-- Customer serving section -->
<<set _group to _customers.splice(0, 5)>>
<div id="customerGroup4">
    <ul>
    <<for _i = 0; _i < _group.length; _i++>>
        <<set _tip to random(1, 3)>>
        <<capture _i _tip _group[_i]>>
            <<link _group[_i]>>
                <<replace "#customerGroup4">>
                    <p>You serve the <<=_group[_i]>> their favorite drink. They thank you with a smile and a tip of $<<=_tip>>.<span style="color: green;"> +$<<=_tip>> Credits</span></p>
                    <<set $player.credits += _tip>>
                    <<set $player.fatigue -= 5>> <!-- Reduce fatigue for each served customer -->
                    <<updatebar>>
                <</replace>>
            <</link>>
        <</capture>>
    <</for>>
    </ul>
</div>

<!-- Link to finish the work shift -->
[[Finish your shift.|MarinersRest]] <!-- Link back to the main Mariner's Rest passage -->
<</nobr>>



:: Memories {"position":"500,300","size":"100,100"}
A new series of images flashes through your mind without warning. Men and women in powered combat armor, emblazoned with the logos of various interstellar corporations, yelling and fighting and dying in the void of space... the universe can be a dangerous place. 

Starships clash in orbit around contested planets, their hulls scarred by laser fire and missile strikes. On the ground, soldiers in exoskeletons move through the ruins of once-great cities, their steps echoing in the silence of a world left desolate by war.

Although wars come and go, competition for limited resources will always haunt humanity. Right now, you feel that the danger level around you is \
<<link "Low">><<set $dangerLevel to "Low">><<set $dangerLevelScore to 900>><<updatebar>><<replace "#dangerState">><span style="color: blue;">Low</span><</replace>>\
<<replace "#doorDescription2">><span style="color: blue;">It looks like an average autodoor.</span><</replace>><</link>>, \
<<link "Moderate">><<set $dangerLevel to "Moderate">><<set $dangerLevelScore to 700>><<updatebar>><<replace "#dangerState">><span style="color: lightgreen;">Moderate</span><</replace>>\
<<replace "#doorDescription2">><span style="color: lightgreen;">It looks secure.</span><</replace>><</link>>, \
<<link "High">><<set $dangerLevel to "High">><<set $dangerLevelScore to 500>><<updatebar>><<replace "#dangerState">><span style="color: orange;">High</span><</replace>>\
<<replace "#doorDescription2">><span style="color: orange;">It looks fortified and secure.</span><</replace>><</link>>, or \
<<link "Extreme">><<set $dangerLevel to "Extreme">><<set $dangerLevelScore to 300>><<updatebar>><<replace "#dangerState">><span style="color: red;">Extreme</span><</replace>>\
<<replace "#doorDescription2">><span style="color: red;">It looks heavily fortified and secure.</span><</replace>><</link>>?

You perceive that you will face a level of <span id="dangerState" style="color: lightgreen;">Moderate</span> danger outside.

<<nobr>>The room's only exit, a heavy sliding door,
<<if $worldEconomyScore >= 800>>
    <span style="color: green;">looks pristine and high-tech, almost blending seamlessly into the well-maintained wall.</span>
<<elseif $worldEconomyScore >= 600>>
    <span style="color: lightgreen;">has a sleek design, showing minimal signs of wear, indicative of regular maintenance.</span>
<<elseif $worldEconomyScore >= 400>>
    <span style="color: orange;">appears functional but with visible signs of age and infrequent repairs.</span>
<<elseif $worldEconomyScore >= 200>>
    <span style="color: red;">bears marks of neglect, with peeling paint and a faint creaking noise as it moves.</span>
<<else>>  <!-- For scores less than 200 -->
    <span style="color: darkred;">stands deteriorated and barely operational, reflecting the harsh economic times.</span>
<</if>> <span id="doorDescription2" style="color: lightgreen;">It looks secure.</span> It remains firmly shut, severing your connection to the world outside.<</nobr>>

[[Stand Up->Stand Up]]



:: Nebula Noodles [poi] {"position":"325,800","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/nebula.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Nebula Noodle Stand",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Nebula Noodle Stand</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<br>
Things to do:<br>
<<if $player.credits >= 10>> <!-- Check for sufficient credits to eat -->
    [[Enjoy a steaming bowl of noodles. (00:15) 10Cr.|NebulaEat][$player.credits -= 10; $timeadd = 15]]<br>
<<else>> <!-- Option to eat is grayed out if not enough credits -->
    <span class="disabledLink">Enjoy a steaming bowl of noodles. (00:15 - Requires 10 credits)</span><br>
<</if>>
<<if $player.credits >= 5>> <!-- Check for sufficient credits to listen to rumors -->
    [[Listen to the latest station rumors. (00:30) 5 Cr.|NebulaRumors][$player.credits -= 5; $timeadd = 30]]<br>
<<else>> <!-- Option to listen to rumors is grayed out if not enough credits -->
    <span class="disabledLink">Listen to the latest station rumors. (00:30 - Requires 5 credits)</span><br>
<</if>>
[[Work a shift as a noodle chef. (01:00)|NebulaCook][$timeadd = 60]]<br>
<</nobr>><br>
Travel:
[[Navigate back to the bustling aisles of the Promenade.|Lower Deck Promenade][$timeadd = 5]]

You approach the Nebula Noodle Stand, a fragrant oasis amid the steel corridors of the Lower Deck Promenade. A line of patrons forms at the counter, where an automated noodle chef whirs and steams, its arms crafting bowls of nourishing soup with a flourish.

The stand's vibrant signage flickers above, casting a warm glow on the faces of those enjoying their meals. Between bites, patrons share tales of their travels, their voices blending into the station's hum.



:: NebulaCook [lowerdeckact] {"position":"450,800","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/nebula.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Nebula Noodle Stand - Cooking Shift",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<set _randomEvent to random(1, 10)>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Nebula Noodle Stand</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The heat of the kitchen greets you as you tie on your apron and wash your hands, ready for the day's shift. The clatter of pots and pans is a constant backdrop as you and the other cooks busily prepare for the inevitable rush of hungry patrons. The smell of simmering broth and fresh ingredients promises a busy day at the Nebula Noodle Stand.</p>

<!-- Random Cook Events -->
<<switch _randomEvent>>
    <<case 1>>
        <p>Your broth is a hit! Customers rave about the depth of flavor. The tips are generous today.</p>
        <<set $player.credits += 50>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.02 + 5)>>
        <<creditchange 50 "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">><br>

    <<case 2>>
        <p>A surprise inspection puts everyone on edge, but your station is spotless. The manager rewards your diligence.</p>
        <<set $player.credits += 25>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.02 + 10)>>
        <<creditchange 25 "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">><br>

    <<case 3>>
        <p>You narrowly avoid a kitchen disaster, saving a batch of noodles from ruin. Your quick thinking doesn't go unnoticed.</p>
        <<set $player.credits += 20>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.02 + 10)>>
        <<creditchange 20 "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">><br>

    <<case 4>>
        <p>A new recipe you suggest becomes the special of the day and it's a bestseller. You've earned your keep and then some.</p>
        <<set $player.credits += 40>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.02 + 5)>>
        <<creditchange 40 "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">><br>

    <<case 5>>
        <p>It's a slow day and you spend most of your shift cleaning. It's not glamorous, but you get a modest pay for the day's work.</p>
        <<set $player.credits += 15>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.05 + 15)>>
        <<creditchange 15 "positive">>
        <<changemoods "fatigue" "major" "PosEffectOnPlayer">><br>

    <<case 6>>
        <p>The stand runs out of a key ingredient, and you have to improvise. The result is not perfect, but the effort is appreciated.</p>
        <<set $player.credits += 10>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.05 + 15)>>
        <<creditchange 10 "positive">>
        <<changemoods "fatigue" "major" "PosEffectOnPlayer">><br>

    <<case 7>>
        <p>You handle a lunch rush like a seasoned chef. Patrons leave satisfied, and the manager gives you a bonus.</p>
        <<set $player.credits += 35>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.02 + 10)>>
        <<creditchange 35 "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">><br>

    <<case 8>>
        <p>Your attention to detail pays off as you catch a mistake before it affects any orders. It's a good day's work.</p>
        <<set $player.credits += 20>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.02 + 10)>>
        <<creditchange 20 "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">><br>

    <<case 9>>
        <p>During cleanup, you slip and take a small tumble. No harm done, but it's a reminder to watch your step.</p>
        <<set $player.credits += 10>>
        <<set $player.fatigue += Math.round($player.fatigue * 0.05 + 20)>>
        <<creditchange 10 "positive">>
        <<changemoods "fatigue" "major" "NegEffectOnPlayer">><br>

    <<case 10>>
        <p>The automated cooking system malfunctions, and you step in to manually complete the orders. You're exhausted, but your efforts ensure the stand stays open.</p>
        <<set $player.credits += 30>>
        <<set $player.fatigue += Math.round($player.fatigue * 0.05 + 20)>>
        <<creditchange 30 "positive">>
        <<changemoods "fatigue" "major" "NegEffectOnPlayer">><br>

    <<default>> <!-- Default Cook Event -->
        <p>The stand isn't too busy, and you manage to get through your shift without any fuss. You earn a standard day's pay.</p>
        <<set $player.credits += 20>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.02 + 10)>>
        <<creditchange 20 "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">><br>
<</switch>>

<!-- Continue Link -->
[[Back to Nebula Noodles.|Nebula Noodles]]
<</nobr>>



:: NebulaEat [lowerdeckact] {"position":"325,675","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/nebula.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Nebula Noodle Stand",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $nebulaNoodleEventsRecord>> <<set $nebulaNoodleEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $nebulaNoodleEventsRecord.today != _today>>
    <<set $nebulaNoodleEventsRecord.today to _today>>
    <<set $nebulaNoodleEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to no event -->

<<set _availableEvents to []>> <!-- List of available noodle events -->
<<for _i to 1; _i <= 4; _i++>>
    <<if not $nebulaNoodleEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available noodle events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $nebulaNoodleEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available noodle events -->
    <<set _randomEvent to 0>> <!-- Reset events for the next day -->
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Nebula Noodle Stand</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>You take a seat at one of the available tables, the ambient noise of the promenade fading as you focus on the menu. Deciding on your dish, you place your order and watch the noodle stand's automated systems spring into action, crafting a bowl that's equal parts art and sustenance. The aroma of your upcoming meal wafts over, inviting you to lean back and relax as you wait.</p>

<!-- Random Noodle Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Culinary Delight -->
        <p>Your taste buds dance with delight as you savor a bowl of the chef's special noodles. The flavors are rich and the ingredients are clearly top-notch. You feel revitalized.</p>
        <<set $player.health += Math.round($player.health * 0.05 + 20)>>
        <<changemoods "health" "major" "PosEffectOnPlayer">><br>

    <<case 2>> <!-- Comfort in a Bowl -->
        <p>There's something comforting about the warmth of a well-prepared noodle bowl. It's not just food; it's a bowl of memories, a taste of home in the cold vastness of space.</p>
        <<set $player.health += Math.round($player.health * 0.02 + 5)>>
        <<set $player.mood += Math.round($player.mood * 0.02 + 1)>>
        <<changemoods "health" "minor" "PosEffectOnPlayer">>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 3>> <!-- A Recipe for Relaxation -->
        <p>As you take in the steam and the aroma of the spices, a sense of calm washes over you. The noodles not only nourish your body but also soothe your frayed nerves.</p>
        <<set $player.health += Math.round($player.health * 0.03 + 15)>>
        <<set $player.stress -= Math.round($player.stress * 0.02 + 2)>>
        <<changemoods "health" "minor" "PosEffectOnPlayer">>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 4>> <!-- Unexpected Ingredient -->
        <p>Midway through your meal, you bite into something unexpected. It's not unpleasant, but it's a jarring surprise that leaves you slightly off-kilter for the remainder of the meal.</p>
        <<set $player.health += Math.round($player.health * 0.02 + 5)>>
        <<set $player.mood -= Math.round($player.mood * 0.02 + 1)>>
        <<changemoods "health" "minor" "PosEffectOnPlayer">>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">><br>

    <<case 5>> <!-- Noodle Nirvana -->
        <p>The noodles are perfect, the broth is divine. You can't help but close your eyes and savor every slurp. It's a small moment of perfection in an otherwise chaotic universe.</p>
        <<set $player.health += Math.round($player.health * 0.05 + 20)>>
        <<changemoods "health" "major" "PosEffectOnPlayer">><br>

    <<case 6>> <!-- Too Hot to Handle -->
        <p>Eager to dig in, you don't notice the steam rising from the bowl. The first mouthful is scalding, and you spend the next few minutes recovering from the burn.</p>
        <<set $player.health -= Math.round($player.health * 0.02 + 5)>>
        <<changemoods "health" "minor" "NegEffectOnPlayer">><br>

    <<case 7>> <!-- A Dash of Comfort -->
        <p>The meal isn't particularly special, but it's hearty and fills you up. Sometimes, that's all you really need to keep going.</p>
        <<set $player.health += Math.round($player.health * 0.02 + 5)>>
        <<changemoods "health" "minor" "PosEffectOnPlayer">><br>

    <<case 8>> <!-- Slippery Surprise -->
        <p>A slippery noodle escapes your chopsticks and splashes back into the bowl, spraying broth across your clothing. It's a small mishap, but it dampens your spirits.</p>
        <<set $player.health += Math.round($player.health * 0.02 + 5)>>
        <<set $player.mood -= Math.round($player.mood * 0.02 + 1)>>
        <<set $player.filth += Math.round($player.filth * 0.02 + 1)>>
        <<changemoods "health" "minor" "PosEffectOnPlayer">>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">>
        <<changemoods "filth" "minor" "NegEffectOnPlayer">><br>

    <<case 9>> <!-- The Nourishing Bowl -->
        <p>Each spoonful seems to carry more than just sustenance; it's as if the soup is infused with a restorative energy. You leave feeling better than when you arrived.</p>
        <<set $player.health += Math.round($player.health * 0.03 + 15)>>
        <<changemoods "health" "minor" "PosEffectOnPlayer">><br>

    <<case 10>> <!-- Broth of Fatigue -->
        <p>The rich broth is incredibly satisfying, but it's also heavier than you expected. You finish the meal feeling a bit sluggish as you fight off an impending food coma.</p>
        <<set $player.health += Math.round($player.health * 0.02 + 5)>>
        <<set $player.fatigue += Math.round($player.fatigue * 0.02 + 1)>>
        <<changemoods "health" "minor" "PosEffectOnPlayer">>
        <<changemoods "fatigue" "minor" "NegEffectOnPlayer">><br>

    <<default>> <!-- Default Noodle Event -->
        <p>The noodles are decent; nothing extraordinary but they hit the spot. You take a moment to simply enjoy the meal and the break from your adventures.</p>
        <<set $player.health += Math.round($player.health * 0.02 + 5)>>
        <<changemoods "health" "minor" "PosEffectOnPlayer">><br>
<</switch>>
<br>


<!-- Continue Link -->
[[Back to Nebula Noodles.|Nebula Noodles]]
<</nobr>>



:: NebulaRumors [lowerdeckact] {"position":"425,700","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/nebula.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Nebula Noodle Stand - Rumors",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>
<<if not $nebulaRumorsEventsRecord>> 
    <<set $nebulaRumorsEventsRecord to {today: "", triggeredEvents: []}>>
<</if>>

<<if $nebulaRumorsEventsRecord.today != _today>> 
    <<set $nebulaRumorsEventsRecord.today to _today>>
    <<set $nebulaRumorsEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to random(1, 10)>>
<<if not $nebulaRumorsEventsRecord.triggeredEvents.includes(_randomEvent)>> 
    <<set $nebulaRumorsEventsRecord.triggeredEvents.push(_randomEvent)>>
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Nebula Noodle Stand</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>You find a spot at the bar, the hum of conversation around you blending with the scent of spices and steam. As you wait for your order, you tune in to the snippets of gossip and tales being exchanged by the stand's eclectic clientele. The Nebula Noodle Stand isn't just a place for a good meal; it's a nexus of news and rumors for those who know how to listen.</p>

<!-- Random Rumor Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- A Laugh Among Friends -->
        <p>A group of regulars shares a joke that has the whole stand laughing. The good cheer is infectious, and you find your spirits lifted.</p>
        <<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 2>> <!-- An Uplifting Tale -->
        <p>An old spacefarer recounts an uplifting tale of survival against the odds. Inspired, you feel a surge of resilience and resolve.</p>
        <<set $player.trauma -= Math.round($player.trauma * 0.05 + 20)>>
        <<changemoods "trauma" "major" "PosEffectOnPlayer">><br>

    <<case 3>> <!-- A Tense Exchange -->
        <p>You witness a tense exchange over a trade deal gone wrong. It's unnerving to watch, leaving you a bit on edge.</p>
        <<set $player.mood -= Math.round($player.mood * 0.02 + 10)>>
        <<set $player.stress += Math.round($player.stress * 0.02 + 10)>>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">>
        <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>

    <<case 4>> <!-- Encouragement -->
        <p>A nearby patron notices your attire and assumes you're new to the station. They offer words of encouragement and some friendly advice.</p>
        <<set $player.mood += Math.round($player.mood * 0.02 + 10)>>
        <<set $player.stress -= Math.round($player.stress * 0.02 + 10)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 5>> <!-- A Shared Secret -->
        <p>In a hushed tone, someone shares a rumor of a hidden stash of power cells. The possibility of replenishing your reserves is exciting.</p>
        <<set $player.powerReserves += Math.round($player.powerReserves * 0.05 + 20)>>
        <<changemoods "powerReserves" "major" "PosEffectOnPlayer">><br>

    <<case 6>> <!-- An Overheard Argument -->
        <p>An argument breaks out nearby over station politics. You try to ignore it, but it's distracting and you can't help feeling a bit rattled.</p>
        <<set $player.stress += Math.round($player.stress * 0.02 + 15)>>
        <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>

    <<case 7>> <!-- A Moment of Connection -->
        <p>You strike up a conversation with a stranger and find surprising common ground. It's a small world, even out here among the stars.</p>
        <<set $player.mood += Math.round($player.mood * 0.05 + 30)>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">><br>

    <<case 8>> <!-- A Grim Reminder -->
        <p>A weary miner shares a story of a recent cave-in. It's a grim reminder of the dangers that lurk on the fringes of space.</p>
        <<set $player.mood -= Math.round($player.mood * 0.02 + 20)>>
        <<set $player.trauma += Math.round($player.trauma * 0.02 + 10)>>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">>
        <<changemoods "trauma" "minor" "NegEffectOnPlayer">><br>

    <<case 9>> <!-- A Fortuitous Tip -->
        <p>A tip from a fellow patron about a stockpile of medical supplies seems worth investigating. It could be nothing, or it could be a boon.</p>
        <<set $player.health += Math.round($player.health * 0.05 + 25)>>
        <<changemoods "health" "major" "PosEffectOnPlayer">><br>

    <<case 10>> <!-- Lost in Thought -->
        <p>The noodles are good, but you find yourself lost in thought over the rumors swirling around you. It's hard to know what to make of it all.</p>
        <<set $player.mood += Math.round($player.mood * 0.02 + 15)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<default>> <!-- Default Rumor Event -->
        <p>You eavesdrop on several conversations, but nothing particularly noteworthy sticks out. As you finish your meal, you can't help but feel you might have missed out on something important.</p>
        <<if $player.credits >= 5>>
            <<set $player.stress -= Math.round($player.stress * 0.02 + 5)>>
            <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>
        <<else>>
            <p>You realize you don't have enough credits to pay attention to any valuable information. The missed opportunity adds to your stress.</p>
            <<set $player.stress += Math.round($player.stress * 0.02 + 10)>>
            <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>
        <</if>>
<</switch>>
<br>

<!-- Continue Link -->
[[Back to Nebula Noodles.|Nebula Noodles]]
<</nobr>>



:: OxygenGardenBreath [lowerdeckact] {"position":"675,2300","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/oxygengarden.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Oxygen Garden - Breathing Space",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $oxygenGardenBreathEventsRecord>> <<set $oxygenGardenBreathEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $oxygenGardenBreathEventsRecord.today != _today>>
    <<set $oxygenGardenBreathEventsRecord.today to _today>>
    <<set $oxygenGardenBreathEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available breathing space events -->
<<for _i to 1; _i <= 4; _i++>>
    <<if not $oxygenGardenBreathEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available breathing space events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $oxygenGardenBreathEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available breathing space events -->
    <<set _randomEvent to 0>> <!-- Default to the default event -->
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Oxygen Garden</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>Stepping into The Oxygen Garden, you're greeted by a lush tapestry of greenery that seems worlds away from the cold metal of the station. You find a quiet bench among the ferns and flowering plants, closing your eyes to focus on the simple joy of breathing. Each inhale brings the scent of damp soil and living plants, a natural remedy to the sterility of space living.</p>

<!-- Random Breathing Space Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Scent of Flowers -->
        <p>You find yourself surrounded by an aromatic cluster of Aloran blossoms. The scent is soothing and your breathing becomes deep and even. You feel the tension leaving your body.</p>
        <<set $player.stress -= Math.round($player.stress * 0.02)>>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 2>> <!-- Meditation Group -->
        <p>A small group practicing silent meditation invites you to join them. The shared focus on calm and steady breaths enhances the restorative effect of the garden.</p>
        <<set $player.stress -= Math.round($player.stress * 0.02)>>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">>
        <<set $player.mood += Math.round($player.mood * 0.02)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 3>> <!-- Birdsong Melody -->
        <p>A hidden speaker plays a recording of Earth bird songs. The trills and warbles transport you away from the station's hum, bringing peace to your heart.</p>
        <<set $player.mood += Math.round($player.mood * 0.02)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 4>> <!-- Allergenic Flora -->
        <p>A particular pollen-heavy plant starts to trigger your allergies. It's a minor discomfort, but it disrupts the otherwise serene atmosphere.</p>
        <<set $player.health -= Math.round($player.health * 0.02)>>
        <<changemoods "health" "minor" "NegEffectOnPlayer">><br>

    <<default>> <!-- Default Breathing Space Event -->
        <p>After a while, the tranquility of the garden has done its work. Though it may be a small respite, you leave feeling a bit more refreshed than when you arrived.</p>
        <<set $player.stress -= Math.round($player.stress * 0.02)>>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">>
        <<set $player.mood += Math.round($player.mood * 0.02)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>
<</switch>>

<!-- Continue Link -->
[[Refreshing!|The Oxygen Garden]]
<</nobr>>



:: OxygenGardenTales [lowerdeckact] {"position":"775,2300","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/oxygengarden.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Oxygen Garden - Sharing Tales",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $oxygenGardenTalesEventsRecord>> <<set $oxygenGardenTalesEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $oxygenGardenTalesEventsRecord.today != _today>>
    <<set $oxygenGardenTalesEventsRecord.today to _today>>
    <<set $oxygenGardenTalesEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available tale-sharing events -->
<<for _i to 1; _i <= 4; _i++>>
    <<if not $oxygenGardenTalesEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available tale-sharing events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $oxygenGardenTalesEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available tale-sharing events -->
    <<set _randomEvent to 0>> <!-- Default to the default event -->
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Oxygen Garden</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>Among the rows of carefully tended vegetation, the gardeners of MOR-1 share their knowledge with a pride born of nurturing life in a place where it's least expected. You join a group, your curiosity piqued by their green-thumbed expertise. As hands work the soil, stories of past harvests and botanic experiments weave through the air, as rich and vibrant as the garden itself.</p>

<!-- Random Tale-Sharing Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Gardener's Wisdom -->
        <p>An experienced gardener shares insights on the delicate balance of hydroponics. The knowledge could be useful for your own botanical endeavors.</p>
        <<set $player.powerReserves += Math.round($player.powerReserves * 0.02)>>
        <<changemoods "powerReserves" "minor" "PosEffectOnPlayer">><br>

    <<case 2>> <!-- Tales of the Green Thumb Thief -->
        <p>You're enthralled by the tale of the Green Thumb Thief, an individual who once stole rare seeds from stations across the sector. It's a story of intrigue and mystery.</p>
        <<set $player.mood += Math.round($player.mood * 0.02)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 3>> <!-- The Oxygen Garden Ghost -->
        <p>A gardener whispers about a supposed ghost haunting the garden at night. Whether true or not, the story sends a shiver down your spine.</p>
        <<set $player.mood -= Math.round($player.mood * 0.02)>>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">><br>

    <<case 4>> <!-- Clandestine Deal Overheard -->
        <p>While pretending to tend to the plants, you overhear a suspicious deal between two gardeners. The information could be valuable... or dangerous.</p>
        <<set $player.powerReserves += Math.round($player.powerReserves * 0.05)>>
        <<changemoods "powerReserves" "major" "PosEffectOnPlayer">><br>

    <<default>> <!-- Default Tale-Sharing Event -->
        <p>As tales are swapped and laughter echoes through the foliage, you find yourself uplifted by the camaraderie of the gardeners. You leave with a few interesting stories and a lighter step.</p>
        <<set $player.mood += Math.round($player.mood * 0.02)>><br>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<set $player.stress -= Math.round($player.stress * 0.02)>><br>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">>
<</switch>>


<br>
<!-- Continue Link -->
[[Back to the Garden.|The Oxygen Garden]]
<</nobr>>



:: Patch-It Pod [poi] {"position":"1000,2200","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/patchitpod.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Patch-It Pod",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Patch-It Pod</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
<p>You have <<=$lowerdecksScrap>> <span style="color:orange;">scrap</span> in the lockers. There's free delivery drone service to The Electric Emporium in the Lower Deck Promenade if you want to sell or trade it.</p>

Things to do:
[[Work as a repairman and fix various items for the inhabitants. (01:00)|PatchItPodWorkAsRepairman][$timeadd = 60]]
[[Scavenge through the junk recyclers for useful parts and materials. (00:45)|PatchItPodScavenge][$timeadd = 45]]
[[Break into expired storage locker contents (legally) to claim abandoned treasures. (00:30)|PatchItPodStorageLockerContents][$timeadd = 30]]

<!-- PuriDerm Spray -->
<<if $player.credits >= 1000>>
    [[Purchase PuriDerm Spray (00:15) 1000 Cr.|Patch-It Pod][$player.credits -= 1000; $playerConsumables.puriDermSpray += 1; $timeadd += 15]]<br>
    "Cleanse yourself from the filth of the streets."<br>
<<else>>
    <span class="disabledLink">Not enough credits for PuriDerm Spray</span><br>
<</if>>

Travel:
[[Step back out into the crowded corridors of the Habitation Cells.|Habitation Cells][$timeadd = 5]]

The Patch-It Pod, a compact workshop saturated with the smell of grease and burnt ozone, is a haven for those looking to mend the worn and broken. Soldering irons hiss and sewing machines buzz harmoniously as the shop's owner, a jack-of-all-trades with nimble fingers and an assortment of tools, works their magic on a variety of items.

Residents of MOR-1 frequent this local staple, knowing there's hardly a tear too large or a circuit too fried for the Patch-It Pod's remedial touch.


:: PatchItPodScavenge [lowerdeckact] {"position":"1000,2325","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/patchitpod.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Patch-It Pod - Scavenging",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $patchItPodScavengeEventsRecord>> <<set $patchItPodScavengeEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $patchItPodScavengeEventsRecord.today != _today>>
    <<set $patchItPodScavengeEventsRecord.today to _today>>
    <<set $patchItPodScavengeEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available scavenging events -->
<<for _i to 1; _i <= 5; _i++>>
    <<if not $patchItPodScavengeEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available scavenging events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $patchItPodScavengeEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available scavenging events -->
    <<set _randomEvent to 0>> <!-- Default to the default event -->
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Patch-It Pod - Scavenging</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Random Scavenging Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Hidden Gem Among the Scrap -->
        <p>Deep within a pile of scrap, your hand grazes something solid and unexpectedly pristine. It's a functioning data pad, perhaps discarded in haste or error. It could fetch a good price.<span class="i-gain"> +1 Scrap</span></p><br>
        <<set $player.credits += 30>>
        <<creditchange 30 "positive">><br>
        <<set $lowerdecksScrap += 1>>

    <<case 2>> <!-- Old Relic with a Story -->
        <p>You find an old relic, a trinket with intricate engravings. To your surprise, an antique dealer in the pod recognizes its origin and offers to buy it on the spot.<span class="i-gain"> +1 Scrap</span></p><br>
        <<set $player.credits += 20>>
        <<creditchange 20 "positive">><br>
        <<set $lowerdecksScrap += 1>>

    <<case 3>> <!-- Junkyard Hazard -->
        <p>What looks like a harmless pile of junk turns out to be a precarious stack. A wrong move sends metals clattering, and you barely dodge a sharp edge. It's a close call, and you're shaken but safe.</p><br>
        <<set $player.stress -= Math.round($player.stress * 0.02)>>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 4>> <!-- The Engineer's Cache -->
        <p>Beneath a façade of broken appliances, you uncover a cache of valuable engineering components. These could be useful for your own repairs, or sold to those in need.<span class="i-gain"> +1 Scrap</span></p><br>
        <<set $player.credits += 25>>
        <<creditchange 25 "positive">><br>
        <<set $lowerdecksScrap += 1>>

    <<case 5>> <!-- Eclectic Collector's Request -->
        <p>An eccentric collector at the pod admires your knack for finding the unusual. A quick deal is struck and you part with some oddities in exchange for credits.<span class="i-gain"> +1 Scrap</span></p><br>
        <<set $player.credits += 15>>
        <<creditchange 15 "positive">><br>
        <<set $lowerdecksScrap += 1>>

    <<default>> <!-- Default Scavenging Event -->
        <p>Your search through the recyclers doesn't unearth anything of big value today, but the smaller components you find could prove useful later. It's not a wasted effort.<span class="i-gain"> +1 Scrap</span></p><br>
        <<set $player.powerReserves += Math.round($player.powerReserves * 0.02)>>
        <<changemoods "powerReserves" "minor" "PosEffectOnPlayer">><br>
        <<set $lowerdecksScrap += 1>>
<</switch>>

<br><br>
<!-- Continue Link -->
[[Return to the Patch-It Pod.|Patch-It Pod]]
<</nobr>>



:: PatchItPodStorageLockerContents [lowerdeckact] {"position":"1100,2325","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/patchitpod.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Patch-It Pod - Locker Salvaging",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $patchItPodLockerEventsRecord>> <<set $patchItPodLockerEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $patchItPodLockerEventsRecord.today != _today>>
    <<set $patchItPodLockerEventsRecord.today to _today>>
    <<set $patchItPodLockerEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available locker salvaging events -->
<<for _i to 1; _i <= 5; _i++>>
    <<if not $patchItPodLockerEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available locker salvaging events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $patchItPodLockerEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available locker salvaging events -->
    <<set _randomEvent to 0>> <!-- Default to the default event -->
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Patch-It Pod - Locker Salvaging</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Random Locker Salvaging Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Mysterious Artifact -->
        <p>Amongst forgotten debris, a mysterious artifact captures your attention. Its origins and function unclear, but undoubtedly valuable to the right buyer.</p>
        <<set $player.credits += 40>>
        <<creditchange 40 "positive">>

    <<case 2>> <!-- Personal Effects with a Story -->
        <p>You come across personal effects—a photo here, a trinket there—each with a story you'll never know. It's a somber reminder of transient lives aboard the station.</p>
        <<set $player.mood -= Math.round($player.mood * 0.02)>>
        <<changemoods "mood" "minor" "NegEffectOnPlayer">>

    <<case 3>> <!-- Stashed Credits Cache -->
        <p>A small stack of credits is tucked away in a corner of a locker. Either forgotten or left in a rush, the find is a simple but welcomed windfall.</p>
        <<set $player.credits += 35>>
        <<creditchange 35 "positive">>

    <<case 4>> <!-- Unexpected Occupant -->
        <p>Opening a locker releases a cloud of bio-luminescent spores. The harmless but surprising occupants were part of a failed bioluminescence experiment.</p>
        <<set $player.mood += Math.round($player.mood * 0.02)>>
        <<set $player.health += Math.round($player.health * 0.02)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<changemoods "health" "minor" "PosEffectOnPlayer">>

    <<case 5>> <!-- Hazardous Material Leak -->
        <p>Your salvage is cut short by the discovery of a hazardous material leak. Evacuating the area, you alert the station's maintenance crew, preventing a potential disaster.</p>
        <<set $player.powerReserves += Math.round($player.powerReserves * 0.02)>>
        <<changemoods "powerReserves" "minor" "PosEffectOnPlayer">>

    <<default>> <!-- Default Locker Salvaging Event -->
        <p>The contents of the lockers are mundane, but amongst the assorted bric-a-brac, you find useful knick-knacks and oddments. Nothing of great value, but enough to cover a meal.</p>
        <<set $player.credits += 10>>
        <<creditchange 10 "positive">>
<</switch>>


<br><br>
<!-- Continue Link -->
[[Return to the Patch-It Pod.|Patch-It Pod]]
<</nobr>>



:: PatchItPodWorkAsRepairman [lowerdeckact] {"position":"900,2325","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/patchitpod.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Patch-It Pod - Repair Work",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $patchItPodWorkRecord>> <<set $patchItPodWorkRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $patchItPodWorkRecord.today != _today>>
    <<set $patchItPodWorkRecord.today to _today>>
    <<set $patchItPodWorkRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available repair work events -->
<<for _i to 1; _i <= 3; _i++>>
    <<if not $patchItPodWorkRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available repair work events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $patchItPodWorkRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available repair work events -->
    <<set _randomEvent to 0>> <!-- Default to the default event -->
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Patch-It Pod - Repair Work</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">

<!-- Random Repair Work Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Complex Circuitry Challenge -->
        <p>You are handed a tangled mess of wires and circuit boards. It's a challenge, but with focus and a steady hand, you manage to repair the device. The owner is grateful, and your work does not go unrewarded.</p><br>
        <<set $player.credits += 25>>
        <<creditchange 25 "positive">><br>

    <<case 2>> <!-- Stitch in Time Saves Nine -->
        <p>Today's task is a mountain of torn uniforms and fabric. It's monotonous work, but as the pile dwindles, you find a rhythm. A job well done earns you a pat on the back and a token payment.</p><br>
        <<set $player.credits += 10>>
        <<creditchange 10 "positive">><br>

    <<case 3>> <!-- The Ever-Whirring Gadget -->
        <p>An intricate gadget from a bygone era requires your attention. It's a tricky fix, and while the work takes longer than expected, the satisfaction of seeing it whir to life again is worth it.</p><br>
        <<set $player.mood += Math.round($player.mood * 0.02)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<default>> <!-- Default Repair Work Event -->
        <p>Your shift at the Patch-It Pod comes to an end. The mundane repairs were nothing out of the ordinary, but you're content with the work and the steady pay it brings.</p><br>
        <<set $player.credits += 15>><br>
        <<creditchange 15 "positive">>
<</switch>>

<br><br>
<!-- Continue Link -->
[[Step back into the station's life.|Patch-It Pod]]
<</nobr>>



:: PlayerInfo {"position":"875,50","size":"100,100"}
<<nobr>><!-- PlayerInfo Passage with conditional logic -->
<div style="background-color: rgba(0, 0, 0, 0.75); /* Semi-transparent black */
    border: 4px solid #444;
    text-shadow: -1px -1px 0 #000,  /* Top-left sharp shadow */
                 1px -1px 0 #000,   /* Top-right sharp shadow */
                 -1px 1px 0 #000,   /* Bottom-left sharp shadow */
                 1px 1px 0 #000,    /* Bottom-right sharp shadow */
                 0px -2px 0 #000,   /* Top sharp shadow */
                 0px 2px 0 #000,    /* Bottom sharp shadow */
                 -2px 0px 0 #000,   /* Left sharp shadow */
                 2px 0px 0 #000,    /* Right sharp shadow */
                 0px 0px 2px #000;  /* General soft blur */
    padding: 0.4em;
    margin-bottom: 0em;"> <!-- Adjust margin as needed -->
    Location: $location.name<br>
</div><</nobr>>\


:: Reputation [noreturn safe menu] {"position":"1300,175","size":"100,100"}
<!-- Placeholder for other zones -->
<p>This isn't setup yet..</p>

<!-- Return Link -->
<<link "Return" $return>><</link>>


:: RoguesGallery [poi] {"position":"1600,1325","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerblackmarket/roguesgallery.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Rogue's Gallery",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Rogue's Gallery</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
<<nobr>>Things to do:<br>
<!-- Work as a server -->
[[Work a shift as a server. (01:00)|RoguesGalleryWork][$player.credits += 15; $player.fatigue += 10; $timeadd = 60]]<br>
<!-- Grab a drink -->
<<if $player.credits >= 8>>
    [[Buy a specialty drink and mingle with the patrons. (00:15 Cr. 8)|RoguesGalleryDrink][$player.credits -= 8; $player.mood += 5; $timeadd = 15]]<br>
<<else>>
    <span class="disabledLink">Buy a specialty drink and mingle with the patrons. (00:15 Cr. 8)</span><br>
<</if>>
<!-- Listen to rumors -->
[[Eavesdrop on conversations for the latest rumors. (00:30)|RoguesGalleryRumors][$player.mood += 5; $timeadd = 30]]<br>
<!-- Play cards -->
<<if $player.credits >= 30>>
[[Join a card game and try your luck. (01:00) Cr. 30|RoguesGalleryCards][$timeadd = 60]]<br>
<<else>>
    <span class="disabledLink">Join a card game and try your luck. (01:00) Cr. 30</span><br>
    <</if>>
    
    <!-- Euphorix Vape -->
<<if $player.credits >= 1000>>
    [[Purchase Euphorix Vape (00:15) 1000 Cr.|RoguesGallery][$player.credits -= 1000; $playerConsumables.euphorixVape += 1; $timeadd += 15]]<br>
    "Elevate your mood with a puff of bliss."<br>
<<else>>
    <span class="disabledLink">Not enough credits for Euphorix Vape</span><br>
<</if>>

<!-- Hire help -->


<!-- Travel options from The Rogue's Gallery --><</nobr>>
Travel:
[[Step back into the shadows of the Black Market Bazaar.|Black Market Bazaar][$timeadd = 5]]

<!-- Description of The Rogue's Gallery atmosphere -->
The Rogue's Gallery is a dimly lit establishment, with a reputation for being a neutral ground for all manner of shady characters. The air is thick with the smell of cheap liquor and the murmur of clandestine deals. The walls are lined with holographic wanted posters, some flickering with age. Patrons keep to themselves, their eyes hidden under wide-brimmed hats or cybernetic visors. It's a place where fortunes can be won or lost in the blink of an eye, and where the next big score is always just a conversation away.



:: RoguesGalleryCards [lowerdeckact] {"position":"1475,1350","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerblackmarket/roguesgallery.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Rogue's Gallery - Playing Cards",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Rogue's Gallery</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The Rogue's Gallery is filled with the sound of shuffling cards and the occasional clatter of chips. You find a seat at a table where a card game is about to begin. The stakes are high, and the players' faces are unreadable. It's time to see if luck is on your side tonight.</p>

<!-- Card Game Event with Weighted Random Outcome -->
<<set _cardOutcome = 0>>
<<set _randomNumber = random(1, 100)>>

<<if _randomNumber <= 5>> <!-- Big Win (5% chance) -->
    <<set _cardOutcome to random(300, 500)>>
<<elseif _randomNumber <= 20>> <!-- Win (15% chance) -->
    <<set _cardOutcome to random(100, 299)>>
<<elseif _randomNumber <= 50>> <!-- Break Even (30% chance) -->
    <<set _cardOutcome to random(-20, 99)>>
<<else>> <!-- Loss (50% chance) -->
    <<set _cardOutcome to random(-30, -1)>>
<</if>>

<<set $player.credits += _cardOutcome>>

<<if _cardOutcome >= 300>> <!-- Big Win Text -->
    <p>Fortune smiles upon you as you play your hand with a deft touch. The chips pile up, and by the end of the night, you're walking away with a hefty sum of credits. It's a big win, and the other players can only look on in envy.</p>
    <<creditchange _cardOutcome "positive">><br>
<<elseif _cardOutcome >= 100>> <!-- Win Text -->
    <p>Your strategy pays off as the final card seals your victory. You've earned a respectable amount of credits, and the satisfaction of outplaying your opponents is just as rewarding.</p>
    <<creditchange _cardOutcome "positive">><br>
<<elseif _cardOutcome >= 0>> <!-- Break Even Text -->
    <p>The game is a rollercoaster of ups and downs, but you manage to break even. You count your credits and find you're right back where you started. Not a bad outcome, all things considered.</p>
<<else>> <!-- Loss Text -->
    <p>The cards are cruel tonight, and no amount of skill can save you from a run of bad luck. You've lost some credits, but you take the defeat in stride. After all, that's the game.</p>
    <<creditchange _cardOutcome "negative">><br>
<</if>>

<!-- Continue Link -->
[[Back to The Rogue's Gallery.|RoguesGallery]]
<</nobr>>



:: RoguesGalleryDrink [lowerdeckact] {"position":"1625,1450","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerblackmarket/roguesgallery.jpg'>>
<<addmins $timeadd>>
<<set $player.credits -= 8>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Rogue's Gallery - Grabbing a Specialty Drink",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $roguesGalleryEventsRecord>> <<set $roguesGalleryEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $roguesGalleryEventsRecord.today != _today>>
    <<set $roguesGalleryEventsRecord.today to _today>>
    <<set $roguesGalleryEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to no event -->

<!-- Create a list of available events that have not occurred today -->
<<set _availableEvents to []>>
<<for _i to 1; _i <= 5; _i++>>
    <<if not $roguesGalleryEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<!-- Select a random event from the available ones or default if none are available -->
<<if _availableEvents.length>> <!-- If there are still available events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $roguesGalleryEventsRecord.triggeredEvents.push(_randomEvent)>>
<<else>> <!-- If there are no more available events -->
    <<set _randomEvent to 0>> <!-- Default to no event -->
<</if>>

<!-- Standard Heading Template -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Rogue's Gallery</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The Rogue's Gallery is alive with the buzz of clandestine chatter and the clinking of glasses. You order a specialty drink, its exotic fumes promising a brief escape from the harsh realities of space.</p>

<!-- Random Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- A Friendly Bet -->
        <p>You're roped into a friendly bet with a group of smugglers. The stakes are low, but the thrill of victory boosts your mood.</p>
        <<set $player.mood += Math.round($player.mood * 0.02 + 5)>> <!-- Minor positive mood change -->
        <<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 2>> <!-- A Sudden Quarrel -->
        <p>A sudden quarrel breaks out near you, and your drink suffers the consequences. It's a minor annoyance.</p>
        <<set $player.mood -= Math.round($player.mood * 0.02)>> <!-- Minor negative mood change -->
        <<changemoods "mood" "minor" "NegEffectOnPlayer">><br>

    <<case 3>> <!-- A Veteran's Tale -->
        <p>An old spacer shares harrowing tales of survival, leaving you with a sense of resilience.</p>
        <<set $player.trauma -= Math.round($player.trauma * 0.02 + 5)>> <!-- Minor negative trauma change (good for the player) -->
        <<changemoods "trauma" "minor" "PosEffectOnPlayer">><br>

    <<case 4>> <!-- A Lucky Tip -->
        <p>A tip from a fellow patron leads you to a small windfall. It's always nice to have a bit of extra credit.</p>
        <<set $player.credits += 20>> <!-- Fixed credit gain -->
        <<creditchange 20 "positive">><br>

    <<case 5>> <!-- A Moment's Peace -->
        <p>The ambient noise of the bar fades into the background as you find a moment of peace, reducing your stress.</p>
        <<set $player.stress -= Math.round($player.stress * 0.02 + 5)>> <!-- Minor positive stress change (stress reduction is good for the player) -->
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<default>> <!-- Default Event -->
        <p>The night progresses with no particular incident. You enjoy the drink and the company, feeling neither better nor worse for the experience.</p>
<</switch>>
<br><br>

<!-- Continue Link -->
[[Return to the bustle of The Rogue's Gallery.|RoguesGallery]]
<</nobr>>


:: RoguesGalleryRumors [lowerdeckact] {"position":"1525,1450","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerblackmarket/roguesgallery.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Rogue's Gallery - Listening to Rumors",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>
<<if not $roguesGalleryRumorsEventsRecord>>
    <<set $roguesGalleryRumorsEventsRecord to {today: "", triggeredEvents: []}>>
<</if>>

<<if $roguesGalleryRumorsEventsRecord.today != _today>>
    <<set $roguesGalleryRumorsEventsRecord.today to _today>>
    <<set $roguesGalleryRumorsEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to random(1, 10)>>
<<if not $roguesGalleryRumorsEventsRecord.triggeredEvents.includes(_randomEvent)>>
    <<set $roguesGalleryRumorsEventsRecord.triggeredEvents.push(_randomEvent)>>
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Rogue's Gallery</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The Rogue's Gallery is a cacophony of whispers and coded language. You lean back against the bar, a nondescript drink in hand, and let the undercurrent of rumors wash over you. In this den of secrets, every overheard word could be the key to fortune or downfall.</p>

<!-- Random Rumor Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- A Smuggler's Boast -->
        <p>A smuggler boasts about a recent haul. You make a mental note of the details; such information could be valuable.</p>
        <<set $player.powerReserves += Math.round($player.powerReserves * 0.02 + 5)>> <!-- Minor positive power reserves change -->
        <<changemoods "powerReserves" "minor" "PosEffectOnPlayer">><br>

    <<case 2>> <!-- A Coded Message -->
        <p>You catch a coded message meant for someone else. Deciphering it could lead to unexpected opportunities.</p>
        <<set $player.powerReserves += Math.round($player.powerReserves * 0.05 + 10)>> <!-- Major positive power reserves change -->
        <<changemoods "powerReserves" "major" "PosEffectOnPlayer">><br>

    <<case 3>> <!-- A Tense Standoff -->
        <p>A tense standoff at a nearby table ends without incident, but the stress of the moment leaves you more alert.</p>
        <<set $player.stress += Math.round($player.stress * 0.02 + 5)>> <!-- Minor negative stress change (stress increase is bad for the player) -->
        <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>

    <<case 4>> <!-- A Lucky Tip -->
        <p>A tip from a fellow patron about a lucrative job opportunity seems promising. It's worth looking into.</p>
        <<set $player.credits += 30>> <!-- Fixed credit gain -->
        <<creditchange 30 "positive">><br>

    <<case 5>> <!-- A Shared Secret -->
        <p>In a hushed tone, someone shares a rumor of a stash of contraband. The thrill of the hunt invigorates you.</p>
        <<set $player.health += Math.round($player.health * 0.02 + 5)>> <!-- Minor positive health change -->
        <<changemoods "health" "minor" "PosEffectOnPlayer">><br>

    <<case 6>> <!-- An Overheard Plot -->
        <p>You overhear a plot for a heist. The details are sketchy, but it's enough to keep your mind sharp.</p>
        <<set $player.trauma += Math.round($player.trauma * 0.02 + 5)>> <!-- Minor negative trauma change (trauma increase is bad for the player) -->
        <<changemoods "trauma" "minor" "NegEffectOnPlayer">><br>

    <<case 7>> <!-- A Drunken Revelation -->
        <p>A drunken patron lets slip a key piece of information about a rival faction. Knowledge is power.</p>
        <<set $player.powerReserves += Math.round($player.powerReserves * 0.05 + 10)>> <!-- Major positive power reserves change -->
        <<changemoods "powerReserves" "major" "PosEffectOnPlayer">><br>

    <<case 8>> <!-- A Warning Whisper -->
        <p>A warning whisper about increased security measures on the docks. Staying informed keeps you one step ahead.</p>
        <<set $player.stress += Math.round($player.stress * 0.02 + 5)>> <!-- Minor negative stress change (stress increase is bad for the player) -->
        <<changemoods "stress" "minor" "NegEffectOnPlayer">><br>

    <<case 9>> <!-- A Fortuitous Encounter -->
        <p>A chance encounter with an old friend leads to a promising business proposition. It could be a windfall.</p>
        <<set $player.credits += 40>> <!-- Fixed credit gain -->
        <<creditchange 40 "positive">><br>

    <<case 10>> <!-- A Mysterious Stranger -->
        <p>A mysterious stranger offers a cryptic piece of advice before disappearing into the crowd. It's puzzling, but you feel prepared for what's to come.</p>
        <<set $player.trauma += Math.round($player.trauma * 0.02 + 5)>> <!-- Minor negative trauma change (trauma increase is bad for the player) -->
        <<changemoods "trauma" "minor" "NegEffectOnPlayer">><br>

    <<default>> <!-- Default Rumor Event -->
        <p>The rumors are many, but none stand out as particularly useful tonight. Still, the act of listening keeps your wits sharp.</p>
<</switch>>
<br><br>

<!-- Continue Link -->
[[Back to The Rogue's Gallery.|RoguesGallery]]
<</nobr>>



:: RoguesGalleryWork [lowerdeckact] {"position":"1475,1250","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerblackmarket/roguesgallery.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Rogue's Gallery - Bartending Shift",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<set _randomEvent to random(1, 10)>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Rogue's Gallery</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The dim lights and murmurs of The Rogue's Gallery envelop you as you step behind the bar. Bottles of exotic liquors line the shelves, and the regulars nod in recognition. It's time to mix drinks, listen to tales of spacefaring adventures, and maybe learn a secret or two.</p>

<!-- Random Bartending Events -->
<<switch _randomEvent>>
    <<case 1>>
        <p>Your signature cocktail is the talk of the station. Patrons line up just to try it, leaving hefty tips in their wake.</p>
        <<set $player.credits += 60>><<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <<creditchange 60 "positive">><<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 2>>
        <p>A group of miners celebrate a big score and you're in on the action. They're generous with their newfound wealth.</p>
        <<set $player.credits += 45>><<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <<creditchange 45 "positive">><<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 3>>
        <p>You deftly handle a rowdy customer, earning the respect of the crowd and a bonus from the owner.</p>
        <<set $player.credits += 35>><<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <<creditchange 35 "positive">><<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 4>>
        <p>A rare ingredient allows you to prepare a legendary drink. It's a hit, and your reputation soars.</p>
        <<set $player.credits += 50>><<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <<creditchange 50 "positive">><<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 5>>
        <p>The night is steady but uneventful. You earn your standard pay and share a few laughs with the regulars.</p>
        <<set $player.credits += 25>>
        <<creditchange 25 "positive">><br>

    <<case 6>>
        <p>A mix-up with an order leads to a tense moment, but you smooth things over with a free round. The patrons appreciate the gesture.</p>
        <<set $player.credits += 20>><<set $player.mood -= Math.round($player.mood * 0.02 + 5)>>
        <<creditchange 20 "positive">><<changemoods "mood" "minor" "NegEffectOnPlayer">><br>

    <<case 7>>
        <p>You're in the zone, mixing drinks with flair and efficiency. The tips reflect your skill and showmanship.</p>
        <<set $player.credits += 55>><<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <<creditchange 55 "positive">><<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 8>>
        <p>An undercover security officer commends you for your vigilance. It's always good to be on the right side of the law.</p>
        <<set $player.credits += 30>><<set $player.mood += Math.round($player.mood * 0.02 + 5)>>
        <<creditchange 30 "positive">><<changemoods "mood" "minor" "PosEffectOnPlayer">><br>

    <<case 9>>
        <p>A spilled drink causes a slip-up, but you laugh it off and get back to work. The night's still young.</p>
        <<set $player.credits += 15>><<set $player.mood -= Math.round($player.mood * 0.02 + 5)>>
        <<creditchange 15 "positive">><<changemoods "mood" "minor" "NegEffectOnPlayer">><br>

    <<case 10>>
        <p>The tap system goes haywire, spraying beer everywhere. It's a mess, but you handle it with grace and earn a few extra credits for the trouble.</p>
        <<set $player.credits += 20>><<set $player.mood -= Math.round($player.mood * 0.02 + 5)>>
        <<creditchange 20 "positive">><<changemoods "mood" "minor" "NegEffectOnPlayer">><br>

    <<default>> <!-- Default Bartending Event -->
        <p>The shift passes without incident. You make the expected amount in tips and feel good about the work you've done.</p>
        <<set $player.credits += 25>>
        <<creditchange 25 "positive">><br>
<</switch>>
<br>

<!-- Continue Link -->
[[Back to The Rogue's Gallery.|RoguesGallery]]
<</nobr>>



:: Security Command Center [travel event] {"position":"2450,1850","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">><<setBackground setup.ImagePath+'/locs/melt/mor1/mid/midsecuritycommand.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Security Command Center",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Security Command Center</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
Places of Interest:
[[Proceed to Detention and Interrogation.|Detention and Interrogation][$timeadd = 5]]
[[Access the Internal Affairs Bureau.|Internal Affairs Bureau][$timeadd = 5]]

Things to Do:
There is nothing to do here at the moment.

Travel:
[[Return to the Upper Deck Checkpoint.|Upper Deck Checkpoint][$timeadd = 5]]

Within the metallic walls of the Security Command Center, the stark sounds of disciplined order echo throughout. This is the strategic heart of MOR-1's security operations, where officers and analysts monitor streams of data from countless sensors and cameras scattered throughout the station.

Rows of consoles emit a low hum, each staffed by personnel with stark expressions, their focus unwavering as they survey surveillance feeds. The room is washed in the cool glow of holographic displays, casting an azure light over the faces of those who watch over the station's safety.

Another door leads to the lesser-known Internal Affairs Bureau, where the integrity of the security force itself is policed. Here, investigations into misconduct and station threats are conducted away from the public eye, ensuring that those who hold power are not above the law themselves.



:: ShroudedMarket [poi] {"position":"1825,1325","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerblackmarket/shroudedmarket.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Shrouded Market",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Shrouded Market</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
You have <<=$lowerdecksStolenItems>> <span style="color:orange;">Stolen Items</span> and <<=$lowerdecksContraband>> <span style="color:red;">Contraband</span> in your possession. The Shrouded Market is a haven for those looking to trade in illicit goods away from the watchful eyes of the law.
<<nobr>>

<<blackmarketactivity>>

Things to do:<br>
<<if $lowerdecksStolenItems >= 5>>
    [[Sell a batch of 5 stolen items. (01:00)|ShroudedMarketSellStolen][$lowerdecksStolenItems -= 5; $timeadd = 60]]<br>
<<else>>
    <span class="disabledLink">Sell a batch of 5 stolen items. (01:00)</span><br>
<</if>>
<<if $lowerdecksContraband >= 10>>
    [[Trade a cache of 10 contraband. (01:00)|ShroudedMarketTradeContraband][$lowerdecksContraband -= 10; $timeadd = 60]]<br>
<<else>>
    <span class="disabledLink">Trade a cache of 10 contraband. (01:00)</span><br>
<</if>>
<<if $lowerdecksStolenItems >= 10 and $lowerdecksContraband >= 10>>
    [[Broker a big deal with 10 stolen items and 10 contraband. (01:00)|ShroudedMarketBigDeal][$lowerdecksStolenItems -= 10; $lowerdecksContraband -= 10; $timeadd = 60]]<br>
<<else>>
    <span class="disabledLink">Broker a big deal with 10 stolen items and 10 contraband. (01:00)</span><br>
<</if>>
<br>
<!-- Euphorix Vape -->
<<if $player.credits >= 1000>>
    [[Purchase Euphorix Vape (00:15) 1000 Cr.|ShroudedMarket][$player.credits -= 1000; $playerConsumables.euphorixVape += 1; $timeadd += 15]]<br>
    "Elevate your mood with a puff of bliss."<br>
<<else>>
    <span class="disabledLink">Not enough credits for Euphorix Vape</span><br>
<</if>>
<br>
<!-- Zenith Pulse -->
<<if $player.credits >= 1000>>
    [[Purchase Zenith Pulse (00:15) 1000 Cr.|ShroudedMarket][$player.credits -= 1000; $playerConsumables.zenithPulse += 1; $timeadd += 15]]<br>
    "Calm your nerves with harmonic resonance."<br>
<<else>>
    <span class="disabledLink">Not enough credits for Zenith Pulse</span><br>
<</if>>
<br>
<!-- PsycheLock Capsule -->
<<if $player.credits >= 1000>>
    [[Purchase PsycheLock Capsule (00:15) 1000 Cr.|ShroudedMarket][$player.credits -= 1000; $playerConsumables.psycheLockCapsule += 1; $timeadd += 15]]<br>
    "Protect your psyche from traumatic memories."<br>
<<else>>
    <span class="disabledLink">Not enough credits for PsycheLock Capsule</span><br>
<</if>>

<br>
Travel:<br>
[[Slip back into the shadows of the Black Market Bazaar.|Black Market Bazaar][$timeadd = 5]]
<</nobr>><br>
The Shrouded Market is a labyrinth of secrecy and silent agreements. Here, the currency is as much about favors and leverage as it is about credits. The market's patrons move with a cautious grace, their eyes hidden behind reflective visors, their transactions cloaked in layers of encryption. As you navigate through the veiled stalls, you can feel the weight of unseen eyes appraising your every move. Deals are made in hushed tones, and every handshake is a binding contract of mutual distrust. The air is thick with the scent of ozone and opportunity, and you know that fortunes are made and lost here with the exchange of a simple data chip.



:: ShroudedMarketBigDeal [lowerdeckact] {"position":"1950,1325","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/shroudedmarket/marketveiledpromenade.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Shrouded Market - Broker a Big Deal",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $shroudedMarketBigDealEventsRecord>> <<set $shroudedMarketBigDealEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $shroudedMarketBigDealEventsRecord.today != _today>>
    <<set $shroudedMarketBigDealEventsRecord.today to _today>>
    <<set $shroudedMarketBigDealEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available big deal events -->
<<for _i to 1; _i <= 10; _i++>>
    <<if not $shroudedMarketBigDealEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available big deal events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $shroudedMarketBigDealEventsRecord.triggeredEvents.push(_randomEvent)>>
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Shrouded Market - Broker a Big Deal</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The stakes are high as you approach the secluded booth, your arms laden with goods. The eyes that meet yours are sharp and calculating, and you know that this deal could change everything. The tension is palpable, and you can feel the stress coursing through your veins as you begin the dance of negotiation.</p>

<!-- Random Big Deal Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Monumental Gain -->
        <p>The deal goes better than you could have hoped. You walk away with your pockets significantly heavier.<span style="color: green;"> +4000 Credits</span></p>
        <<set $player.credits += 4000>>
        <<set $lowerdeckBlackActivity += 4000>>

    <<case 2>> <!-- Undercut Offer -->
        <p>The buyer is shrewd and cuts down your asking price. You accept, but it's a bitter pill to swallow.<span style="color: yellow;"> +2500 Credits</span></p>
        <<set $player.credits += 2500>>
        <<set $lowerdeckBlackActivity += 2500>>

    <<case 3>> <!-- Even Exchange -->
        <p>You manage to negotiate an even exchange. It's not a windfall, but it's fair.<span style="color: green;"> +3000 Credits</span></p>
        <<set $player.credits += 3000>>
        <<set $lowerdeckBlackActivity += 3000>>

    <<case 4>> <!-- Generous Bonus -->
        <p>The buyer is impressed with the quality and throws in a generous bonus on top of the agreed price.<span style="color: green;"> +3500 Credits</span></p>
        <<set $player.credits += 3500>>
        <<set $lowerdeckBlackActivity += 3500>>

    <<case 5>> <!-- Tough Loss -->
        <p>The deal turns sour, and you're forced to take a loss. It's a tough hit to your finances and pride.<span style="color: yellow;"> +2000 Credits</span></p>
        <<set $player.credits += 2000>>
        <<set $lowerdeckBlackActivity += 2000>>

    <<case 6>> <!-- Law Enforcement Scare -->
        <p>Mid-deal, you catch sight of law enforcement. You hastily conclude the deal at a lower price to avoid trouble.<span style="color: yellow;"> +2200 Credits</span></p>
        <<set $player.credits += 2200>>
        <<set $lowerdeckBlackActivity += 2200>>

    <<case 7>> <!-- Windfall Profit -->
        <p>A bidding war erupts over your goods, and you come out on top with a windfall profit.<span style="color: green;"> +4500 Credits</span></p>
        <<set $player.credits += 4500>>
        <<set $lowerdeckBlackActivity += 4500>>

    <<case 8>> <!-- Market Crash -->
        <p>Just as you're about to close the deal, the market crashes. You're left with a deal that barely covers your costs.<span style="color: yellow;"> +2100 Credits</span></p>
        <<set $player.credits += 2100>>
        <<set $lowerdeckBlackActivity += 2100>>

    <<case 9>> <!-- Fair Compensation -->
        <p>The buyer recognizes the value of your goods and offers fair compensation. You shake hands, content with the deal.<span style="color: green;"> +3200 Credits</span></p>
        <<set $player.credits += 3200>>
        <<set $lowerdeckBlackActivity += 3200>>

    <<case 10>> <!-- Negotiation Fatigue -->
        <p>After hours of back-and-forth, you're mentally exhausted. You agree to a deal that's good, but not great.<span style="color: yellow;"> +2800 Credits</span></p>
        <<set $player.credits += 2800>>
        <<set $lowerdeckBlackActivity += 2800>>

    <<default>> <!-- Balanced Outcome -->
        <p>The deal is tough but ultimately balanced. You walk away feeling that both sides got something out of it.<span style="color: green;"> +3000 Credits</span></p>
        <<set $player.credits += 3000>>
        <<set $lowerdeckBlackActivity += 3000>>
<</switch>>

<<set $player.stress += 20>>
<<set $player.mood -= 10>>
<<set $player.trauma += 5>>

<!-- Continue Link -->
[[Return to the Shrouded Market.|ShroudedMarket]]
<</nobr>>



:: ShroudedMarketSellStolen [lowerdeckact] {"position":"1825,1450","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/shroudedmarket/marketveiledpromenade.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Shrouded Market - Sell Stolen Items",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $shroudedMarketSellStolenEventsRecord>> <<set $shroudedMarketSellStolenEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $shroudedMarketSellStolenEventsRecord.today != _today>>
    <<set $shroudedMarketSellStolenEventsRecord.today to _today>>
    <<set $shroudedMarketSellStolenEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available stolen item selling events -->
<<for _i to 1; _i <= 10; _i++>>
    <<if not $shroudedMarketSellStolenEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available stolen item selling events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $shroudedMarketSellStolenEventsRecord.triggeredEvents.push(_randomEvent)>>
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Shrouded Market - Sell Stolen Items</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>In the dimly lit corners of the Shrouded Market, you find yourself among other shadowy figures, each looking to convert their ill-gotten gains into something more liquid. You clutch your stolen items, knowing that here, the right buyer can make all the difference.</p>

<<switch _randomEvent>>
    <<case 1>> <!-- Lucky Break -->
        <p>A collector is on the lookout for exactly what you're selling. You strike a deal for a bit more than the usual rate.<span style="color: green;"> +550 Credits</span></p>
        <<set $player.credits += 550>>
        <<set $lowerdeckBlackActivity += 550>>

    <<case 2>> <!-- Desperate Times -->
        <p>You're desperate to sell and it shows. A buyer haggles you down to less than you wanted.<span style="color: yellow;"> +450 Credits</span></p>
        <<set $player.credits += 450>>
        <<set $lowerdeckBlackActivity += 450>>

    <<case 3>> <!-- Fair Trade -->
        <p>You find a trader willing to do business at the standard rate, no questions asked.<span style="color: green;"> +500 Credits</span></p>
        <<set $player.credits += 500>>
        <<set $lowerdeckBlackActivity += 500>>

    <<case 4>> <!-- Finder's Fee -->
        <p>The buyer offers a finder's fee on top of the base price, sweetening the deal.<span style="color: green;"> +525 Credits</span></p>
        <<set $player.credits += 525>>
        <<set $lowerdeckBlackActivity += 525>>

    <<case 5>> <!-- Bargain Hunter -->
        <p>A bargain hunter sniffs out your urgency to sell and offers you a lower price, which you begrudgingly accept.<span style="color: yellow;"> +475 Credits</span></p>
        <<set $player.credits += 475>>
        <<set $lowerdeckBlackActivity += 475>>

    <<case 6>> <!-- Under Surveillance -->
        <p>You suspect you're being watched and quickly offload the goods for a safe but slightly lower price.<span style="color: yellow;"> +480 Credits</span></p>
        <<set $player.credits += 480>>
        <<set $lowerdeckBlackActivity += 480>>

    <<case 7>> <!-- Generous Patron -->
        <p>A wealthy patron is feeling generous today and offers you more than the going rate.<span style="color: green;"> +550 Credits</span></p>
        <<set $player.credits += 550>>
        <<set $lowerdeckBlackActivity += 550>>

    <<case 8>> <!-- Market Glut -->
        <p>The market is currently flooded with similar items, driving your selling price down.<span style="color: yellow;"> +470 Credits</span></p>
        <<set $player.credits += 470>>
        <<set $lowerdeckBlackActivity += 470>>

    <<case 9>> <!-- Sympathetic Buyer -->
        <p>A buyer sympathizes with your plight and offers a fair price for your goods.<span style="color: green;"> +510 Credits</span></p>
        <<set $player.credits += 510>>
        <<set $lowerdeckBlackActivity += 510>>

    <<case 10>> <!-- Haggling Headache -->
        <p>After a lengthy haggling session, you walk away with a slightly lower payout than expected.<span style="color: yellow;"> +490 Credits</span></p>
        <<set $player.credits += 490>>
        <<set $lowerdeckBlackActivity += 490>>

    <<default>> <!-- Standard Deal -->
        <p>You make a standard deal. It's not the best you've had, but it's not the worst either.<span style="color: green;"> +500 Credits</span></p>
        <<set $player.credits += 500>>
        <<set $lowerdeckBlackActivity += 500>>
<</switch>>

<!-- Continue Link -->
[[Return to the Shrouded Market.|ShroudedMarket]]
<</nobr>>



:: ShroudedMarketTradeContraband [lowerdeckact] {"position":"1950,1450","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/shroudedmarket/marketveiledpromenade.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Shrouded Market - Trade Contraband",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $shroudedMarketTradeContrabandEventsRecord>> <<set $shroudedMarketTradeContrabandEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $shroudedMarketTradeContrabandEventsRecord.today != _today>>
    <<set $shroudedMarketTradeContrabandEventsRecord.today to _today>>
    <<set $shroudedMarketTradeContrabandEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of available contraband trading events -->
<<for _i to 1; _i <= 10; _i++>>
    <<if not $shroudedMarketTradeContrabandEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are still available contraband trading events -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $shroudedMarketTradeContrabandEventsRecord.triggeredEvents.push(_randomEvent)>>
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Shrouded Market - Trade Contraband</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The Shrouded Market's underbelly is ripe with the whispers of contraband trade. You navigate through the crowd, your pockets heavy with illicit goods, ready to make a deal that will line them with credits instead.</p>

<!-- Random Contraband Trading Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- High Demand -->
        <p>The items you're offering are in high demand. You negotiate a price that's well above the standard rate.<span style="color: green;"> +2200 Credits</span></p>
        <<set $player.credits += 2200>>
        <<set $lowerdeckBlackActivity += 2200>>

    <<case 2>> <!-- Buyer's Market -->
        <p>It's a buyer's market today. You're forced to settle for a price that's slightly below what you were hoping for.<span style="color: yellow;"> +1800 Credits</span></p>
        <<set $player.credits += 1800>>
        <<set $lowerdeckBlackActivity += 1800>>

    <<case 3>> <!-- Standard Exchange -->
        <p>You find a buyer willing to pay the standard rate for your contraband. No hassle, no haggling.<span style="color: green;"> +2000 Credits</span></p>
        <<set $player.credits += 2000>>
        <<set $lowerdeckBlackActivity += 2000>>

    <<case 4>> <!-- Generous Tip -->
        <p>The buyer is pleased with the quality of your goods and throws in a little extra as a tip.<span style="color: green;"> +2100 Credits</span></p>
        <<set $player.credits += 2100>>
        <<set $lowerdeckBlackActivity += 2100>>

    <<case 5>> <!-- Tough Bargain -->
        <p>The buyer drives a hard bargain. You walk away with less than you wanted, but it's better than nothing.<span style="color: yellow;"> +1900 Credits</span></p>
        <<set $player.credits += 1900>>
        <<set $lowerdeckBlackActivity += 1900>>

    <<case 6>> <!-- Law Enforcement Discount -->
        <p>You spot law enforcement nearby and quickly make a deal at a discount to avoid suspicion.<span style="color: yellow;"> +1850 Credits</span></p>
        <<set $player.credits += 1850>>
        <<set $lowerdeckBlackActivity += 1850>>

    <<case 7>> <!-- Windfall Sale -->
        <p>A rare opportunity presents itself, and you sell your contraband for a significant profit.<span style="color: green;"> +2300 Credits</span></p>
        <<set $player.credits += 2300>>
        <<set $lowerdeckBlackActivity += 2300>>

    <<case 8>> <!-- Saturated Market -->
        <p>The market is saturated with similar goods, forcing you to accept a lower price.<span style="color: yellow;"> +1700 Credits</span></p>
        <<set $player.credits += 1700>>
        <<set $lowerdeckBlackActivity += 1700>>

    <<case 9>> <!-- Sympathetic Buyer -->
        <p>A sympathetic buyer understands your situation and offers a fair price for the contraband.<span style="color: green;"> +2050 Credits</span></p>
        <<set $player.credits += 2050>>
        <<set $lowerdeckBlackActivity += 2050>>

    <<case 10>> <!-- Haggling Success -->
        <p>Your haggling pays off, and you manage to secure a slightly better deal than usual.<span style="color: green;"> +2150 Credits</span></p>
        <<set $player.credits += 2150>>
        <<set $lowerdeckBlackActivity += 2150>>

    <<default>> <!-- Balanced Deal -->
        <p>The trade is fair and square. You get a decent price for your contraband, and the buyer seems satisfied.<span style="color: green;"> +2000 Credits</span></p>
        <<set $player.credits += 2000>>
        <<set $lowerdeckBlackActivity += 2000>>
<</switch>>

<!-- Continue Link -->
[[Return to the Shrouded Market.|ShroudedMarket]]
<</nobr>>



:: Stand Up {"position":"500,425","size":"100,100"}
You stand up, steadying yourself against the bench. The dizziness fades, and you take in more details of the small room. Your gaze is drawn to a locker in the corner, glowing with a soft <span style="color: lightgreen;">green</span> light.

Opening the locker, you find a small mirror. <<if $worldEconomyScore >= 800>>The mirror is immaculate, showing a clear reflection of yourself.
<<elseif $worldEconomyScore >= 600>>The mirror is mostly clear, with minor signs of wear.
<<elseif $worldEconomyScore >= 400>>The mirror has a few scratches but still reflects well.
<<elseif $worldEconomyScore >= 200>>The mirror is tarnished, obscuring parts of your reflection.
<<else>>The mirror is cracked, making your reflection fragmented and unclear.
<</if>>
In the mirror, you see <<cycle "$player.gender" autoselect>><<option "a man" 1>><<option "a woman" 2>><<option "a gender-neutral figure" 3>><</cycle>> with \
<<cycle "$player.hairLength" autoselect>><<option "short" 1>><<option "medium-length" 2>><<option "long" 3>><<option "nearly shaved" 4>><</cycle>>, \
<<cycle "$player.hairColor" autoselect>><<option "black" 1>><<option "blonde" 2>><<option "red" 3>><<option "brown" 4>><<option "silver" 5>><</cycle>> hair, \
<<cycle "$player.eyeColor" autoselect>><<option "blue" 1>><<option "green" 2>><<option "brown" 3>><<option "hazel" 4>><<option "gray" 5>><</cycle>> eyes, and \
<<cycle "$player.skinColor" autoselect>><<option "light" 1>><<option "olive" 2>><<option "tan" 3>><<option "brown" 4>><<option "dark" 5>><</cycle>> skin looking back at you. It takes a second, but you realize that you are looking at yourself.

You have a build that is \
<<cycle "$player.build" autoselect>><<option "slender and soft" 1>><<option "slender and toned" 2>><<option "just average without much definition" 3>><<option "stocky and bulky" 4>><<option "athletic and fit" 5>><<option "muscular and ripped" 6>><</cycle>> and you are \
<<cycle "$player.height" autoselect>><<option "short" 1>><<option "average height" 2>><<option "tall" 3>><</cycle>>.

Your overall appearance is marked by \
<<cycle "$player.distinctiveFeature" autoselect>><<option "freckles" 1>><<option "a scar" 2>><<option "a birthmark" 3>><<option "clear skin" 4>><</cycle>> and can be described as \
<<cycle "$player.appearance" autoselect>><<option "rugged" 1>><<option "elegant" 2>><<option "youthful" 3>><<option "weathered" 4>><</cycle>>.

As you turn around to examine yourself, the mirror captures the full extent of your physique. The fact that you don't recognize yourself is disconcerting, but you can't deny that it is you.

Your attention is drawn to the nameplate bolted above the mirror. It has a name, and deep down you realize that it is yours.

<<textbox "$playerName" "Alex">>

<!-- When the player clicks Continue, sanitize the input before saving it -->
[[Continue|Intro2][$playerIntro = 1; $player.name = sanitizeInput($playerName)]]


:: Start [splash] {"position":"500,50","size":"100,100"}
<<type 2ms start 1s>><<nobr>><<PlayTrack>><<setBackground setup.ImagePath+'/splash.jpg'>>
<!-- Version 4: Glowing Text with Stroke Shadows -->
<h1 style="font-size: 4em; text-align: center; color: #87cefa; text-shadow: 0 0 10px #87cefa, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000, 0px -2px 0 #000, 0px 2px 0 #000, -2px 0px 0 #000, 2px 0px 0 #000, 0px 0px 2px #000;">ShipCore</h1>
<h2 style="font-size: 2.5em; text-align: center; color: #add8e6; text-shadow: 0 0 8px #add8e6, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000, 0px -2px 0 #000, 0px 2px 0 #000, -2px 0px 0 #000, 2px 0px 0 #000, 0px 0px 2px #000;">The Depths of Space Await</h2>
    <p>Welcome to <strong>ShipCore</strong>, a text-based adventure game set in the expansive universe of the ShipCore webserial by Erios909, taking place over a decade after the Battle of Meltisar. Characters from the series will appear, but it may be a long journey before you progress to meet these icons.</p>
    <p> Your path is yours to forge, from building a business empire to acquiring a ship and fleet for trading, or perhaps even obtaining your own wormhole drive to expand humanity's reach into unknown systems. Who knows, maybe you will encounter the fabled Omega or her friends?</p>
    <p>In this world, you will encounter a diverse cast of characters that go far beyond the heroes in the story, here we'll dive into the lives of common men and women instead of larger than life legends. All of them have their own stories and agendas. From the diligent engineers maintaining the lifeblood of the station to the shrewd traders of the Black Market Bazaar.</p>
    <p>Your adventure begins in the Lower Decks, a place teeming with opportunity and danger. Here, the station's underbelly reveals itself, and you must learn to adapt, survive, and thrive amidst the shadows.</p>
    <p>As you explore the station, you will face challenges that test your wit, resolve, and morality. Your choices will affect not only your own story but also the delicate balance of power within MOR-1, and eventually beyond. Will you rise to become a beacon of hope, or will you delve into the depths of corruption?</p>
    <p>Manage your resources carefully, for space is unforgiving. Your health, mood, stress, and fatigue are just as important as the credits in your pocket. Remember, in space, no one can hear you scream... but they can certainly see you thrive or falter.</p>
    <p>Engage in various activities to earn credits, from trading valuable parts to taking on high-stakes jobs. But beware, for each action comes with consequences, and the station's ever-watchful security drones are always on the lookout for trouble.</p>
    <p>Uncover the mysteries of cold storage and why no one dares to venture there. What secrets lie within its silent chambers? Only the brave or the foolish seek to uncover the truth.</p>
    <p>Forge alliances or rivalries with the station's factions. Your reputation precedes you, and your allegiances will open doors to new possibilities or close them forever.</p>
    <p>The story of ShipCore is <span style="color: skyblue;">now</span> yours to write. Will you become a legend among the stars or a footnote in the station's history?</p>
    <p>Prepare to embark on your journey. The decks of MOR-1 await your footsteps, and the stars beyond beckon for exploration. The question is, what will you discover?</p>
<span style="color: lightblue; text-decoration: none; font-weight: bold; background-color: #333; padding: 0.5em 1em; border-radius: 5px; display: inline-block; margin-top: 0em;">
    <<link "Begin Your Adventure">><<goto "awakening">><</link>>
</span>
<</nobr>>
<span style="display: none;">[[Continue.->awakening]]</span>
<!-- Change Log Button using SlideWin -->
<p><<button 'View Change Log'>>
    <<run slideWin("changelist")>>
<</button>></p>
<</type>>


:: Stash [noreturn safe menu] {"position":"1100,175","size":"100,100"}
<<nobr>><!-- Stash Passage -->
<div class="stash-header">
    Stash
</div>
<p>Most places have centralized storage systems, providing convenience and security to travelers and traders alike. When you gain an account on these systems, they will appear here and show you their contents.</p>

<p>Notice: Most services will not deliver to each other, requiring the User to manually transport items physically. When services are located on the same station, this could be done manually, but when stashes are not local, they will require transport via shipment--whether that is done privately or by mail courier--is up to the user.</p>

<div class="zone-header">
    Meltisar StationNet Storage Services - Unified
</div>
<h3>Lower Deck Services</h3>
<div class="service-container">
    <<if $lowerdecksParts gt 0 or $hasUsedLowerdecksParts>>
        Meltisar General Locker Service:<br>
        Parts: <<print $lowerdecksParts>><br>
    <</if>>
    <<if $lowerdecksScrap gt 0 or $hasUsedLowerdecksScrap>>
        Scrap: <<print $lowerdecksScrap>><br>
    <</if>>
    <<if $lowerdecksCyberware gt 0 or $hasUsedLowerdecksCyberware>>
        Cyberware: <<print $lowerdecksCyberware>><br>
    <</if>>
    <<if $lowerdecksStolenItems gt 0 or $hasUsedLowerdecksStolenItems>>
        Stolen Items: <<print $lowerdecksStolenItems>><br>
    <</if>>
    <<if $lowerdecksContraband gt 0 or $hasUsedLowerdecksContraband>>
        Contraband: <<print $lowerdecksContraband>><br>
    <</if>>
    <<if not $hasUsedLowerdecksParts and not $hasUsedLowerdecksScrap and not $hasUsedLowerdecksCyberware and not $hasUsedLowerdecksStolenItems and not $hasUsedLowerdecksContraband>>
        <p>You have a subscription service and can place general items in the lockers. Automated drones will retrieve and store items as needed.</p>
    <</if>>
</div>

<!-- Placeholder for other zones -->
<p>Other subscription zones will install here as they are discovered.</p>

<!-- Return Link -->
<<link "Return" $return>><</link>>
<</nobr>>


:: Station Infrastructure [travel] {"position":"725,775","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerengineering.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Lower Engineering",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<<mapWidget "images/locs/melt/mor1/lower/map/lowerdeckeng.jpg">>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Lower Engineering</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
<<nobr>>
Things to do:<br>
<<if $player.parts >= 10>>
    [[Donate parts to the station. (00:30)|LowerEngineeringDonateParts][$player.parts -= 10; $timeadd = 30; $player.mood += 5; $player.stress -= 5]]
<<else>>
    <span class="disabledLink">Donate parts to the station. (00:30)</span><br>
<</if>>
<<if $player.fatigue >= 500>> <!-- need energy -->
    [[Work an engineering shift. (01:00)|LowerEngineeringWorkShift][$timeadd = 60]]
<<else>>
    <span class="disabledLink">Work an engineering shift. (04:00) (Too tired.)</span><br>
<</if>>


<br><br>
Travel:<br>
[[Head to the Lower Decks Hub.|Lower Decks][$timeadd = 5]]<br>
[[(Clockwise) The Station's primary outer corridor leads to the Lower Wharfs.|Lower Wharf][$timeadd = 5]]<br>
[[(Counter-Clockwise) The Station's primary outer corridor leads to the Lower Deck Promenade.|Lower Deck Promenade][$timeadd = 5]]<br>
<</nobr>>

Deep within the bowels of MOR-1, the Station Infrastructure is a labyrinth of essential machinery and circuitry that powers the life of the station. The air is alive with the thrum of generators and the warmth of conduits carrying power to all corners of the metallic behemoth. Technicians scurry about, obscured by the whirring of cooling fans, attending to the pulsing heart of technology that must not fail.

The area is dimly lit with the occasional safety sign casting a protective glow over the intricate work that keeps the station from descending into chaos. Pipes hiss with the release of steam, and warning klaxons sound off in the distance, signaling minor malfunctions that are just another part of daily life here.

Ventilation shafts and maintenance tunnels offer clandestine routes to those who know the station's skeleton. It is within these walls that the divide between the upper and lower echelons fades to a simple matter of who knows the right corridor to take.


:: StoryBanner {"position":"300,175","size":"100,100"}
<span class="smallHudFont"></span>


:: StoryCaption [menu] {"position":"750,50","size":"100,100"}
<<nobr>>
<!-- Font Size Control kept inline -->
<img @src="setup.ImagePath+'GrowF.png'" alt="Larger font" title="Larger font" class="fullscreenImg" style="top: 70px;" onclick="fontSize(1)">
<img @src="setup.ImagePath+'ShrinkF.png'" alt="Smaller font" title="Smaller font" class="fullscreenImg" style="top: 100px;" onclick="fontSize(-1)">

<!-- Conditional inclusion of Date and Time section -->
<<if $PlayerIntro2 >= 1>>
    <<include [[DateAndTime]]>>
<</if>>

<!-- unConditional inclusion of Player Info section -->
<<include [[PlayerInfo]]>>

<!-- Conditional inclusion of Biometrics Readout section -->
<<if $playerIntro4 >= 1>>
    <<include [[BiometricsReadout]]>>
<</if>>

<!-- Conditional inclusion of Financial Status section -->
<<if $playerIntro5 >= 1>>
    <<include [[FinancialStatus]]>>
<</if>>

<</nobr>>


:: StoryDisplayTitle {"position":"300,75","size":"100,100"}
<h1 style="font-size: 1.2em; text-align: center; color: #87cefa; text-shadow: 0 0 10px #87cefa, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000, 0px -2px 0 #000, 0px 2px 0 #000, -2px 0px 0 #000, 2px 0px 0 #000, 0px 0px 2px #000; margin: 0">ShipCore</h1>\
<hr id="HuDHr">


:: StoryInit {"position":"175,175","size":"100,100"}
/* In your StoryInit passage or JavaScript section */
<<set setup.songList = ["music1", "music2", "music3", "music4", "music5"]>>
<<set setup.currentSongIndex = 0>>
<<set $LastHomeZone to "Cold Storage">>

/*
	Date & Time Widget Setup
*/
<<set
	window.GameDays to [
		"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"
	];
	window.GameMonths to [
		"Jan", "Feb", "Mar", "Apr", "May", "Jun",
		"Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
	];

	/*
		Below we have to use the multi-parameter version of the Date
		constructor, rather than the date string version, because the
		date string version treats a missing timezone offset as UTC.
		While there are ways to determine players' timezone offsets,
		so they could be added to a date string, it's more convenient
		simply to use the multi-parameter constructor.

		The point of this is so that you can simply initialize the game
		world clock to whatever date and time you wish without having to
		worry about the players' timezone offsets, while still ensuring
		that they all see the same game world dates and times.
	*/
	/* params: year , month(0-based) , day , hour(24H) , minute [, second ] */
	$gameDate to new Date(3562, 2, 17, 3, 24); /* e.g. Mar 17, 3562 03:24 */
>>

<<script>>
setup.statInversed = {
    "health": false,
    "mood": false,
    "stress": true,
    "trauma": true,
    "fatigue": true,
    "filth": true,
    "powerReserves": false,
    "credits": false,
    "debt": true,
    // Add more stats as needed
};
<</script>>

<<script>>
setup.statNames = {
    "health": "Health",
    "mood": "Mood",
    "stress": "Stress",
    "trauma": "Trauma",
    "fatigue": "Fatigue",
    "filth": "Filth",
    "powerReserves": "Power Reserves",
    "credits": "Credits",
    "debt": "Debt",
    // Add more stats as needed
};
<</script>>

<<set $playerConsumables = {
    'nanoDocInjector': 0,
    'euphorixVape': 0,
    'zenithPulse': 0,
    'psycheLockCapsule': 0,
    'vigorMaxShot': 0,
    'puriDermSpray': 0,
    'energyCellBoost': 0
}>>

<<set $playerConsumablesTracker = {
    'nanoDocInjector': 0,
    'euphorixVape': 0,
    'zenithPulse': 0,
    'psycheLockCapsule': 0,
    'vigorMaxShot': 0,
    'puriDermSpray': 0,
    'energyCellBoost': 0
}>>

<!-- In StoryInit Passage -->
<<set $showDebugControls = false>>

<<set $areaImages to {
    "lowerdecks": "lowerdecks.jpg",
    "middecks": "middecks.jpg",
    "upperdecks": "upperdecks.jpg",
    "default": "default.jpg"
}>>

/* music stuff */
<<set _bgm = setup.SoundPath + "music1.mp3">>
<<cacheaudio "music1" _bgm>>
<<set _bgm = setup.SoundPath + "music2.mp3">>
<<cacheaudio "music2" _bgm>>
<<set _bgm = setup.SoundPath + "music3.mp3">>
<<cacheaudio "music3" _bgm>>
<<set _bgm = setup.SoundPath + "music4.mp3">>
<<cacheaudio "music4" _bgm>>
<<set _bgm = setup.SoundPath + "music5.mp3">>
<<cacheaudio "music5" _bgm>>

setup.currentSongIndex = 0; // Start with the first song
setup.songList = ["music1", "music2", "music3", "music4", "music5"]; // List of songs


<<setSidebarBackground setup.ImagePath+'/uisidebar.jpg'>>


/* creating MAIN CHARACTERS and associating them with images (goes in StoryInit) */
<<character 'maincomputer' 'MainComputer' setup.ImagePath+'/characters/maincomputer/maincomputer.jpg'>>
<<character 'playerM' '$player.name' setup.ImagePath+'/characters/playerM/playerM.jpg'>>
<<character 'playerF' '$player.name' setup.ImagePath+'/characters/playerF/playerF.jpg'>>
<<character 'playerN' '$player.name' setup.ImagePath+'/characters/playerN/playerN.jpg'>>
/* using the generated macros in passages */

/* variable names raw
$lowerdecksParts
$lowerdecksScrap
$lowerdecksCyberware
$lowerdecksStolenItems
$lowerdecksContraband
$lowerdecksFabricatorHopperScrap
$lowerdecksFabricatorHopperParts
$lowerdecksEnergyFeeCredits
$lowerdecksFabricatorCyberware
*/

/* Breakdown Areas */
<<set setup.breakdownEvents = {
    "lowerdecks": "lowerdeckKO",
    "middecks": "middeckKO",
    "upperdecks": "upperdeckKO",
    "default": "defaultKO"
}>>


/* LOWER DECKS SETUP */
<<set $docksideStats = {
    partsFabricated: 0, // Initialize or update with actual fabricated parts count
    scrapBought: 0, // Initialize or update with actual scrap bought count
    partsSold: 0 // Initialize or update with actual parts sold count
}>>

<<set $lowerdeckBlackActivity to 0>>
<<set $lowerdecksRep to 0>>
<<set $LockboxHubSpecialRequests to false>>
<<set $lowerdecksParts to 0>>
<<set $lowerdecksScrap to 0>>
<<set $lowerdecksCyberware to 0>>
<<set $lowerdecksStolenItems to 0>>
<<set $lowerdecksContraband to 0>>
<<set $lowerdecksFabricatorHopperScrap>>
<<set $lowerdecksFabricatorHopperParts>>
<<set $lowerdecksEnergyFeeCredits>>
<<set $lowerdecksFabricatorCyberware>>
<<set $HavenApartmentState to "none">>
<<set $currentArea to "lowerdecks">> 
<<set $lowerdecksFabricatorHopperScrap to 0>>
<<set $lowerdecksFabricatorHopperParts to 0>>
<<set $lowerdecksEnergyFeeCredits to 0>>
<<set $lowerdecksFabricatorCyberware to 0>>

/* LOWER DECK NPCS */
/* Grafter */
<<set $GrafterTalked to 0>>
<<set $GrafterCyberTalk to 0>>

<<set $talkedToManager = false>>
<<set $introColdExit = 0>>

/* AREA SETUP */
<<set setup.areaEvents = {
    "lowerdecks": ["LowerEvent1", "LowerEvent2", "LowerEvent3", "LowerEvent4", "LowerEvent5", "LowerEvent6", "LowerEvent7"],
    "middecks": ["MidEvent1", "MidEvent2", "MidEvent3"],
    "upperdecks": ["UpperEvent1", "UpperEvent2", "UpperEvent3"]
}>>

<<set $currentArea to "default">>

/* SETTING UP BASE DIFFICULTY */
<<set $worldEconomyScore to 700>>  <!-- Sets the initial state of the game's economy. A score of 700 represents a stable economy. Higher values indicate more prosperity, lower values indicate economic struggles. -->
<<set $combinedDifficultyScore to 7>>
<<set $dangerLevelScore to 700>>   <!-- Determines the initial level of danger in the game. A score of 700 suggests moderate danger. Higher scores indicate a safer environment, while lower scores indicate increased danger and risk. -->

/* INTITIALIZING PLAYER */
<<set $player to {
    name: "Unknown",  // Name entered by the player
    gender: 1,  // 1 for male, 2 for female, 3 for gender-neutral
    skinColor: 1, // 1 for light, 2 for olive, etc.
    hairColor: 1,  // 1 for black, 2 for blonde, etc.
    hairLength: 1,  // 1 for short, 2 for medium-length, etc.
    eyeColor: 1,  // 1 for blue, 2 for green, etc.
    build: 1,  // 1 for slender and soft, 2 for slender and toned, etc.
    height: 1,  // 1 for short, 2 for average height, 3 for tall
    distinctiveFeature: 1,  // 1 for freckles, 2 for a scar, etc.
    appearance: 1,  // 1 for rugged, 2 for elegant, etc.
    health: 1000,  // Initial health
    mood: 500,    // Initial mood
    stress: 455,  // Initial stress
    trauma: 455,  // Initial trauma
    fatigue: 0, // Initial fatigue
    filth: 0, //starting player clean, removed by shower etc
    powerReserves: 750, // Initial power reserves
    inventory: [],  // Empty inventory
    credits: 0,  // Initial credits
    debt: 0 // Initial Debt
}>>

/* We use $timeadd at the end of a passage to show how long it will take to go somewhere, and then when entering passages use addmins $timeadd to increase time */

<<set $timeadd to 0>>

/* In each location we set whether it is outside, in a vacuum, and has controlled temperature, we'll use these to check against gear and if the player doesn't have appropriate measures, then they are penalized */

<<set $location to {
    name: "Unknown",
    outside: false,
    vacuum: false,
    temperature: true
}>>

<<set $player.gender to 1>>
<<playerp>>


:: StoryRightSidebar [menu] {"position":"1525,175","size":"100,100"}
<<nobr>><<link "Toggle Debug Controls">>
    <<toggleclass "#debug-controls" "visible">>
<</link>>
<h1 style="font-size: 2em; text-align: center; color: #87cefa; text-shadow: 0 0 10px #87cefa, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000, 0px -2px 0 #000, 0px 2px 0 #000, -2px 0px 0 #000, 2px 0px 0 #000, 0px 0px 2px #000;">Interface Controller</h1>
<div id="debug-controls" class="hidden">
    <<include [[DebugControls]]>>
    </div>
<<if $playerIntro3 >= 1>>
<div class="sidebar" id="rightside-navigation">
    <ul class="nano-content">
        <li class="sub-menu">
            <<link "Personal Management">>
                <span class="sc-icon sc-caret-right pull-right"></span>
                Personal Management
            <</link>>
            <ul class="content hidden">
                <li><<button 'View Change Log'>>
  					  <<run slideWin("Consumables")>>
				<</button>></li>
				<li>[[Consumables]]</li>
                <li>[[Stash]]</li>
                <li>[[Reputation]]</li>
                <li>[[Journal]]</li>
                <li>[[Appearance]]</li>
            </ul>
        </li>
        <li class="sub-menu">
            <<link "Ship Managemnt">>
                <span class="sc-icon sc-caret-right pull-right"></span>
                Another Section
            <</link>>
            <ul class="content hidden">
                <li>Content for Another Section...</li>
            </ul>
        </li>
        <!-- Add more sections as needed -->
        <li class="sub-menu">
            <<link "Fleet Management">>
                <span class="sc-icon sc-caret-right pull-right"></span>
                Another Section
            <</link>>
            <ul class="content hidden">
                <li>Content for Another Section...</li>
            </ul>
        </li>
        <li class="sub-menu">
            <<link "Business Management">>
                <span class="sc-icon sc-caret-right pull-right"></span>
                Another Section
            <</link>>
            <ul class="content hidden">
                <li>Content for Another Section...</li>
            </ul>
        </li>
        <li class="sub-menu">
            <<link "Station Management">>
                <span class="sc-icon sc-caret-right pull-right"></span>
                Another Section
            <</link>>
            <ul class="content hidden">
                <li>Content for Another Section...</li>
            </ul>
        </li>
        <li class="sub-menu">
            <<link "Colony Management">>
                <span class="sc-icon sc-caret-right pull-right"></span>
                Another Section
            <</link>>
            <ul class="content hidden">
                <li>Content for Another Section...</li>
            </ul>
        </li>
        <li class="sub-menu">
            <<link "Diplomacy">>
                <span class="sc-icon sc-caret-right pull-right"></span>
                Another Section
            <</link>>
            <ul class="content hidden">
                <li>Content for Another Section...</li>
            </ul>
        </li>
        <li class="sub-menu">
            <<link "Computronics">>
                <span class="sc-icon sc-caret-right pull-right"></span>
                Another Section
            <</link>>
            <ul class="content hidden">
                <li>Content for Another Section...</li>
            </ul>
        </li>
    </ul>
</div>
<</if>>
<</nobr>>


:: StorySubtitle {"position":"175,75","size":"100,100"}
<<nobr>><<set $isMuted to false>>
<<PlayTrack>>
<<set $isMuted to false>>
<<set $previousVolume to 0.5>> <!-- Set to your default volume level -->
<<set $buttonLabel to "Mute Toggle">>

<!-- Group both buttons in a container and apply flex styling -->
<div style="display: flex; align-items: center; justify-content: center;">
<div class="specialmutebutton" style="display: inline-block;"><<button "Background">>
  <<run $('#passages').toggleClass('hidden')>>    
<</button>></div>

    <!-- Audio Control Button with Special Class -->
    <div class="specialmutebutton" style="display: inline-block;">
        <span id="audioControl">
            <<button $buttonLabel>>
                <<if $isMuted>>
                    <<set SimpleAudio.volume($previousVolume)>>
                    <<set $isMuted to false>>
                    <<set $buttonLabel to "Mute Toggle">>
                <<else>>
                    <<set $previousVolume to SimpleAudio.volume()>>
                    <<set SimpleAudio.volume(0)>>
                    <<set $isMuted to true>>
                    <<set $buttonLabel to "Mute Toggle">>
                <</if>>
                <<updatebar>>  <!-- Update the UI after toggling mute -->
            <</button>>
        </span>
    </div>

    <<set $nextTrackLabel to "Next Track">>

    <!-- Next Track Button with Special Class -->
    <div class="specialmutebutton" style="display: inline-block;">
        <span id="trackControl">
            <<button "Next Track">>
                <<run setup.advanceTrack()>>
            <</button>>
        </span>
    </div>


<<script>>
// Ensure the setup object exists
window.setup = window.setup || {};

// Function to advance to the next track

<</script>>

</div><h1 style="font-size: 0.8em; text-align: center; color: #87cefa; text-shadow: 0 0 10px #87cefa, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000, 0px -2px 0 #000, 0px 2px 0 #000, -2px 0px 0 #000, 2px 0px 0 #000, 0px 0px 2px #000; margin: 0">Blue is Better</h1>


<<displayAreaImage>><</nobr>>\


:: The Electric Emporium [poi] {"position":"200,1200","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/electricemporium.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, The Electric Emporium",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Electric Emporium</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
You have <<=$lowerdecksParts>> <span style="color:lightgreen;">parts</span> and <<=$lowerdecksScrap>> <span style="color:orange;">scrap</span> in the lockers. There's free delivery drone service to the Lower Wharf and Black Market if you want to see if you can sell them for a profit. You could also try trading at Grafter's Gear which is nearby.
<br>
Things to do:<br>
<<if $lowerdecksScrap >= 10>>
    [[Process scrap and sell it for a profit. (03:00) -10 Scrap|ElectricEmporiumProcessScrap][$timeadd = 180]]<br>
<<else>>
    <span class="disabledLink">Process scrap and sell it for a profit. (03:00) -10 Scrap</span><br>
<</if>>
<<if $lowerdecksScrap >= 2>>
    [[Try to trade scrap for expensive parts. (00:30) -2 Scrap|ElectricEmporiumTradeScrap][$timeadd = 30]]<br>
<<else>>
    <span class="disabledLink">Try to trade scrap for expensive parts. (00:30) -2 Scrap</span><br>
<</if>>
<<if $lowerdecksScrap >= 1>>
    [[Sell raw scrap quickly. (00:15) -1 Scrap|ElectricEmporiumSellScrap][$timeadd = 15]]<br>
<<else>>
    <span class="disabledLink">Sell raw scrap quickly. (00:15) -1 Scrap</span><br>
<</if>>

<!-- Energy Cell Boost -->
<<if $player.credits >= 1000>>
    [[Purchase Energy Cell Boost (00:15) 1000 Cr.|The Electric Emporium][$player.credits -= 1000; $playerConsumables.energyCellBoost += 1; $timeadd += 15]]<br>
    "Supercharge your tech with a power surge."<br>
<<else>>
    <span class="disabledLink">Not enough credits for Energy Cell Boost</span><br>
<</if>>
<</nobr>>
Travel:
[[Step back out into the throng of the bustling Lower Deck Promenade.|Lower Deck Promenade][$timeadd = 5]]

The Electric Emporium is a pulsating hub of technological wonders, where the glow of screens and blinking LEDs offer a stark contrast to the dim corridors of the Lower Deck Promenade. Stacks of gadgets, widgets, and gizmos fill every available space, each promising to make life in the depths of MOR-1 easier, or at least more interesting.

The proprietor, a wiry individual with an eye patch that doubles as an interface display, navigates the clutter with uncanny ease. Around you, whispers of deals and the clinking of tools create a symphony of electronic potential. After indulging your curiosity among the circuitry and solder, you weave through the maze of stands, back into the artery of the Promenade.



:: The Last Home [poi] {"position":"700,1950","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/thelasthome.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, The Last Home",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Last Home</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
<<nobr>>Things to do:<br>
<<if $player.credits >= 5>>
    [[Grab a drink and listen to the spaceport's rumors. (00:15 Cr. 5)|LastHomeDrink][$player.credits -= 5; $timeadd = 15]]<br>
<<else>>
    <span class="disabledLink">Grab a drink and listen to the spaceport's rumors. (00:15 Cr. 5)</span><br>
<</if>>
<<if $player.credits >= 10>>
    [[Sit at the gambling table and try your luck with the locals. (00:30 Cr. 10)|LastHomeGamble][$player.credits -= 10; $timeadd = 30]]<br>
<<else>>
    <span class="disabledLink">Sit at the gambling table and try your luck with the locals. (00:30 Cr. 10)</span><br>
<</if>>
<<if $player.credits >= 5>>
    [[Play a game of darts with some off-duty station crewmen. (00:20 Cr. 5)|LastHomeDarts][$player.credits -= 5; $timeadd = 20]]<br>
<<else>>
    <span class="disabledLink">Play a game of darts with some off-duty station crewmen. (00:20 Cr. 5)</span><br>
<</if>>
<<if $player.credits >= 5>>
    [[Have a heart-to-heart with the bartender about life on MOR-1. (00:30 Cr. 5)|LastHomeHeartToHeart][$player.credits -= 5; $timeadd = 30]]<br>
<<else>>
    <span class="disabledLink">Have a heart-to-heart with the bartender about life on MOR-1. (00:30 Cr. 5)</span><br>
<</if>>
[[Offer to work. (01:00)|LastHomeWork][$player.credits += 10; $player.fatigue -= 15;$timeadd = 60]]
<</nobr>>

Travel:
[[Return to the densely packed corridors of the Habitation Cells.|Habitation Cells][$timeadd = 5]]

Nestled amid the habitation blocks, The Last Home is a sanctuary for the stories and souls that mingle within MOR-1's metallic walls. Its atmosphere is one of worn comfort, the buzz of quiet conversations spilling over the rim of each drink served. Shaded lamps cast a mellow glow, and the thick scent of spirits old and new mingles with the station's recycled air.

Within this taproom, the downtrodden of the habitation cells find a place to gather, share news, and occasionally sink into the kind of silence only the bottom of a glass can bring.



:: The Lockbox Hub [poi] {"position":"1125,1550","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lockbox.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, The Lockbox Hub",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Lockbox Hub</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
The Lockbox Hub offers a reliable service for the reservation and management of storage lockers, with automated drone service to and from all areas on the Lower Decks for convenience.
<<nobr>>
<br>Things to do:<br>
<<if $talkedToManager == false>>
[[Inquire about locker and delivery service. (00:30)|LockboxHubInquire][$talkedToManager = true; $timeadd = 30]]
<<else>>
    <<link "Check your locker storage. (00:15)" "Stash">>
    <<set $timeadd += 15>>
<</link>><br>
    <<if $player.credits >= 300>>
        [[Purchase an abandoned locker to sift through. (-300 credits, 03:00)|LockboxHubPurchaseAbandonedLocker][$player.credits -= 300; $timeadd = 180]]<br>
    <<else>>
        <span class="disabledLink">Purchase an abandoned locker to sift through. (-300 credits, 03:00)</span><br>
    <</if>>
    [[Speak with the manager about special storage requests. (00:15)|LockboxHubSpecialRequests][$timeadd = 15]]<br>
<</if>>
<</nobr>>
<br>
Travel:
[[Return to the bustling corridors of the Lower Decks.|Lower Decks][$timeadd = 5]]

The Lockbox Hub is a nexus of security and storage, where travelers and traders can secure their belongings against the chaos of station life. It's a fortress of lockers, each promising the safety of its contents behind layers of encryption and sturdy alloy. The hum of drones fills the air as they zip between the lockers and the delivery portals, a testament to the efficiency of the hub's automated systems.

The coordinator's desk sits at the heart of the hub, a beacon for those seeking to navigate the complex logistics of interstellar storage. Here, deals are made, and goods are secured, the ebb and flow of possessions mirroring the currents of commerce that drive the Lower Decks.



:: The Oxygen Garden [poi] {"position":"775,2175","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerhabitation/oxygengarden.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, The Oxygen Garden",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">The Oxygen Garden</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
Things to do:
[[Relax and breathe deep, taking in the rejuvenating air. (00:30)|OxygenGardenBreath][$timeadd = 30]]
[[Exchange tales with local gardeners and learn about plant cultivation on MOR-1. (00:45)|OxygenGardenTales][$timeadd = 45]]

Travel:
[[Return to the densely packed corridors of the Habitation Cells.|Habitation Cells][$timeadd = 5]]

The Oxygen Garden is a leafy enclave nestled within the Habitation Cells, bustling with the quiet activity of photosynthesis and conversation. The air here is noticeably fresher, tinged with the green scents of Earth-like flora. Verdant plants climb along trellises, and leaves rustle in the soft circulation of the station's air systems.

Here, the residents of MOR-1 come to escape the recycled atmosphere of the steel corridors, if only for a moment. The calm oasis serves as a meeting point for trade, rest, and the occasional clandestine exchange, all under the guise of tending to or enjoying the vibrant life that thrives against all odds in the depths of space.


:: Upper Deck Checkpoint [travel] {"position":"2150,1975","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/mid/midsecuritypoint.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Upper Deck Checkpoint",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Upper Deck Checkpoint</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
Places of Interest:
<<if $lowerdeckRep > 100>>
    [[A heavily guarded blast door leads to the local security command center.|Security Command Center][$timeadd = 5]]
<<else>>
    <span class="disabledLink">A heavily guarded blast door leads to the local security command center. (The guards don't look friendly.)</span>
<</if>>
[[Loiter. (00:15)|Upper Deck Checkpoint][$timeadd = 15]]


Travel:
[[Descend back to the Lower Decks Hub.|Lower Decks][$timeadd = 5]]


The Upper Deck Checkpoint is the formidable barrier between the stratified layers of MOR-1. Looming security gates and biometric scanners form a gauntlet that all must pass to move higher within the station. Uniformed personnel scrutinize each entrant with a keen eye, backed by the unblinking gaze of surveillance drones.

The atmosphere is one of strict order, a stark contrast to the chaotic hum of the lower decks. Every wall is polished to a reflective sheen, and the air smells faintly of sterilizing agents. The checkpoint is abuzz with the anxious energy of those waiting to be granted passage or sent back to the depths from whence they came.

This juncture represents the hope of ascension to many, yet it also serves as a reminder of the station's rigid hierarchy — a threshold that separates privilege from need, with the vigilant eyes of the station's security forces ensuring the boundary remains intact.



:: Void Vistas [poi] {"position":"575,1000","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/voidvistas.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Void Vistas",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Void Vistas</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
Surrounded by the flickering lights and soft hums of the holographic projectors, you find yourself with a couple of interesting ways to pass the time.
Things to do:
[[Work as a Virtual Tour Guide (1:00)|VoidVistasWorkTourGuide][$timeadd = 60]]
<<if $player.credits >= 30>>
    [[Relax and Watch a Show (01:30) Cr 30|VoidVistasWatchShow][$player.credits -= 30; $timeadd = 90]]
<<else>>
    <span class="disabledLink">Relax and Watch a Show (01:30) Cr 30</span>
<</if>>

Travel:
[[Navigate back to the Lower Deck Promenade.|Lower Deck Promenade][$timeadd = 5]]

<p>Void Vistas, nestled in the bustling promenade area of the Lower Decks on MOR-1, beckons to both the weary souls and starry-eyed dreamers. This establishment, a jewel amidst the stark, dystopian backdrop of the space station, is an oasis of escapism.</p>

<p>As patrons step inside, they are enveloped in an otherworldly ambiance, where holographic marvels bring distant galaxies and celestial wonders to life. The interior, a stark contrast to the somber exterior of MOR-1, offers a sanctuary where visitors can traverse the cosmos from their seats, indulging in the allure of uncharted worlds and the mesmerizing dance of stellar phenomena.</p>




:: VoidVistasWatchShow [lowerdeckact] {"position":"700,900","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/voidvistas.jpg'>>
<<addmins 90>>
<<set $location to {
    name: "Meltisar System, MOR-1, Void Vistas - Showtime",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Void Vistas</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<p>The lights dim and the holographic show begins, enveloping you in a world of wonder. The stories are moving, the characters compelling, and for a brief time, you're transported away from the harsh realities of life in the Lower Decks.</p>

<!-- Showtime Event -->
<<set _randomEvent to random(1, 10)>>
<<switch _randomEvent>>
    <<case 1>> <!-- An Uplifting Adventure -->
        <p>The show features an epic space journey filled with hope and camaraderie. It leaves you feeling lighter and more optimistic.</p>
        <<set $player.mood += Math.round($player.mood * 0.05)>>
        <<set $player.trauma -= Math.round($player.trauma * 0.03)>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">>
        <<changemoods "trauma" "minor" "PosEffectOnPlayer">><br>

    <<case 2>> <!-- A Hilarious Comedy -->
        <p>Laughter is the best medicine, and tonight's comedic performance proves it. You leave with your spirits lifted and your worries momentarily forgotten.</p>
        <<set $player.mood += Math.round($player.mood * 0.04)>>
        <<set $player.stress -= Math.round($player.stress * 0.04)>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">>
        <<changemoods "stress" "major" "PosEffectOnPlayer">><br>

    <<case 3>> <!-- A Romantic Tale -->
        <p>A story of star-crossed lovers fills the screen, tugging at your heartstrings. It's a poignant reminder of the power of love, leaving you both sentimental and soothed.</p>
        <<set $player.mood += Math.round($player.mood * 0.05)>>
        <<set $player.trauma -= Math.round($player.trauma * 0.02)>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">>
        <<changemoods "trauma" "minor" "PosEffectOnPlayer">><br>

    <<case 4>> <!-- A Thrilling Action Flick -->
        <p>Adrenaline pumps through you as the hero navigates danger with ease. You're on the edge of your seat, and when the show ends, you feel a rush of relief and excitement.</p>
        <<set $player.mood += Math.round($player.mood * 0.03)>>
        <<set $player.stress += Math.round($player.stress * 0.03)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 5>> <!-- A Touching Drama -->
        <p>The drama portrays deep human connections and the struggles of life. It's heart-wrenching but ultimately cathartic, helping you process your own past traumas.</p>
        <<set $player.mood += Math.round($player.mood * 0.04)>>
        <<set $player.trauma += Math.round($player.trauma * 0.04)>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">>
        <<changemoods "trauma" "major" "PosEffectOnPlayer">><br>

    <<case 6>> <!-- A Sci-Fi Mystery -->
        <p>The plot twists of the interstellar whodunit keep you guessing until the very end. You leave the theater with your curiosity sated and a sense of accomplishment.</p>
        <<set $player.mood += Math.round($player.mood * 0.03)>>
        <<set $player.stress -= Math.round($player.stress * 0.03)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 7>> <!-- A Historical Documentary -->
        <p>You absorb the rich details of the documentary, gaining new insights into the galaxy's past. It's an enlightening experience that leaves you feeling grounded and connected.</p>
        <<set $player.mood += Math.round($player.mood * 0.02)>>
        <<set $player.stress -= Math.round($player.stress * 0.02)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">><br>

    <<case 8>> <!-- A Musical Extravaganza -->
        <p>The vibrant music and dazzling performances fill you with energy and joy. You can't help but feel rejuvenated by the show's exuberance.</p>
        <<set $player.mood += Math.round($player.mood * 0.05)>>
        <<set $player.stress -= Math.round($player.stress * 0.05)>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">>
        <<changemoods "stress" "major" "PosEffectOnPlayer">><br>

    <<case 9>> <!-- An Experimental Art Piece -->
        <p>The unconventional narrative and abstract visuals challenge your perceptions. It's a thought-provoking experience that leaves you introspective and slightly unsettled.</p>
        <<set $player.mood += Math.round($player.mood * 0.02)>>
        <<set $player.trauma -= Math.round($player.trauma * 0.02)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<changemoods "trauma" "minor" "PosEffectOnPlayer">><br>

    <<case 10>> <!-- A Fantasy Adventure -->
        <p>The tale of heroes and mythical creatures in a faraway land sparks your imagination. You leave feeling inspired and full of wonder.</p>
        <<set $player.mood += Math.round($player.mood * 0.04)>>
        <<set $player.trauma -= Math.round($player.trauma * 0.05)>>
        <<changemoods "mood" "major" "PosEffectOnPlayer">>
        <<changemoods "trauma" "major" "PosEffectOnPlayer">><br>

    <<default>> <!-- Default Showtime Event -->
        <p>The show is decent, if not particularly memorable. Nonetheless, it provides a welcome distraction from the daily grind.</p>
        <<set $player.mood += Math.round($player.mood * 0.02)>>
        <<set $player.stress -= Math.round($player.stress * 0.02)>>
        <<set $player.trauma -= Math.round($player.trauma * 0.02)>>
        <<changemoods "mood" "minor" "PosEffectOnPlayer">>
        <<changemoods "stress" "minor" "PosEffectOnPlayer">>
        <<changemoods "trauma" "minor" "PosEffectOnPlayer">><br>
<</switch>>
<br>


<!-- Continue Link -->
[[Back to Void Vistas.|Void Vistas]]
<</nobr>>



:: VoidVistasWorkTourGuide [lowerdeckact] {"position":"575,875","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerpromenade/voidvistas.jpg'>>
<<addmins 60>>
<<set $location to {
    name: "Meltisar System, MOR-1, Void Vistas - Virtual Tour Guide Shift",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>

<<set _randomEvent to random(1, 10)>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Void Vistas</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;>
<p>As the virtual tour guide, you are the bridge between the cosmos and the customers. You slip on the interface gloves, feeling the subtle haptic feedback as you prepare to sweep the patrons away on a galactic adventure. The walls of Void Vistas disappear, replaced by the vast expanse of space stretching out in all directions.</p>

<!-- Random Tour Guide Events -->
<<switch _randomEvent>>
    <<case 1>>
        <p>Your engaging narrative on the life cycle of stars captivates the audience. They leave generous tips for the unforgettable journey.</p>
        <<set $player.credits += 50>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.02 + 5)>>
        <<creditchange 50 "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">><br>

    <<case 2>>
        <p>A group of students is thrilled by your detailed tour of historical space battles. You've made learning fun and earn a bonus.</p>
        <<set $player.credits += 25>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.02 + 10)>>
        <<creditchange 25 "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">><br>

    <<case 3>>
        <p>You deftly handle a malfunction in the holo-projector, keeping the tour on track. Your improvisation is rewarded.</p>
        <<set $player.credits += 20>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.02 + 10)>>
        <<creditchange 20 "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">><br>

    <<case 4>>
        <p>A curious child's relentless questions lead you to explore unplanned cosmic wonders. The parents are pleased and tip well.</p>
        <<set $player.credits += 40>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.02 + 5)>>
        <<creditchange 40 "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">><br>

    <<case 5>>
        <p>The day is slow, and you spend much of your shift maintaining the equipment. It's not the most exciting work, but it pays.</p>
        <<set $player.credits += 15>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.05 + 15)>>
        <<creditchange 15 "positive">>
        <<changemoods "fatigue" "major" "PosEffectOnPlayer">><br>

    <<case 6>>
        <p>A technical glitch sends your tour off-course, but you turn it into an impromptu lesson on troubleshooting. The crowd appreciates the transparency.</p>
        <<set $player.credits += 10>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.05 + 15)>>
        <<creditchange 10 "positive">>
        <<changemoods "fatigue" "major" "PosEffectOnPlayer">><br>

    <<case 7>>
        <p>Your vivid descriptions of alien landscapes leave the audience in awe. Your passion translates into a healthy tip pool.</p>
        <<set $player.credits += 35>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.02 + 10)>>
        <<creditchange 35 "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">><br>

    <<case 8>>
        <p>You spot a mistake in the tour script and correct it on the fly. The audience is none the wiser and your professionalism is noted.</p>
        <<set $player.credits += 20>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.02 + 10)>>
        <<creditchange 20 "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">><br>

    <<case 9>>
        <p>A mischievous kid tries to hijack the tour controls, but you manage to avert chaos. It's an exhausting day, but you keep your cool.</p>
        <<set $player.credits += 10>>
        <<set $player.fatigue += Math.round($player.fatigue * 0.05 + 20)>>
        <<creditchange 10 "positive">>
        <<changemoods "fatigue" "major" "NegEffectOnPlayer">><br>

    <<case 10>>
        <p>An unexpected power surge knocks out the main display. You use handheld projectors to finish the tour, earning respect and a modest bonus.</p>
        <<set $player.credits += 30>>
        <<set $player.fatigue += Math.round($player.fatigue * 0.05 + 20)>>
        <<creditchange 30 "positive">>
        <<changemoods "fatigue" "major" "NegEffectOnPlayer">><br>

    <<default>> <!-- Default Tour Guide Event -->
        <p>You lead a standard tour without any hiccups. The patrons are satisfied, and you earn your usual rate for the hour's work.</p>
        <<set $player.credits += 20>>
        <<set $player.fatigue -= Math.round($player.fatigue * 0.02 + 10)>>
        <<creditchange 20 "positive">>
        <<changemoods "fatigue" "minor" "PosEffectOnPlayer">><br>
<</switch>>
<br>

<!-- Continue Link -->
[[Back to Void Vistas.|Void Vistas]]
<</nobr>>


:: WharfsideBulkSellParts [lowerdeckact] {"position":"1500,925","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/wharfsidetechemporium.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Wharfside Tech Emporium - Bulk Sell Parts",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $wharfsideBulkSellPartsEventsRecord>> <<set $wharfsideBulkSellPartsEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $wharfsideBulkSellPartsEventsRecord.today != _today>>
    <<set $wharfsideBulkSellPartsEventsRecord.today to _today>>
    <<set $wharfsideBulkSellPartsEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->
<<set _baseCreditGain to 750>> <!-- Base credit gain for selling 15 parts at 50 each -->

<<set _availableEvents to []>> <!-- List of bulk selling parts events -->
<<for _i to 1; _i <= 3; _i++>>
    <<if not $wharfsideBulkSellPartsEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are events to trigger -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $wharfsideBulkSellPartsEventsRecord.triggeredEvents.push(_randomEvent)>>
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Wharfside Tech Emporium - Bulk Sell Parts</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The parts you have are in demand, and the Emporium is bustling with traders who are eager for quality components. With a savvy sales pitch and strategic bargaining, you're ready to see how much you can earn from this bulk sell.</p>

<!-- Random Bulk Selling Parts Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Premium Purchase -->
        <!-- The trader recognizes the exceptional quality of the parts, offering above the standard rate. -->
        <<set $player.credits += 900>> <!-- Gain of 150 credits above the base value -->
        <<creditchange 900 "positive">>
        <p>A discerning buyer immediately spots the premium quality of your parts, offering a price well above the going rate.</p>

    <<case 2>> <!-- Competitive Market -->
        <!-- Multiple traders are interested, creating a competitive situation that benefits you. -->
        <<set $player.credits += 850>> <!-- Gain of 100 credits above the base value -->
        <<creditchange 850 "positive">>
        <p>The competitive spirit is high in the Emporium today, and a bidding war ensues over your parts. You play it cool and end up with an excellent profit.</p>

    <<case 3>> <!-- Bulk Bargain -->
        <!-- A trader is looking to acquire bulk parts quickly, offering a fair price for immediate purchase. -->
        <<set $player.credits += 800>> <!-- Gain of 50 credits above the base value -->
        <<creditchange 800 "positive">>
        <p>A trader in a hurry to restock offers you a fair price for your bulk parts. It's a quick and easy sale with a decent margin.</p>

    <<default>> <!-- Standard Bulk Sale -->
        <!-- No special circumstances affect the sale; the parts sell for the standard market value. -->
        <<set $player.credits += 750>> <!-- Base value for the sale -->
        <<creditchange 750 "positive">>
        <p>The Emporium's standard rates apply today, and you sell your parts without any haggling. It's a straightforward transaction, and you walk away with the market rate.</p>
<</switch>>
<br>


<!-- Continue Link -->
[[Return to Wharfside Tech Emporium.|WharfsideTechEmporium]]
<</nobr>>



:: WharfsideCyberwareTrade [lowerdeckact] {"position":"1300,900","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/wharfsidetechemporium.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Wharfside Tech Emporium - Trade Cyberware",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $wharfsideCyberwareTradeEventsRecord>> <<set $wharfsideCyberwareTradeEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $wharfsideCyberwareTradeEventsRecord.today != _today>>
    <<set $wharfsideCyberwareTradeEventsRecord.today to _today>>
    <<set $wharfsideCyberwareTradeEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->
<<set _baseCreditGain to 900>> <!-- Base credit gain for trading 3 units of cyberware at 300 each -->

<<set _availableEvents to []>> <!-- List of trading cyberware events -->
<<for _i to 1; _i <= 3; _i++>>
    <<if not $wharfsideCyberwareTradeEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are events to trigger -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $wharfsideCyberwareTradeEventsRecord.triggeredEvents.push(_randomEvent)>>
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Wharfside Tech Emporium - Trade Cyberware</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>The Wharfside Tech Emporium is always on the lookout for cutting-edge cybernetics. Your collection has caught the eye of several buyers, and it's time to see how much they're willing to offer.</p>

<!-- Random Trading Cyberware Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Tech Enthusiast Bonus -->
        <!-- A tech enthusiast recognizes the rarity of the cyberware, willing to pay extra. -->
        <<set $player.credits += 1050>> <!-- Gain of 150 credits above the base value -->
        <p>An enthusiastic collector, recognizing the rarity of your cyberware, offers you a sum well above the standard rate for your tech.</p>
        <<creditchange 1050 "positive">><br>

    <<case 2>> <!-- Surge in Demand -->
        <!-- A sudden surge in demand for cyberware increases its value. -->
        <<set $player.credits += 1000>> <!-- Gain of 100 credits above the base value -->
        <p>A sudden surge in demand for high-tech cybernetics has spiked the market value. You take advantage of the trend and secure a lucrative deal.</p>
        <<creditchange 1000 "positive">><br>

    <<case 3>> <!-- Desperate Dealer -->
        <!-- A dealer is desperate for cyberware stock and offers a fair price. -->
        <<set $player.credits += 950>> <!-- Gain of 50 credits above the base value -->
        <p>A dealer in desperate need of cyberware stock offers you a fair price for a quick sale. While not the highest bid, it's a solid offer.</p>
        <<creditchange 950 "positive">><br>

    <<default>> <!-- Standard Cyberware Transaction -->
        <!-- The standard market rate applies, with no special circumstances affecting the price. -->
        <p>The going rate for cyberware is fair at the Emporium today. You trade in your units and receive the standard market price, no questions asked.</p>
        <<creditchange 900 "positive">><br>
<</switch>>


<!-- Continue Link -->
[[Return to Wharfside Tech Emporium.|WharfsideTechEmporium]]
<</nobr>>



:: WharfsidePartsTrade [lowerdeckact] {"position":"1300,800","size":"100,100"}
<<nobr>>
<<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/wharfsidetechemporium.jpg'>>
<<addmins $timeadd>>
<<set $location to {
    name: "Meltisar System, MOR-1, Wharfside Tech Emporium - Trade Parts for Tech",
    outside: false,
    vacuum: false,
    temperature: true
}>>
<<updatebar>>

<<if not $wharfsidePartsTradeEventsRecord>> <<set $wharfsidePartsTradeEventsRecord to {}>><</if>>
<<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>

<<if $wharfsidePartsTradeEventsRecord.today != _today>>
    <<set $wharfsidePartsTradeEventsRecord.today to _today>>
    <<set $wharfsidePartsTradeEventsRecord.triggeredEvents to []>>
<</if>>

<<set _randomEvent to 0>> <!-- Default to the default event -->

<<set _availableEvents to []>> <!-- List of trading parts for tech events -->
<<for _i to 1; _i <= 3; _i++>>
    <<if not $wharfsidePartsTradeEventsRecord.triggeredEvents.includes(_i)>>
        <<set _availableEvents.push(_i)>>
    <</if>>
<</for>>

<<if _availableEvents.length>> <!-- If there are events to trigger -->
    <<set _randomEvent to _availableEvents.random()>>
    <<set $wharfsidePartsTradeEventsRecord.triggeredEvents.push(_randomEvent)>>
<</if>>

<!-- Area Header -->
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Wharfside Tech Emporium - Trade Parts for Tech</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
<p>
Amidst the sea of neon signs and holographic displays, the Wharfside Tech Emporium buzzes with activity. Traders from across the galaxy haggle over components that could make or break the next technological breakthrough. The air is thick with the smell of solder and the murmur of deals being struck. Here, parts are more than just pieces of metal and circuitry—they're the lifeblood of innovation, and even the smallest cog can be the key to unlocking potential that changes the world. You adjust your bag of parts, knowing that somewhere in this emporium lies the chance to trade up for something that might just be the edge you need.
</p>

<!-- Random Trading Parts for Tech Events -->
<<switch _randomEvent>>
    <<case 1>> <!-- Rare Tech Opportunity -->
        <!-- Player trades for a rare piece of tech, gaining additional value. -->
        <<set $lowerdecksCyberware += 2>> <!-- Gain of 1 additional cyberware -->
        <<set $player.credits += 50>> <!-- Gain of 25 additional credits -->
        <p>Your parts draw the attention of a trader with a rare piece of cyberware. Sensing an opportunity, you negotiate and secure a trade that favors you.<span class="i-gain"> +2 Cyberware</span></p>
        <<creditchange 50 "positive">><br>

    <<case 2>> <!-- Enthusiastic Exchange -->
        <!-- An enthusiastic trader offers a good deal for the parts. -->
        <<set $lowerdecksCyberware += 1>> <!-- Standard gain of cyberware -->
        <<set $player.credits += 75>> <!-- Gain of 50 additional credits -->
        <p>An enthusiastic trader offers you a new piece of tech for your parts. You shake hands, pleased with the straightforward and favorable exchange.<span class="i-gain"> +1 Cyberware</span></p>
        <<creditchange 75 "positive">><br>

    <<case 3>> <!-- Bargain Hunter -->
        <!-- A bargain hunter trades for the parts but offers less additional value. -->
        <<set $lowerdecksCyberware += 1>> <!-- Standard gain of cyberware -->
        <<set $player.credits += 15>> <!-- Gain of 10 less credits -->
        <p>A keen bargain hunter trades you a cybernetic unit for your parts. It's a fair deal, but you can't help feeling you could have haggled for more.<span class="i-gain"> +1 Cyberware</span></p>
        <<creditchange 15 "positive">><br>

    <<default>> <!-- Standard Parts for Tech Transaction -->
        <!-- Standard trade, parts exchanged for cyberware and a small credit bonus. -->
        <<set $lowerdecksCyberware += 1>> <!-- Standard gain of cyberware -->
        <<set $player.credits += 25>> <!-- Standard gain of credits -->
        <p>The trade is quick and efficient. Your parts are exchanged for a standard issue of cyberware and a small credit bonus, just as expected.<span class="i-gain"> +1 Cyberware</span></p>
        <<creditchange 25 "positive">><br>
<</switch>>

<!-- Subtract the parts traded during the event -->
<<set $lowerdecksParts -= 1>>

<!-- Continue Link -->
[[Return to Wharfside Tech Emporium.|WharfsideTechEmporium]]
<</nobr>>



:: WharfsideTechEmporium [poi] {"position":"1425,775","size":"100,100"}
<<nobr>><<set $currentArea to "lowerdecks">>
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/wharfsidetechemporium.jpg'>>
<<addmins $timeadd>><<set $location to {
    name: "Meltisar System, MOR-1, Wharfside Tech Emporium",
    outside: false,
    vacuum: false,
    temperature: true
}>><<updatebar>>
<h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Wharfside Tech Emporium</span></h2>
<hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
<h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
<hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;"><</nobr>>
<p>You have <<=$lowerdecksScrap>> <span style="color:orange;">scrap</span>, <<=$lowerdecksParts>> <span style="color:lightgreen;">parts</span>, and <<=$lowerdecksCyberware>> <span style="color:yellow;">cyberware</span> in the lockers. The Wharfside Tech Emporium is the prime location to trade in high-end tech and cybernetics, and there's a buzz in the air about the latest mods and components.</p><br>
<<nobr>>
Things to do:<br>
<<if $lowerdecksCyberware >= 3>>
    [[Trade in cyberware for credits. (01:00) -3 Cyberware|WharfsideCyberwareTrade][$lowerdecksCyberware -= 3;$timeadd = 60]]<br>
<<else>>
    <span class="disabledLink">Trade in cyberware for upgrades or credits. (01:00)</span><br>
<</if>>
<<if $lowerdecksParts >= 1>>
    [[Trade parts for high-end tech. (- Parts) (01:00)|WharfsidePartsTrade][$timeadd = 180;$lowerdecksParts -= 1]]<br>
<<else>>
    <span class="disabledLink">Trade parts for high-end tech. (01:00)</span><br>
<</if>>
<<if $lowerdecksParts >= 15>>
    [[Bulk sell parts for a hefty profit. (02:00) -15 Parts|WharfsideBulkSellParts][$lowerdecksParts -= 15;$timeadd = 120]]<br>
<<else>>
    <span class="disabledLink">Bulk sell parts for a hefty profit. (02:00)</span><br>
<</if>>
<<if $lowerdecksScrap >= 1 and $lowerdecksParts >= 1 and $lowerdecksCyberware >= 1>>
    [[Wheel and deal with scrap, parts, and cyberware (03:00) -1 Part -1 Cyberware -1 Scrap|WharfsideWheelAndDeal][$timeadd = 180]]<br>
<<else>>
    <span class="disabledLink">Wheel and deal with scrap, parts, and cyberware. (03:00)</span><br>
<</if>><</nobr>>

Travel:
[[Navigate back to the bustling hub of the Lower Wharf.|Lower Wharf][$timeadd = 5]]

The Wharfside Tech Emporium is a glittering expanse of innovation and commerce. Here, the elite tinkerers and tech aficionados of the Lower Wharf gather to exchange not just goods, but ideas and ambitions. Amidst the hum of energy fields and the chatter of negotiation, you can't help but feel the thrill of possibility. The air is electric with the promise of progress, and as you leave, the latest holographic adverts for neural enhancers and AI companions flicker in your peripheral vision, a reminder of the ever-advancing frontier of technology.



:: WharfsideWheelAndDeal [lowerdeckact] {"position":"1400,925","size":"100,100"}
<<nobr>>   
    <<set $currentArea to "lowerdecks">>
    <<setBackground setup.ImagePath+'/locs/melt/mor1/lower/lowerwharf/wharfsidetechemporium.jpg'>>
    <<addmins $timeadd>>
    <<set $lowerdecksScrap -= 1>>
    <<set $lowerdecksParts -= 1>>
    <<set $lowerdecksCyberware -= 1>>
    <<set $location to {
        name: "Meltisar System, MOR-1, Wharfside Tech Emporium - Wheel and Deal",
        outside: false,
        vacuum: false,
        temperature: true
    }>>
    <<updatebar>>
    
    <<if not $wharfsideWheelAndDealEventsRecord>> <<set $wharfsideWheelAndDealEventsRecord to {}>><</if>>
    <<set _today to $gameDate.getFullYear() + "-" + ($gameDate.getMonth() + 1) + "-" + $gameDate.getDate()>>
    
    <<if $wharfsideWheelAndDealEventsRecord.today != _today>>
        <<set $wharfsideWheelAndDealEventsRecord.today to _today>>
        <<set $wharfsideWheelAndDealEventsRecord.triggeredEvents to []>>
    <</if>>
    
    <<set _randomEvent to 0>> <!-- Default to the default event -->
    
    <<set _availableEvents to []>> <!-- List of available wheel and deal trading events -->
    <<for _i to 1; _i <= 11; _i++>>
        <<if not $wharfsideWheelAndDealEventsRecord.triggeredEvents.includes(_i)>>
            <<set _availableEvents.push(_i)>>
        <</if>>
    <</for>>
    
    <<if _availableEvents.length>> <!-- If there are still available wheel and deal trading events -->
        <<set _randomEvent to _availableEvents.random()>>
        <<set $wharfsideWheelAndDealEventsRecord.triggeredEvents.push(_randomEvent)>>
    <</if>>
    
    <!-- Area Header -->
    <h2 id="titleHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="color: lightblue; font-weight: bold; font-size: 24px;">Wharfside Tech Emporium - Wheel and Deal</span></h2>
    <hr id="titleHr" style="margin-top: 5px; margin-bottom: 5px;">
    <h2 id="locationHeading" style="margin-top: 10px; margin-bottom: 10px;"><span style="font-size: 14px;"><<= $location.name >></span></h2>
    <hr id="locationHr" style="margin-top: 5px; margin-bottom: 5px;">
    <p>With an assortment of scrap, parts, and cyberware at your disposal, you dive into the bustling trade hall. It's a veritable treasure trove for a savvy dealer; you just need to find the right buyer to turn your collection into a windfall.</p>
    
    <!-- Random Wheel and Deal Trading Events -->
    <<switch _randomEvent>>
        <<case 1>> <!-- Profitable Trade-Up -->
            <!-- Outcome: Net gain of 180 value. Gains: +2 cyberware, +50 credits. Total value gain: 650. -->
            <<set $lowerdecksCyberware += 3>> <!-- +600 value (2 gained, 1 offset) -->
            <<set $player.credits += 50>> <!-- +50 value -->
            <p>Your keen eye and negotiation tactics lead to a profitable exchange. You trade in your scrap and parts for high-demand cyberware, and the trader, impressed by your items, tops off the deal with some credits.<span class="i-gain"> +2 Cyberware</span></p>
            <<creditchange 50 "positive">><br>
            
    
        <<case 2>> <!-- Balanced Bargain -->
            <!-- Outcome: Net gain of 180 value. Gains: +1 cyberware, +2 parts, +50 credits. Total value gain: 650. -->
            <<set $lowerdecksCyberware += 2>> <!-- +300 value (1 gained, 1 offset) -->
            <<set $lowerdecksParts += 3>> <!-- +300 value (2 gained, 1 offset) -->
            <<set $player.credits += 50>> <!-- +50 value -->
            <p>You find just the right buyers to strike a balanced bargain. Your scrap is exchanged for a valuable piece of cyberware and some much-needed parts, along with a bonus in credits for your effort.<span class="i-gain"> +1 Cyberware</span><span class="i-gain"> +2 Parts</span></p>
            <<creditchange 50 "positive">><br>
            
    
        <<case 3>> <!-- Surplus Success -->
            <!-- Outcome: Net gain of 180 value. Gains: +3 parts, +50 credits. Total value gain: 500. -->
            <<set $lowerdecksParts += 4>> <!-- +450 value (3 gained, 1 offset) -->
            <<set $player.credits += 50>> <!-- +50 value -->
            <p>The day's surplus sell-off works in your favor as you manage to secure a bundle of parts in exchange for your cyberware and scrap. The pile of credits you receive feels like a bonus at this point.<span class="i-gain"> +3 Parts</span></p>
            <<creditchange 50 "positive">><br>
            
    
        <<case 4>> <!-- Tech Tinkerer's Triumph -->
            <!-- Outcome: Net gain of 180 value. Gains: +2 cyberware, +1 parts. Total value gain: 750. -->
            <<set $lowerdecksCyberware += 3>> <!-- +600 value (2 gained, 1 offset) -->
            <<set $lowerdecksParts += 2>> <!-- +150 value (1 gained, 1 offset) -->
            <p>Your knack for spotting hidden gems in the tech bazaar pays off. A tinkerer's eyes light up at the scrap you offer, rewarding you with top-tier cyberware and a few extra parts.<span class="i-gain"> +2 Cyberware</span><span class="i-gain"> +1 Parts</span></p>
            <<creditchange 0 "positive">><br> <!-- No credit change, but using macro for consistency -->
            
    
        <<case 5>> <!-- Scrapper's Luck -->
            <!-- Outcome: Net gain of 180 value. Gains: +3 parts, +1 scrap. Total value gain: 600. -->
            <<set $lowerdecksParts += 4>> <!-- +450 value (3 gained, 1 offset) -->
            <<set $lowerdecksScrap += 2>> <!-- +50 value (1 gained, 1 offset) -->
            <p>Luck is on your side as you trade cyberware for a heap of useful parts. A scrapper, impressed with your haggling, throws in a bit of extra scrap to seal the deal.<span class="i-gain"> +3 Parts</span><span class="i-gain"> +1 Scrap</span></p>
            <<creditchange 0 "positive">><br> <!-- No credit change, but using macro for consistency -->
            
    
        <<case 6>> <!-- Cybernetic Jackpot -->
            <!-- Outcome: Net gain of 180 value. Gains: +2 cyberware, +100 credits. Total value gain: 700. -->
            <<set $lowerdecksCyberware += 3>> <!-- +600 value (2 gained, 1 offset) -->
            <<set $player.credits += 100>> <!-- +100 value -->
            <p>The cyberware market is booming, and you ride the wave to a jackpot. You exchange parts and scrap for advanced cybernetics and a tidy sum of credits.<span class="i-gain"> +2 Cyberware</span></p>
            <<creditchange 100 "positive">><br>
            
    
        <<case 7>> <!-- Parts Procurement Prowess -->
            <!-- Outcome: Net gain of approximately 300 value. Gains: +4 parts, +100 credits. Total value gain: 700. -->
            <<set $lowerdecksParts += 5>> <!-- +600 value (4 gained, 1 offset) -->
            <<set $player.credits += 100>> <!-- +100 value -->
            <p>Your parts procurement prowess is unmatched today. A sequence of favorable exchanges leaves you with an abundance of high-quality parts and a wallet that's pleasantly heavier.<span class="i-gain"> +4 Parts</span></p>
            <<creditchange 100 "positive">><br>
            
    
        <<case 8>> <!-- Scrapyard Fortune -->
            <!-- Outcome: Net gain of approximately 300 value. Gains: +1 cyberware, +2 scrap, +1 parts, +100 credits. Total value gain: 800. -->
            <<set $lowerdecksCyberware += 2>> <!-- +300 value (1 gained, 1 offset) -->
            <<set $lowerdecksScrap += 3>> <!-- +100 value (2 gained, 1 offset) -->
            <<set $lowerdecksParts += 2>> <!-- +150 value (1 gained, 1 offset) -->
            <<set $player.credits += 100>> <!-- +100 value -->
            <p>A visit to the scrapyard turns into an unexpected fortune. You parlay your wares into a selection that includes a piece of top-notch cyberware, extra scrap, and parts, rounded off with a hefty sum of credits.<span class="i-gain"> +1 Cyberware</span><span class="i-gain"> +2 Scrap</span><span class="i-gain"> +1 Parts</span></p>
            <<creditchange 100 "positive">><br>
            
    
        <<case 9>> <!-- Grand Haul -->
            <!-- Outcome: Net gain of approximately 400 value. Gains: +4 cyberware, +50 credits. Total value gain: 1250. -->
            <<set $lowerdecksCyberware += 5>> <!-- +1200 value (4 gained, 1 offset) -->
            <<set $player.credits += 50>> <!-- +50 value -->
            <p>Your shrewd bargaining at the cyberware stall pays off handsomely. You trade your less valuable items for a set of premium cybernetic enhancements, and the grateful vendor slips you a bonus in credits for choosing their shop.<span class="i-gain"> +4 Cyberware</span></p>
            <<creditchange 50 "positive">><br>
            
    
        <<case 10>> <!-- Master Merchant -->
            <!-- Outcome: Net gain of approximately 400 value. Gains: +3 parts, +2 cyberware, +100 credits. Total value gain: 1100. -->
            <<set $lowerdecksParts += 4>> <!-- +600 value (3 gained, 1 offset) -->
            <<set $lowerdecksCyberware += 3>> <!-- +600 value (2 gained, 1 offset) -->
            <<set $player.credits += 100>> <!-- +100 value -->
            <p>Today you're the master merchant, turning each offer to your advantage. You leave the market with a surplus of sought-after parts and some impressive cyberware, along with a hefty extra in credits.<span class="i-gain"> +3 Parts</span><span class="i-gain"> +2 Cyberware</span></p>
            <<creditchange 100 "positive">><br>
            
    
        <<case 11>> <!-- Scrap to Riches -->
            <!-- Outcome: Net gain of approximately 400 value. Gains: +4 parts, +2 scrap, +100 credits. Total value gain: 1000. -->
            <<set $lowerdecksParts += 5>> <!-- +750 value (4 gained, 1 offset) -->
            <<set $lowerdecksScrap += 3>> <!-- +100 value (2 gained, 1 offset) -->
            <<set $player.credits += 100>> <!-- +100 value -->
            <p>A stroke of luck turns your pile of scrap into a treasure trove. You swap it for a large quantity of high-quality parts and more scrap, and the deal is sweetened with credits to boot.<span class="i-gain"> +4 Parts</span><span class="i-gain"> +2 Scrap</span></p>
            <<creditchange 100 "positive">><br>
            
    
        <<default>> <!-- Even-Steven Exchange -->
            <!-- Outcome: Net gain of 180 value. Gains: +1 cyberware, +1 parts, +100 credits. Total value gain: 600. -->
            <<set $lowerdecksCyberware += 2>> <!-- +300 value (1 gained, 1 offset) -->
            <<set $lowerdecksParts += 2>> <!-- +150 value (1 gained, 1 offset) -->
            <<set $player.credits += 100>> <!-- +100 value -->
            <p>You play it safe and opt for an even-steven exchange. Each item finds a new owner, and you walk away with a more valuable selection and a satisfying amount of credits to boot.<span class="i-gain"> +1 Cyberware</span><span class="i-gain"> +1 Parts</span></p>
            <<creditchange 100 "positive">><br>
    <</switch>>
    <br>
    
    <!-- Continue Link -->
    [[Return to navigating the Wharfside Tech Emporium.|WharfsideTechEmporium]]
    <</nobr>>


:: awakening {"position":"500,175","size":"100,100"}
<!-- Version 4: Glowing Text with Stroke Shadows -->
<h1 style="font-size: 4em; text-align: center; color: #87cefa; text-shadow: 0 0 10px #87cefa, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000, 0px -2px 0 #000, 0px 2px 0 #000, -2px 0px 0 #000, 2px 0px 0 #000, 0px 0px 2px #000;">Awakening</h1>\
<<setBackground setup.ImagePath+'/locs/melt/mor1/lower/coldstorage.jpg'>>\
You awaken in a small, dimly lit room aboard a bustling starport. 

As your eyes adjust, the faint <span style="color: skyblue;">pulsating glow</span> of the sleek metal walls remind you of distant stars. You lay on a single metallic bench that rises from the floor and is the room's only furnishing. Through a small, circular window, you catch glimpses of the vastness of space and the dimly lit hull of the station outside.

Occasionally the flicker of a shuttle or other extravehicular activity sparkles in the dark.

As you sit up on the edge of the bench, dizziness takes you, and images of the world flow through your mind. You have a clear picture that the galactic economy is \
<<link "Flourishing">><<set $worldEconomy to "Flourishing">><<set $worldEconomyScore to 900>><<updatebar>><<replace "#economyState">><span style="color: green;">Flourishing</span><</replace>>\
<<replace "#lockerState">><span style="color: green;">immaculate, as if newly installed.</span><</replace>><</link>>, \
<<link "Stable">><<set $worldEconomy to "Stable">><<set $worldEconomyScore to 700>><<updatebar>><<replace "#economyState">><span style="color: lightgreen;">Stable</span><</replace>>\
<<replace "#lockerState">><span style="color: lightgreen;">showing signs of use but in good condition.</span><</replace>><</link>>, \
<<link "Struggling">><<set $worldEconomy to "Struggling">><<set $worldEconomyScore to 500>><<updatebar>><<replace "#economyState">><span style="color: orange;">Struggling</span><</replace>>\
<<replace "#lockerState">><span style="color: orange;">bearing scratches and signs of wear.</span><</replace>><</link>>, \
<<link "Crumbling">><<set $worldEconomy to "Crumbling">><<set $worldEconomyScore to 300>><<updatebar>><<replace "#economyState">><span style="color: red;">Crumbling</span><</replace>>\
<<replace "#lockerState">><span style="color: red;">tarnished, hinting at tough times.</span><</replace>><</link>>, or \
<<link "Collapsed">><<set $worldEconomy to "Collapsed">><<set $worldEconomyScore to 100>><<updatebar>><<replace "#economyState">><span style="color: darkred;">Collapsed</span><</replace>>\
<<replace "#lockerState">><span style="color: darkred;">broken and neglected.</span><</replace>><</link>>?

Above you, a network of pipes and conduits crisscrosses the ceiling, humming softly, carrying the lifeblood of the starport. The air is crisp and carries a sterile scent, hinting at advanced filtration systems. In one corner lies an array of lockers, their surfaces <span id="lockerState" style="color: lightgreen;">showing signs of use but in good condition.</span> You wonder how many have woken here before you. Each locker has a small digital keypad, glowing softly in the dim light.

When you glance back at the small porthole, the activity outside hints that the local economy's state is <span id="economyState" style="color: lightgreen;">Stable</span>.

Another series of images begins to assail you...

[[Close your eyes->Memories]]



:: blackmarketactivity [widget nobr] {"position":"1800,1075","size":"100,100"}
<<widget "blackmarketactivity">>
	<<if $lowerdeckBlackActivity < 0>>
    <<set $lowerdeckBlackActivity to 0>>
	<</if>>
    <<if $lowerdeckBlackActivity > 32000>>
        <<set $lowerdeckHeat = 8>>
        <p><span style="color: darkred;">You're a high-priority target now. Every deal is a risk, and you're sure that law enforcement is just waiting for you to slip up.</span></p>
    <<elseif $lowerdeckBlackActivity >= 16000>>
        <<set $lowerdeckHeat = 7>>
        <p><span style="color: red;">It's getting hot. You've had to dodge a few plainclothes officers who are clearly looking for someone.</span></p>
    <<elseif $lowerdeckBlackActivity >= 8000>>
        <<set $lowerdeckHeat = 6>>
        <p><span style="color: tomato;">There's no doubt about it, you're on the radar. You've seen drones lingering near your usual haunts.</span></p>
    <<elseif $lowerdeckBlackActivity >= 4000>>
        <<set $lowerdeckHeat = 5>>
        <p><span style="color: darkorange;">You've made quite a splash. Informants are likely keeping tabs on you now.</span></p>
    <<elseif $lowerdeckBlackActivity >= 2000>>
        <<set $lowerdeckHeat = 4>>
        <p><span style="color: orange;">Your name has come up in hushed conversations. You catch the occasional stare from someone who might be undercover.</span></p>
    <<elseif $lowerdeckBlackActivity >= 1000>>
        <<set $lowerdeckHeat = 3>>
        <p><span style="color: gold;">Whispers in the dark corners of the market suggest that law enforcement might be taking an interest.</span></p>
    <<elseif $lowerdeckBlackActivity >= 500>>
        <<set $lowerdeckHeat = 2>>
        <p><span style="color: yellow;">You're starting to get noticed. A few patrols seem to linger a bit longer than usual.</span></p>
    <<elseif $lowerdeckBlackActivity >= 100>>
        <<set $lowerdeckHeat = 1>>
        <p><span style="color: yellowgreen;">There's a slight buzz around your recent activities, but no overt interest from the authorities.</span></p>
    <<else>>
        <<set $lowerdeckHeat = 0>>
        <p><span style="color: green;">The market is calm, and there's no sign of law enforcement interest in your activities.</span></p>
    <</if>>
<</widget>>


:: changelist [noreturn] {"position":"625,25","size":"100,100"}
<<nobr>>
<div style="background-color: black; padding: 20px; border-radius: 10px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
    <h2 style="color: white; text-align: center; border-bottom: 2px solid #007bff; padding-bottom: 10px; margin-bottom: 20px;">Changelist</h2>

    <h3 style="color: #007bff;">V0.0025 Hotpatch</h3>
    <h4 style="color: white;">Moodchanges</h4>
    <ul style="margin-bottom: 20px;">
        <li>Redid mood change system, for more consistent moodlet effects.</li>
        <li>Fixed bugs reported in discord.</li>
        <li>Implemented black market penalty system.</li>
        <li>Law enforcement will be looking for you.</li>
        <li>Other criminals don't like competition. Keep your head down.</li>
        <li>Added TheGrafter conversation.</li>
        <li>Keyboard hotkeys added 1 2 3 4 etc</li>
        <li> You can now pay off your debt! ATM added to Lower Observation Deck</li>
        <li> Added view background button on left panel.</li>
        <li> Fixed debt event handler and day change handler. Again. </li>
        <li>Please report bugs on discord! https://discord.gg/BsZAt3u6cF </li>
    </ul>

    <h3 style="color: #007bff;">V0.0022 Hotpatch</h3>
    <h4 style="color: white;">Fix Haven Apartment signing bug:</h4>
    <ul style="margin-bottom: 20px;">
        <li>Fixed doubled text on character creation</li>
    </ul>

    <h3 style="color: #007bff;">V0.0021 Hotpatch</h3>
    <h4 style="color: white;">Fix Haven Apartment signing bug:</h4>
    <ul style="margin-bottom: 20px;">
        <li>Fixed purchasing the apartment conversation to set correct flag</li>
    </ul>

    <h3 style="color: #007bff;">V0.002</h3>
    <h4 style="color: white;">Time and Needs Mechanics:</h4>
    <ul style="margin-bottom: 20px;">
        <li>Time progresses as you engage in activities and move around.</li>
        <li>Similar to The Sims, your needs decay over time and must be managed.</li>
    </ul>
    
    <h4 style="color: white;">Updates and Additions:</h4>
<ul style="margin-bottom: 20px;">
    <li>Added right side bar widget.</li>
    <li>Did planning on stuff.</li>
    <li>Added consumable biometric boosters player can use via Personal Management -> Consumables.</li>
    <li>Worked on KO screen.</li>
    <li>Fixed day changes.</li>
    <li>Fixed lots of random broken things.</li>
    <li>Added Jax the NPC to help get bearings.</li>
    <li>Implemented all lower deck areas but observation deck and slums.</li>
</ul>

<h4 style="color: white;">Did Not Make It This Version:</h4>
<ul style="margin-bottom: 20px;">
    <li>Hostile NPC to add tension.</li>
    <li>Combat system.</li>
    <li>More NPCs and main questline starts.</li>
    <li>Reputation.</li>
    <li>Journal.</li>
    <li>Business management.</li>
    <li>Still need to develop and refine systems while in lower deck before expanding the world or there will be massive amounts to redo later when they are refined.</li>
</ul>

    <h4 style="color: white;">Employment Opportunities:</h4>
    <ul style="margin-bottom: 20px;">
        <li>Basic jobs (e.g., bar, noodle stand) are available throughout the game, offering a modest credit income.</li>
        <li>Scrap collection jobs allow for gathering materials to sell or trade at parts dealers.</li>
    </ul>

    <h4 style="color: white;">Storage Locker System:</h4>
    <ul style="margin-bottom: 20px;">
        <li>Players can purchase abandoned storage lockers to find items and resources.</li>
        <li>Discover synergies, such as certain shops offering better prices for specific items like cyberware.</li>
        <li>Illegal items found in lockers can be sold at black markets for higher profits but increase the risk level.</li>
    </ul>

    <h4 style="color: white;">Black Market Mechanics:</h4>
<ul style="margin-bottom: 20px;">
    <li>Selling illegal items boosts the black market score, escalating danger levels and attracting attention.</li>
</ul>

<h4 style="color: white;">Housing and Rest:</h4>
<ul style="margin-bottom: 20px;">
    <li>Players can unlock and rent apartments for improved rest and recovery.</li>
</ul>

<h4 style="color: white;">Fabricator Feature:</h4>
<ul style="margin-bottom: 20px;">
    <li>Upon earning enough money and acquiring a license, players can use the fabricator to convert scrap into parts over time.</li>
    <li>Mini upgrade system available through the installation of cyberware.</li>
</ul>

<h4 style="color: white;">Contribution to the Economy:</h4>
<ul style="margin-bottom: 20px;">
    <li>Parts can be donated or used in engineering jobs to enhance the game's economy score.</li>
</ul>

<h4 style="color: white;">Daily Reports:</h4>
<ul style="margin-bottom: 20px;">
    <li>Each day ends with a report detailing changes in the player's credits and debt.</li>
</ul>

<h4 style="color: white;">Collapse System:</h4>
<ul style="margin-bottom: 20px;">
    <li>Players collapsing from unmet needs are sent to a default slum house or their apartment, if owned.</li>
</ul>

    <h3 style="color: #007bff;">V0.001</h3>
    <ul style="margin-bottom: 20px;">
        <li>Basic Navigation for Lower Deck setup</li>
        <li>Intro done</li>
    </ul>
</div>
<</nobr>>


:: defaultKO [event] {"position":"1475,1075","size":"100,100"}
ERROR
This KO room doesn't exist
Report to the developer!
Redirect to lowerdeckKO
[[Knocked out.|lowerdeckKO]]


:: eventHandler [nobr event noreturn] {"position":"1100,325","size":"100,100"}
<!-- poi to travel node eventHandler -->
<<script>>
    console.log("poi to travel node eventHandler fired.");
<</script>>

<!-- Store the original continuation path in $nextPassage -->
<<set $nextPassage to State.variables.continue>> 

<!-- Retrieve the last event time -->
<<set $lastEventTime to State.variables.lastEventTime or 0>> 

<!-- Get the current time -->
<<set $currentTime to State.temporary.now>>

<!-- Calculate time since last event -->
<<set $timeSinceLastEvent to $currentTime - $lastEventTime>> 

<!-- Check if the player has negative credits and redirect to the debt event -->
<<if $player.credits < 0>> 
    <<goto "DebtEvent">>
<<elseif $player.debt <= 0>> 
    <<goto "DebtFreeEvent">>
<<elseif $someStoryFlag>> 
    <<goto "StorySpecificEvent">>
<<elseif $anotherStoryFlag>> 
    <<goto "AnotherStorySpecificEvent">>
<<elseif $currentArea is "lowerdecks">>
    <<set _randomChance to random(1, 3)>>
    <<if $lowerdeckHeat >= 10 or ($lowerdeckHeat >= 2 and _randomChance <= $lowerdeckHeat - 1)>>
        <<script>>
            console.log("lowerdecks criminal event fired.");
        <</script>>
        <<set _randomEvent to random(1, 2)>>
        <<if _randomEvent == 1>>
            <<goto "LDBMpoliceaction">>
         <<else>>
            <<goto "LDBMcriminalaction">>
         <</if>>
    
    <<else>>
        <<script>>
            console.log("criminal event fired not enough rnd.");
        <</script>>
        <<goto $nextPassage>>
    <</if>>
<<else>> 
    <<script>>
        console.log("default move.");
    <</script>>
    <<goto $nextPassage>>
<</if>>


:: holder {"position":"875,175","size":"100,100"}
<<widget "mapWidget">><<nobr>>
<<set _imagePath = $args[0]>>
<<set $showMap to $args[1] isnot undefined ? $args[1] : true>> <!-- Initialize or use the passed state -->
<hr>
<<link "Toggle Map">>\
    <<set $showMap = not $showMap>>\
    <<replace "#map-image-container">>\
        <<if $showMap>>\
            <<print '<img src="' + _imagePath + '" id="map-image" />'>>\
        <</if>>\
    <</replace>>
<</link>>
<div id="map-widget-header">
    <<cycle "$showMap">>
        <<option "Hide Map" false>>
        <<option "Show Map" true>>
    <</cycle>>
</div>

<div id="map-image-container">
    <<if $showMap>>\
        <<print '<img src="' + _imagePath + '" id="map-image" />'>>\
    <</if>>
</div>
<hr>

<</nobr>><</widget>>


:: koloss [widget nobr] {"position":"1300,1200","size":"100,100"}
<<widget "koloss">><<nobr>>
    /* Calculate the combined difficulty score */
    <<set $combinedDifficultyScore to ((2000 - $worldEconomyScore - $dangerLevelScore) / 20)>>
    <<set _maxPercentageLoss = 50>> /* Maximum percentage loss */
    <<set _maxFixedLoss = 5000>> /* Maximum fixed loss */
    
    /* Determine the percentage loss based on difficulty */
    <<set _percentageLoss = Math.min(_maxPercentageLoss, $combinedDifficultyScore)>>
    
    /* Determine the fixed loss based on difficulty */
    <<set _fixedLoss = Math.min(_maxFixedLoss, Math.floor($combinedDifficultyScore * 250))>>

    /* Ensure fixed loss is at least 10 credits */
    <<set _fixedLoss = Math.max(10, _fixedLoss)>>

    /* Calculate the total amount of credits to lose */
    <<set _totalLoss = Math.floor($player.credits * (_percentageLoss / 100)) + _fixedLoss>>

    /* Apply the total loss */
    <<set $player.credits -= _totalLoss>>

    /* Display the loss */
    <p style="color: red;">You have lost <span style="font-weight: bold;"><<= _totalLoss.toLocaleString("en-US")>> Cr.</span> due to the challenging conditions.</p>
<</nobr>>
<</widget>>


:: lowerdeckKO [event] {"position":"1300,1300","size":"100,100"}
<<nobr>>
<<capture _lowestStat _triggeredStat>>
    <<set _lowestStat to "health">>
    <<set _triggeredStat to $player[_lowestStat]>>
    <<script>>
        // Initialize player stats if not already done
        if (typeof $player === "undefined") {
            $player = { health: 100, mood: 100, stress: 100, trauma: 100, fatigue: 100, filth: 100 };
        }

        var statPriority = ["health", "mood", "stress", "trauma", "fatigue", "filth"];

        statPriority.forEach(function(stat) {
            if ($player[stat] < _triggeredStat || ($player[stat] === _triggeredStat && statPriority.indexOf(stat) < statPriority.indexOf(_lowestStat))) {
                _triggeredStat = $player[stat];
                _lowestStat = stat;
            }
        });
    <</script>>



<!-- Ensure the switch statement is within the capture block -->
<<switch _lowestStat>>
/* Updated case for health with comments */
<<case "health">>
    /* High danger level: Imply severe consequences with darkred to signify critical health. */
    <<if $dangerLevelScore <= 300>>
        <p>The relentless pace of the Lower Decks has taken its toll. You feel a <span style="color: darkred;">sharp pain</span> and your vision narrows. Panic sets in as the corridor spins and you <span style="color: darkred;">crumple</span> to the ground, unnoticed.</p>
<<koloss>>

    /* Moderate danger level: Use darkorange to indicate serious but less dire health issues. */
    <<elseif $dangerLevelScore > 300 and $dangerLevelScore <= 700>>
        <p>Your body protests the constant strain with a <span style="color: darkorange;">debilitating weakness</span>. The bustle of the station blurs into a dizzying whirl as you <span style="color: darkorange;">stagger</span> and fall, the clamor of commerce fading away.</p>
<<koloss>>

    /* Low danger level: Yellow signifies caution as the player faces a health setback in a safer area. */
    <<else>>
        <p>The safer corridors of the station offer no sanctuary from your body's exhaustion. A <span style="color: yellow;">dizzy spell</span> forces you to grasp at the wall for support, but it's not enough to stop the encroaching <span style="color: yellow;">darkness</span>.</p>
<<koloss>>
    <</if>>

/* Updated case for mood with comments */
<<case "mood">>
    /* High danger level: Darkred signifies a severe mental breakdown due to low mood. */
    <<if $dangerLevelScore <= 300>>
        <p>Despair grips you tightly, and you sink to the floor, a <span style="color: darkred;">torrent of emotion</span> washing over you. Your sobs are lost in the cacophony of the station's heartless rhythm.</p>
<<koloss>>

    /* Moderate danger level: Darkorange indicates a distressing emotional state, with significant impact. */
    <<elseif $dangerLevelScore > 300 and $dangerLevelScore <= 700>>
        <p>You feel a crushing <span style="color: darkorange;">loneliness</span> even in the crowd. Your spirit <span style="color: darkorange;">falters</span>, and you slump against a bulkhead, trying to find solace amid the station's indifference.</p>
<<koloss>>

    /* Low danger level: Yellow implies a less severe but still concerning mood-related breakdown. */
    <<else>>
        <p>The station's ambient hum becomes a backdrop to your <span style="color: yellow;">growing despondency</span>. Sliding down the wall, you wrap your arms around yourself, seeking comfort in the <span style="color: yellow;">solitude</span>.</p>
<<koloss>>
    <</if>>

/* Remaining cases with similar updates can be crafted following this pattern, ensuring the text is meaningful and the severity is indicated through color coding. Comments will guide the narrative and gameplay implications without specifying the wake-up location. */

/* Updated case for stress with comments */
<<case "stress">>
    /* High danger level: Darkred indicates a severe mental breakdown due to overwhelming stress. */
    <<if $dangerLevelScore <= 300>>
        <p>The station's relentless demands shatter your composure. A <span style="color: darkred;">scream</span> tears from your throat, raw and pained, as you succumb to the <span style="color: darkred;">pressure</span>. Your last conscious memory is of falling through a sea of uncaring faces.</p>
<<koloss>>

    /* Moderate danger level: Darkorange represents a significant stress-induced incident but not as life-threatening. */
    <<elseif $dangerLevelScore > 300 and $dangerLevelScore <= 700>>
        <p>Your mind races as the station's pace overwhelms you. You find yourself trembling, <span style="color: darkorange;">overwhelmed</span> by the unending noise and movement until everything fades to <span style="color: darkorange;">silence</span>.</p>
<<koloss>>

    /* Low danger level: Yellow color signifies a stressful episode that is concerning but less dangerous. */
    <<else>>
        <p>In a quieter sector of the station, the stress still finds you, coiling around your thoughts. You <span style="color: yellow;">pause</span>, leaning on a wall for support as your surroundings <span style="color: yellow;">blur</span> into insignificance.</p>
<<koloss>>
    <</if>>

/* Updated case for trauma with comments */
<<case "trauma">>
    /* High danger level: Darkred signifies the intense psychological impact of past trauma resurfacing. */
    <<if $dangerLevelScore <= 300>>
        <p>Memories of past horrors ambush your mind, leaving you <span style="color: darkred;">frozen</span> in a crowded passageway. Your body is there, but your mind is trapped in the past, until you sink into darkness.</p>
<<koloss>>

    /* Moderate danger level: Darkorange indicates a significant but not life-threatening traumatic experience. */
    <<elseif $dangerLevelScore > 300 and $dangerLevelScore <= 700>>
        <p>A sudden flashback hits you like a physical blow. You stumble, your breath <span style="color: darkorange;">catching</span> in your chest as the station's reality <span style="color: darkorange;">fades away</span> under the weight of your past.</p>
<<koloss>>

    /* Low danger level: Yellow implies a distressing but manageable encounter with trauma. */
    <<else>>
        <p>A seemingly mundane trigger sends you spiraling into a <span style="color: yellow;">reverie of fear</span>. You clutch at your head, trying to keep the present in focus as the echoes of old scars <span style="color: yellow;">whisper</span> to you.</p>
<<koloss>>
    <</if>>

/* Updated case for fatigue with comments */
<<case "fatigue">>
    /* High danger level: Darkred coloration indicates a critical level of exhaustion. */
    <<if $dangerLevelScore <= 300>>
        <p>The harsh environment takes its final toll as your body <span style="color: darkred;">gives out</span>. The last drops of your energy are spent, and you <span style="color: darkred;">collapse</span> without a sound, the station's dangers looming over your prone form.</p>
<<koloss>>

    /* Moderate danger level: Darkorange suggests a serious but not immediately life-threatening level of fatigue. */
    <<elseif $dangerLevelScore > 300 and $dangerLevelScore <= 700>>
        <p>You've been running on empty for too long, and it catches up with you. A wave of <span style="color: darkorange;">exhaustion</span> sweeps over you, and your knees buckle. The ground rushes up to meet you as you <span style="color: darkorange;">faint</span>.</p>
<<koloss>>

    /* Low danger level: Yellow signifies a significant but less severe episode of fatigue. */
    <<else>>
        <p>The quieter corridors offer no respite from the <span style="color: yellow;">weariness</span> that has seeped into your bones. You slow to a stop, your energy sapped, and you <span style="color: yellow;">lean heavily</span> against a wall, hoping for a brief moment of rest.</p>
<<koloss>>
    <</if>>

/* Updated case for filth with comments */
<<case "filth">>
    /* High danger level: Darkred highlights the extreme consequences of severe neglect. */
    <<if $dangerLevelScore <= 300>>
        <p>The grime and stench of the Lower Decks cling to you, a <span style="color: darkred;">tangible shroud</span> that isolates you. As others recoil, you're left <span style="color: darkred;">alone</span> and exposed, a target for any who prey on the weak.</p>
<<koloss>>
    <<elseif $dangerLevelScore > 300 and $dangerLevelScore <= 700>>
        <p>The station's residents give you a <span style="color: darkorange;">wide berth</span> as your unkempt state becomes impossible to ignore. You feel the weight of their <span style="color: darkorange;">stares</span> as much as the dirt that cakes your skin, and you can't help but feel <span style="color: darkorange;">diminished</span>.</p>
<<koloss>>
    <<else>>
        <p>Even in the cleaner areas of the station, your <span style="color: yellow;">neglected hygiene</span> draws unwanted attention. You find yourself <span style="color: yellow;">avoided</span>, the isolation a stark reminder that appearances matter, even here.</p>
<<koloss>>
    <</if>>

/* Updated default case with comments */
<<case "default">>
    /* Unexpected default case: Use of darkred to signify a severe and unintended game state. */
    /* This is a catch-all scenario indicating something has gone wrong, such as an unhandled state or error. */
    <p><span style="color: darkred;">Confusion</span> clouds your thoughts as the world around you seems to <span style="color: darkred;">warp and twist</span>. Something isn't right. You struggle to maintain consciousness, but the effort is too much, and everything slips away into darkness.</p>
<<koloss>>
<</switch>><</capture>>

<!--
    Random Redirect to Cold Storage or Apartment:
    This conditional block determines where the player ends up after a breakdown.
    If the player has signed for the apartment, they will find their way back there.
    Otherwise, they come to in Cold Storage.
    This decision is based on the $HavenApartmentState variable.
-->
<</nobr>>

<<set $player.health = Math.min($player.health + 150, 1000)>>
<<set $player.mood = Math.min($player.mood + 150, 1000)>>
<<set $player.stress = Math.min($player.stress - 150, 1000)>>
<<set $player.trauma = Math.min($player.trauma - 150, 1000)>>
<<set $player.fatigue = Math.min($player.fatigue - 150, 1000)>>
<<set $player.filth = Math.min($player.filth - 150, 1000)>>
<<set $breakdown = false>>

<<if $HavenApartmentState is "signed">>
    [[You somehow find your way back to your apartment.|HabitationApartment]]
<<else>>
    [[You come to in Cold Storage, unsure how you got there.|Cold Storage]]
<</if>>




:: main menu {"position":"1450,50","size":"100,100"}
<<changemoods "stress" "major" "NegEffectOnPlayer">> /* -- Stress (red) */

/* Health */
<<changemoods "health" "major" "PosEffectOnPlayer">> /* ++ Health (green) */
<<changemoods "health" "major" "NegEffectOnPlayer">> /* -- Health (red) */
<<changemoods "health" "minor" "PosEffectOnPlayer">> /* + Health (lightgreen) */
<<changemoods "health" "minor" "NegEffectOnPlayer">> /* - Health (yellow) */

/* Mood */
<<changemoods "mood" "major" "PosEffectOnPlayer">> /* ++ Mood (green) */
<<changemoods "mood" "major" "NegEffectOnPlayer">> /* -- Mood (red) */
<<changemoods "mood" "minor" "PosEffectOnPlayer">> /* + Mood (lightgreen) */
<<changemoods "mood" "minor" "NegEffectOnPlayer">> /* - Mood (yellow) */

/* Stress */
<<changemoods "stress" "major" "PosEffectOnPlayer">> /* ++ Stress (green) */
<<changemoods "stress" "major" "NegEffectOnPlayer">> /* -- Stress (red) */
<<changemoods "stress" "minor" "PosEffectOnPlayer">> /* + Stress (lightgreen) */
<<changemoods "stress" "minor" "NegEffectOnPlayer">> /* - Stress (yellow) */

/* Trauma */
<<changemoods "trauma" "major" "PosEffectOnPlayer">> /* ++ Trauma (green) */
<<changemoods "trauma" "major" "NegEffectOnPlayer">> /* -- Trauma (red) */
<<changemoods "trauma" "minor" "PosEffectOnPlayer">> /* + Trauma (lightgreen) */
<<changemoods "trauma" "minor" "NegEffectOnPlayer">> /* - Trauma (yellow) */

/* Fatigue */
<<changemoods "fatigue" "major" "PosEffectOnPlayer">> /* ++ Fatigue (green) */
<<changemoods "fatigue" "major" "NegEffectOnPlayer">> /* -- Fatigue (red) */
<<changemoods "fatigue" "minor" "PosEffectOnPlayer">> /* + Fatigue (lightgreen) */
<<changemoods "fatigue" "minor" "NegEffectOnPlayer">> /* - Fatigue (yellow) */

/* Filth */
<<changemoods "filth" "major" "PosEffectOnPlayer">> /* ++ Filth (green) */
<<changemoods "filth" "major" "NegEffectOnPlayer">> /* -- Filth (red) */
<<changemoods "filth" "minor" "PosEffectOnPlayer">> /* + Filth (lightgreen) */
<<changemoods "filth" "minor" "NegEffectOnPlayer">> /* - Filth (yellow) */

/* Power Reserves */
<<changemoods "powerReserves" "major" "PosEffectOnPlayer">> /* ++ Power Reserves (green) */
<<changemoods "powerReserves" "major" "NegEffectOnPlayer">> /* -- Power Reserves (red) */
<<changemoods "powerReserves" "minor" "PosEffectOnPlayer">> /* + Power Reserves (lightgreen) */
<<changemoods "powerReserves" "minor" "NegEffectOnPlayer">> /* - Power Reserves (yellow) */

/* Example usage for creditchange */
<<set $player.credits += 100>> /* Adjust the player's credits. */
<<creditchange 100 "positive">> /* Display the credit change. */

/* Example usage for debtchange */
<<set $player.debt += 200>> /* Adjust the player's debt. */
<<debtchange 200 "negative">> /* Display the debt change. */



        <p>You've managed to acquire some cutting-edge cyberware. The seller assures you it's top of the line, and the price reflects it. <span style="color: green;">+1 Cyberware</span></p>
        <<set $player.credits += 25>>
        <<creditchange 25 "positive">>
        <<set $lowerdeckBlackActivity += 325>>
        <<set $lowerdecksCyberware += 1>>


        <p>A seller offers you a bulk deal on some slightly outdated, but still valuable, cyberware. It's a bargain too good to pass up. <span style="color: green;">+2 Cyberware</span></p>
        <<set $player.credits += 50>>
        <<creditchange 50 "positive">>
        <<set $lowerdeckBlackActivity += 650>>
        <<set $lowerdecksCyberware += 2>>

 
        <p>You find a deal on last season's model. It may not be the latest, but it'll turn a profit. <span style="color: green;">+1 Cyberware</span></p>
        <<set $player.credits += 30>>
        <<creditchange 30 "positive">>
        <<set $lowerdeckBlackActivity += 330>>
        <<set $lowerdecksCyberware += 1>>

 
        <p>An eccentric tinkerer sells you some experimental tech. It's untested, but if it works, it could be worth a fortune. <span style="color: green;">+1 Cyberware</span></p>
        <<set $player.credits += 45>>
        <<creditchange 45 "positive">>
        <<set $lowerdeckBlackActivity += 345>>
        <<set $lowerdecksCyberware += 1>>

    
        <p>You've acquired cyberware that's currently in high demand. The price is steep, but so is the potential markup. <span style="color: green;">+1 Cyberware</span></p>
        <<set $player.credits += 40>>
        <<creditchange 40 "positive">>
        <<set $lowerdeckBlackActivity += 340>>
        <<set $lowerdecksCyberware += 1>>

 
        <p>You take a chance on some refurbished units. They're a bit of a gamble, but the low price makes it worth the risk. <span style="color: green;">+2 Cyberware</span></p>
        <<set $player.credits += 35>>
        <<creditchange 35 "positive">>
        <<set $lowerdeckBlackActivity += 635>>
        <<set $lowerdecksCyberware += 2>>


        <p>The cyberware is hot, and the seller is looking to offload it fast. You take it off their hands for a song. <span style="color: green;">+2 Cyberware</span></p>
        <<set $player.credits += 25>>
        <<creditchange 25 "positive">>
        <<set $lowerdeckBlackActivity += 625>>
        <<set $lowerdecksCyberware += 2>>


        <p>You stumble upon a rare piece of cyberware. It's an older model, but a collector's item nonetheless. <span style="color: green;">+1 Cyberware</span></p>
        <<set $player.credits += 50>>
        <<creditchange 50 "positive">>
        <<set $lowerdeckBlackActivity += 350>>
        <<set $lowerdecksCyberware += 1>>


        <p>A vendor is clearing out surplus stock. The cyberware is standard, but the price is unbeatable. <span style="color: green;">+2 Cyberware</span></p>
        <<set $player.credits += 45>>
        <<creditchange 45 "positive">>
        <<set $lowerdeckBlackActivity += 645>>
        <<set $lowerdecksCyberware += 2>>

 
        <p>The cyberware looks a bit questionable, but the seller is persuasive. You decide to take a chance on it. <span style="color: yellow;">+1 Cyberware</span></p>
        <<set $player.credits += 25>>
        <<creditchange 25 "positive">>
        <<set $lowerdeckBlackActivity += 325>>
        <<set $lowerdecksCyberware += 1>>


        <p>You make a standard purchase. Nothing fancy, but it'll do the job. <span style="color: green;">+1 Cyberware</span></p>
        <<set $player.credits += 30>>
        <<creditchange 30 "positive">>
        <<set $lowerdeckBlackActivity += 330>>
        <<set $lowerdecksCyberware += 1>>





:: middeckKO {"position":"2450,2150","size":"100,100"}



:: open [splash1] {"position":"475,550","size":"100,100"}
<span id="revealButton"><<button "Start">>
    <<replace "#hiddenContent">><<goto "Start">><</replace>>
    <<run $("#revealButton").remove()>>
<</button>></span><<setBackground setup.ImagePath+'/splash.jpg'>>
<!-- This is the button that the player will click. When clicked, it will disappear and reveal the hidden content. -->
<!-- This is the hidden block that will be replaced with the included passage content. Initially, it's empty. -->
<span id="hiddenContent"></span>
<!-- This is the button's container which will be removed after the button is clicked. -->


<div class="passage">
    <span style="display: block; text-align: left; transform: translateX(-250%); max-width: 50%;">
        NOTICE: Save games are likely to cause issues or crashes if they are from a previous version.
    </span>
</div>






:: upperdeckKO {"position":"2575,2000","size":"100,100"}



:: widget Appearance [widget nobr] {"position":"175,375","size":"100,100"}
<<widget "appearance">><<silently>>
   <<set $hairColorDesc = ["black", "blonde", "red", "brown", "silver"][$player.hairColor - 1]>>
   <<set $hairColorStyle = ["Gray", "Gold", "Red", "Brown", "Silver"][$player.hairColor - 1]>>

   <<set $hairLengthDesc = ["short", "medium-length", "long", "nearly shaved"][$player.hairLength - 1]>>
   <<set $hairLengthStyle = ["Gray", "LightGray", "DarkGray", "Gainsboro"][$player.hairLength - 1]>>

   <<set $eyeColorDesc = ["blue", "green", "brown", "hazel", "gray"][$player.eyeColor - 1]>>
   <<set $eyeColorStyle = ["Blue", "Green", "Brown", "Khaki", "Gray"][$player.eyeColor - 1]>>

   <<set $skinColorDesc = ["light", "olive", "tan", "brown", "dark"][$player.skinColor - 1]>>
   <<set $skinColorStyle = ["PeachPuff", "Moccasin", "Tan", "SaddleBrown", "DarkOliveGreen"][$player.skinColor - 1]>>

   <<set $buildDesc = ["slender and toned", "muscular and ripped", "average and moderately toned", "stocky and bulky", "slender and soft", "athletic and fit"][$player.build - 1]>>
   <<set $buildStyle = ["LightGreen", "ForestGreen", "LimeGreen", "OliveDrab", "Gray", "SteelBlue"][$player.build - 1]>>

   <<set $heightDesc = ["short", "average height", "tall"][$player.height - 1]>>
   <<set $heightStyle = ["LightPink", "Khaki", "LightSkyBlue"][$player.height - 1]>>

   <<set $distinctiveFeatureDesc = ["freckles", "a scar", "a birthmark", "clear skin"][$player.distinctiveFeature - 1]>>
   <<set $distinctiveFeatureStyle = ["Gold", "Tomato", "Sienna", "LemonChiffon"][$player.distinctiveFeature - 1]>>

   <<set $appearanceDesc = ["rugged", "elegant", "youthful", "weathered"][$player.appearance - 1]>>
   <<set $appearanceStyle = ["Brown", "MediumPurple", "HotPink", "Tan"][$player.appearance - 1]>>
<</silently>><</widget>>



:: widget BackgroundImg [widget nobr] {"position":"50,275","size":"100,100"}
<<widget "setBackground">><<silently>>
   /* Remove previous background and overlay */
   <<run $('.custom-background, .background-overlay').remove()>>
   /* Create a new div for the background */
   <<run $('<div class="custom-background"></div>').prependTo('body').css({
       "position": "fixed",
       "top": "0",
       "left": "0",
       "right": "0",
       "bottom": "0",
       "z-index": "-2",
       "background-image": "url(" + $args[0] + ")",
       "background-size": "cover",
       "background-position": "center center"
   })>>
   /* Add dimming overlay */
   <<run $('<div class="background-overlay"></div>').prependTo('body').css({
       "position": "fixed",
       "top": "0",
       "left": "0",
       "right": "0",
       "bottom": "0",
       "z-index": "-1",
       "background-color": "rgba(25, 25, 25, 0.75)" /* Adjust opacity for dimming */
   })>>
<</silently>><</widget>>


:: widget Map [widget nobr] {"position":"50,75","size":"100,100"}
<<widget "mapWidget">>
<<nobr>>
    <<set _mapWidgetImagePath = $args[0]>>
    <<set $showMap to $args[1] isnot undefined ? $args[1] : true>>

    /* Toggle Map Link */
    <<link "Toggle Map">>\
        <<set $showMap = not $showMap>>\
        <<replace "#map-image-container">>\
            <<if $showMap>>\
                <<print '<img src="' + _mapWidgetImagePath + '" id="map-image" />'>>\
            <</if>>\
        <</replace>>
    <</link>>

    /* Map Widget Header */
    <div id="map-widget-header">
        <<cycle "$showMap">>\
            <<option "Hide Map" false>>\
            <<option "Show Map" true>>\
        <</cycle>>
    </div>

    /* Map Image Container */
    <div id="map-image-container">
        <<if $showMap>>\
            <<print '<img src="' + _mapWidgetImagePath + '" id="map-image" />'>>\
        <</if>>
    </div>
<</nobr>>
<hr>
<</widget>>


:: widget PlayerPortrait [widget nobr] {"position":"50,375","size":"100,100"}
<<widget "playerp">><<silently>><<nobr>>
<<if $player.gender == 1>>
<<set $playerP = "playerM">>
<<elseif $player.gender == 2>>
<<set $playerP = "playerF">>
<<else>>
<<set $playerP = "playerN">>
<</if>>
<</nobr>><</silently>><</widget>>


:: widget Time [widget] {"position":"300,375","size":"100,100"}



/*
	Date & Time Advancement Widget Definitions
*/
/* Adds the specified number of minutes. */

/* Adds the specified number of hours. */
<<widget "addhours">>\
<<run $gameDate.setHours($gameDate.getHours() + $args[0])>>\
<</widget>>

/* Adds the specified number of days. */
<<widget "adddays">>\
<<run $gameDate.setHours($gameDate.getHours() + $args[0] * 24)>>\
<</widget>>

/* Adds the specified number of years. */
<<widget "addyears">>\
<<run $gameDate.setFullYear($gameDate.getFullYear() + $args[0])>>\
<</widget>>


/*
	Date & Time Printing Widget Definitions
*/
/* Prints the current date ("{weekday} {month} {day}, {year}"). */
<<widget "date">>\
<<print String.format("{0} {1} {2}, {3}",
	GameDays[$gameDate.getDay()],
	GameMonths[$gameDate.getMonth()],
	$gameDate.getDate(),
	$gameDate.getFullYear()
)>>\
<</widget>>

/* Prints the current time (12H). */
<<widget "time12hr">>\
<<if $gameDate.getHours() eq 0>>\
12\
<<elseif $gameDate.getHours() gt 12>>\
<<print $gameDate.getHours() - 12>>\
<<else>>\
<<print $gameDate.getHours()>>\
<</if>>:\
<<if $gameDate.getMinutes() lt 10>>0<</if>><<print $gameDate.getMinutes()>> \
<<if $gameDate.getHours() gte 12>>PM<<else>>AM<</if>>\
<</widget>>

/* Prints the current time (24H). */
<<widget "time24hr">>\
<<if $gameDate.getHours() lt 10>>0<</if>><<print $gameDate.getHours()>>:\
<<if $gameDate.getMinutes() lt 10>>0<</if>><<print $gameDate.getMinutes()>>\
<</widget>>

/* Prints the current date and time (12H). */
<<widget "datetime">><<date>> <<time12hr>> (<<time24hr>>)<</widget>>


:: widget addmins [widget nobr] {"position":"300,475","size":"100,100"}
<<widget "addmins">><<nobr>>
    /* Clone the current $gameDate for comparison */
    <<set _previousDate = new Date($gameDate.getTime())>>


    /* Add minutes to the game date */
    <<set $gameDate.setMinutes($gameDate.getMinutes() + $args[0])>>


    /* Call manageNeeds widget to adjust player's needs based on time */
    <<manageNeeds>>

    /* Call clamps widget to ensure all variables are within their defined ranges */
    <<clamps>>

    /* Check if a new day has started */
    <<if _previousDate.getDate() != $gameDate.getDate() or _previousDate.getMonth() != $gameDate.getMonth() or _previousDate.getFullYear() != $gameDate.getFullYear()>>
        <<set State.variables.newDay = true>>
    <</if>>

    <<autoFabricatorProcess>>

    <<set $timeadd to 0>>
<</nobr>><</widget>>



:: widget autoFabricatorProcess [widget nobr] {"position":"1675,725","size":"100,100"}
<<widget "autoFabricatorProcess">><<nobr>>
<<set _fabricatorInterval = 15 * 60>> <!-- Fabricator processes every 15 minutes (in seconds) -->
<<set _baseRate = 10>> <!-- Base rate: 10 scrap to 5 parts -->
<<set _basePartsProduced = 5>> <!-- Base parts produced per interval -->

<!-- Initialize or retrieve the accumulated time since the last processing -->
<<if $fabricatorAccumulatedTime === undefined>> <<set $fabricatorAccumulatedTime = 0>><</if>>
<<set $fabricatorAccumulatedTime += ($timeadd * 60)>> <!-- Convert $timeadd from minutes to seconds and add to the accumulated time -->

<!-- Deduct energy fees -->
<<set _energyCost = $timeadd>> <!-- 1 credit per minute -->
<<set _enoughEnergy = $lowerdecksEnergyFeeCredits >= _energyCost>>

<<if $lowerdecksEnergyFeeCredits >= _energyCost>>
    <<set $lowerdecksEnergyFeeCredits -= _energyCost>>
    <<set $lowerdecksEnergyFeeCredits = Math.max(0, $lowerdecksEnergyFeeCredits)>>
<<else>>
    <<set $lowerdecksEnergyFeeCredits to 0>>
    <<set $lowerdecksEnergyFeeCredits = Math.max(0, $lowerdecksEnergyFeeCredits)>>
<</if>>
<!-- Initialize or retrieve the last cyberware degradation date -->
<<if $prevCyberwareDegradationYear === undefined or $prevCyberwareDegradationMonth === undefined or $prevCyberwareDegradationDay === undefined>>
    <<set $prevCyberwareDegradationYear = $gameDate.getFullYear()>>
    <<set $prevCyberwareDegradationMonth = $gameDate.getMonth()>>
    <<set $prevCyberwareDegradationDay = $gameDate.getDate()>>
    <<set $daysSinceLastCyberwareUpdate = 1>>
<<else>>
    <<set _lastCyberwareUpdate = new Date($prevCyberwareDegradationYear, $prevCyberwareDegradationMonth, $prevCyberwareDegradationDay)>>
    <<set _currentDate = new Date($gameDate.getFullYear(), $gameDate.getMonth(), $gameDate.getDate())>>
    <<set _timeDiff = _currentDate.getTime() - _lastCyberwareUpdate.getTime()>>
    <<set $daysSinceLastCyberwareUpdate = Math.floor(_timeDiff / (1000 * 60 * 60 * 24))>>
    <<set $prevCyberwareDegradationYear = $gameDate.getFullYear()>>
    <<set $prevCyberwareDegradationMonth = $gameDate.getMonth()>>
    <<set $prevCyberwareDegradationDay = $gameDate.getDate()>>
<</if>>

<!-- Cyberware degradation should be checked daily, not based on the fabricator intervals -->
<<if $daysSinceLastCyberwareUpdate > 0>>
    <<set $lowerdecksFabricatorCyberware = Math.max(0, $lowerdecksFabricatorCyberware - $daysSinceLastCyberwareUpdate)>>
<</if>>
<!-- Initialize or retrieve the fabricator hopper variables -->
<<if $lowerdecksFabricatorHopperScrap === undefined>> <<set $lowerdecksFabricatorHopperScrap = 0>><</if>>
<<if $lowerdecksFabricatorHopperParts === undefined>> <<set $lowerdecksFabricatorHopperParts = 0>><</if>>
<<if $lowerdecksFabricatorCyberware === undefined>> <<set $lowerdecksFabricatorCyberware = 0>><</if>>
<<if $lowerdecksEnergyFeeCredits === undefined>> <<set $lowerdecksEnergyFeeCredits = 0>><</if>>

<!-- Check if the accumulated time has reached the interval for processing -->
<<if $fabricatorAccumulatedTime >= _fabricatorInterval>>
    <<set _intervalsPassed = Math.floor($fabricatorAccumulatedTime / _fabricatorInterval)>>
    <<set $fabricatorAccumulatedTime -= _intervalsPassed * _fabricatorInterval>>

    <!-- Only process if there's enough scrap -->
    <<if $lowerdecksFabricatorHopperScrap >= _baseRate and $lowerdecksEnergyFeeCredits > 0>>
        <!-- Processing logic block -->
        <<set _multiplier = 1>> <!-- Default multiplier is 1x -->
        <<set _cyberwareInstalled = $lowerdecksFabricatorCyberware>> <!-- Get the amount of cyberware installed -->

<!-- Calculate the multiplier based on cyberware installed -->
<<if _cyberwareInstalled >= 1 and _cyberwareInstalled < 10>> <<set _multiplier = 2>>
<<elseif _cyberwareInstalled >= 10 and _cyberwareInstalled < 200>> <<set _multiplier = 3>>
<<elseif _cyberwareInstalled >= 200 and _cyberwareInstalled < 4000>> <<set _multiplier = 4>>
<<elseif _cyberwareInstalled >= 4000 and _cyberwareInstalled < 8000>> <<set _multiplier = 5>>
<<elseif _cyberwareInstalled >= 8000 and _cyberwareInstalled < 32000>> <<set _multiplier = 6>>
<<elseif _cyberwareInstalled >= 32000 and _cyberwareInstalled < 64000>> <<set _multiplier = 7>>
<<elseif _cyberwareInstalled >= 64000 and _cyberwareInstalled < 128000>> <<set _multiplier = 8>>
<<elseif _cyberwareInstalled >= 128000 and _cyberwareInstalled < 256000>> <<set _multiplier = 9>>
<<elseif _cyberwareInstalled >= 256000>> <<set _multiplier = 10>>
<</if>>

<<if $lowerdecksEnergyFeeCredits >= 1>>
        <!-- Calculate the amount of scrap to process and the parts produced -->
        <<set _scrapToProcess = Math.min($lowerdecksFabricatorHopperScrap, _intervalsPassed * _baseRate * _multiplier)>>
        <<set $lowerdecksFabricatorHopperScrap -= _scrapToProcess>>
        <<set _partsProduced = (_scrapToProcess / _baseRate) * _basePartsProduced>>
        <<set $lowerdecksFabricatorHopperParts += _partsProduced>>
        <</if>>
    <</if>>
<</if>>
<</nobr>><</widget>>


:: widget changemoods [widget nobr] {"position":"175,675","size":"100,100"}
<<widget "changemoods">>
<<nobr>>
    /* Set local variables for the stat name, severity, and effect type. */
    <<set _statName to $args[0]>>
    <<set _severity to $args[1].toLowerCase()>>
    <<set _effectType to $args[2]>>
    <<set _symbol to ''>>
    <<set _color to ''>>
    <<set _displayStatName to ''>>
    <<set _inverseStats to ["a", "ab", "ac", "ad"]>> /* List of inverse stats */

    /* Determine the display stat name. */
    <<switch _statName>>
        <<case "health">>
            <<set _displayStatName to 'Health'>>
        <<case "mood">>
            <<set _displayStatName to 'Mood'>>
        <<case "stress">>
            <<set _displayStatName to 'Stress'>>
        <<case "trauma">>
            <<set _displayStatName to 'Trauma'>>
        <<case "fatigue">>
            <<set _displayStatName to 'Fatigue'>>
        <<case "filth">>
            <<set _displayStatName to 'Filth'>>
        <<case "powerReserves">>
            <<set _displayStatName to 'Power Reserves'>>
        <<case "economy">>
        	<<set _displayStatName to 'Economy'>>
        <<case "dangerlevel">>
        	<<set _displayStatName to 'Danger'>>
        <<default>>
            <<set _displayStatName to 'Unknown Stat'>>
    <</switch>>

    /* Determine if the current stat is an inverse stat. */
    <<set _isInverseStat to _inverseStats.includes(_statName)>>

    /* Determine the symbol and color based on severity, effect type, and whether the stat is inverse. */
    <<if _effectType is "PosEffectOnPlayer">>
        <<if _isInverseStat>>
            /* Positive effect is bad for inverse stats. */
            <<if _severity is "minor">>
                <<set _symbol to '+'>>
                <<set _color to 'yellow'>>
            <<elseif _severity is "major">>
                <<set _symbol to '+ +'>> /* Use non-breaking space to separate plus signs */
                <<set _color to 'red'>>
            <</if>>
        <<else>>
            /* Positive effect is good for normal stats. */
            <<if _severity is "minor">>
                <<set _symbol to '+'>>
                <<set _color to 'lightgreen'>>
            <<elseif _severity is "major">>
                <<set _symbol to '+ +'>> /* Use non-breaking space to separate plus signs */
                <<set _color to 'green'>>
            <</if>>
        <</if>>
    <<elseif _effectType is "NegEffectOnPlayer">>
        <<if _isInverseStat>>
            /* Negative effect is good for inverse stats. */
            <<if _severity is "minor">>
                <<set _symbol to '-'>>
                <<set _color to 'lightgreen'>>
            <<elseif _severity is "major">>
                <<set _symbol to '- -'>> /* Use non-breaking space to separate minus signs */
                <<set _color to 'green'>>
            <</if>>
        <<else>>
            /* Negative effect is bad for normal stats. */
            <<if _severity is "minor">>
                <<set _symbol to '-'>>
                <<set _color to 'yellow'>>
            <<elseif _severity is "major">>
                <<set _symbol to '- -'>> /* Use non-breaking space to separate minus signs */
                <<set _color to 'red'>>
            <</if>>
        <</if>>
    <</if>>

    /* Print the result. */
    <<print '<span style="color: ' + _color + '">' + _symbol + ' ' + _displayStatName + '</span>'>>
<</nobr>>
<</widget>>

/*
Widget Documentation: changemoods

Description:
The 'changemoods' widget visually represents changes in player stats with symbols and colors. It is intended to be used after flavor text to provide a styled indication of stat changes.

Usage:
<<changemoods "statName" "severity" "effectType">>

Parameters:
- "statName": The name of the stat being affected (e.g., "health", "mood", "stress").
- "severity": The severity of the change, either "minor" or "major".
- "effectType": The type of effect on the player, either "PosEffectOnPlayer" for positive effects or "NegEffectOnPlayer" for negative effects. Inverse stats such as "stress", "trauma", "fatigue", and "filth" will have their color coding reversed.

Examples:
1. To show a major improvement in the player's health:
<<changemoods "health" "major" "PosEffectOnPlayer">>
<<set $player.health += 60>>  // Adjust the health stat.

2. To show a minor increase in the player's stress (which is bad, as stress is an inverse stat):
<<changemoods "stress" "minor" "NegEffectOnPlayer">>
<<set $player.stress += 10>>  // Adjust the stress stat.

3. To show a major reduction in the player's fatigue (which is good, as fatigue is an inverse stat):
<<changemoods "fatigue" "major" "PosEffectOnPlayer">>
<<set $player.fatigue -= 50>>  // Adjust the fatigue stat.

Note:
Always ensure to adjust the player's stats using the appropriate SugarCube <<set>> macro in conjunction with the <<changemoods>> widget to reflect the actual changes in the game's state. Below are examples for adjusting each named player stat:

- Health (normal stat):
<<set $player.health += 30>>  // Increase health.
<<set $player.health -= 15>>  // Decrease health.

- Mood (normal stat):
<<set $player.mood += 20>>  // Improve mood.
<<set $player.mood -= 10>>  // Worsen mood.

- Stress (inverse stat):
<<set $player.stress -= 25>>  // Reduce stress (good).
<<set $player.stress += 40>>  // Increase stress (bad).

- Trauma (inverse stat):
<<set $player.trauma -= 10>>  // Lessen trauma (good).
<<set $player.trauma += 20>>  // Intensify trauma (bad).

- Fatigue (inverse stat):
<<set $player.fatigue -= 30>>  // Decrease fatigue (good).
<<set $player.fatigue += 15>>  // Increase fatigue (bad).

- Filth (inverse stat):
<<set $player.filth -= 5>>  // Cleanliness improves (good).
<<set $player.filth += 10>>  // Filthiness worsens (bad).

- Power Reserves (normal stat):
<<set $player.powerReserves += 50>>  // Boost power reserves.
<<set $player.powerReserves -= 20>>  // Deplete power reserves.

- Credits (normal stat):
<<set $player.credits += 100>>  // Gain credits.
<<set $player.credits -= 50>>  // Lose credits.

Remember to use the <<changemoods>> widget after adjusting the stats to visually represent the change to the player.
*/



:: widget clamps [widget nobr] {"position":"300,275","size":"100,100"}
<<widget "clamps">><<nobr>>
        /* Clamp global game variables to their defined ranges */
        <<set $worldEconomyScore = Math.clamp($worldEconomyScore, 0, 1000)>>
        <<set $dangerLevelScore = Math.clamp($dangerLevelScore, 0, 1000)>>
        
        /* Clamp player-specific variables */
        <<set $player.health = Math.clamp($player.health, 0, 1000)>>
        <<set $player.mood = Math.clamp($player.mood, 0, 1000)>>
        <<set $player.stress = Math.clamp($player.stress, 0, 1000)>>
        <<set $player.trauma = Math.clamp($player.trauma, 0, 1000)>>
        <<set $player.fatigue = Math.clamp($player.fatigue, 0, 1000)>>
        <<set $player.filth = Math.clamp($player.filth, 0, 1000)>>
        <<set $player.powerReserves = Math.clamp($player.powerReserves, 0, 1000)>>
        <<set $player.debt = Math.clamp($player.debt, 0, 20000000000000000000)>>
    <</nobr>><</widget>>



:: widget displayAreaImage [widget nobr] {"position":"50,475","size":"100,100"}
<<widget "displayAreaImage">>
<<nobr>>
<<set _area = $args[0]>>
<<set _imagePath = setup.areaImagePaths[_area] ? setup.areaImagePaths[_area] : setup.defaultImagePath>>

<div id="area-image-container">
    <img src="@{_imagePath}" alt="Map of the area">
</div>
<</nobr>>
<</widget>>



:: widget formatNumber [widget nobr] {"position":"50,175","size":"100,100"}
<<widget "formatNumber">>
<<nobr>>
    <<set _numToFormat = Math.round($args[0])>> /* Round to the nearest whole number */
    <<print _numToFormat.toLocaleString("en-US")>> /* Format with commas */
<</nobr>>
<</widget>>


:: widget minimap [widget nobr] {"position":"50,575","size":"100,100"}
<<widget "displayAreaImage">><<nobr>>
<<if $areaImages.hasOwnProperty($currentArea)>>
    <<set _imagePath to setup.ImagePath + "/locs/areaminimaps/" + $areaImages[$currentArea]>>
<<else>>
    <<set _imagePath to setup.ImagePath + "/locs/areaminimaps/" + $areaImages["default"]>>
<</if>>

<div id="miniarea-image-container">
    <<print '<img src="' + _imagePath + '" alt="Map of ' + $currentArea + '">'>> /* Output the image tag within the uniquely ID'd div */
</div>
<</nobr>><</widget>>



:: widget moneychanger [widget nobr] {"position":"175,775","size":"100,100"}
<<widget "creditchange">>
<<nobr>>
    <<set _changeAmount to $args[0]>>
    <<set _effectType to $args[1]>>
    <<set _symbol to ''>>
    <<set _color to ''>>
    <<set _percentageChange to ($player.credits > 0) ? (_changeAmount / $player.credits) * 100 : 100>>

    /* Determine the symbol and color based on the percentage change and effect type. */
    <<if _effectType is "positive">>
        <<if _percentageChange <= 1>>
            <<set _symbol to '+'>>
            <<set _color to 'lightgreen'>>
        <<elseif _percentageChange <= 2>>
            <<set _symbol to '++'>>
            <<set _color to 'green'>>
        <<else>>
            <<set _symbol to '+++'>>
            <<set _color to 'darkgreen'>>
        <</if>>
    <<else>>
        <<if _percentageChange <= 1>>
            <<set _symbol to '-'>>
            <<set _color to 'yellow'>>
        <<elseif _percentageChange <= 2>>
            <<set _symbol to '- -'>>
            <<set _color to 'orange'>>
        <<else>>
            <<set _symbol to '- - -'>>
            <<set _color to 'red'>>
        <</if>>
    <</if>>

    /* Format the number with commas. */
    <<set _formattedAmount to _changeAmount.toLocaleString()>>

    /* Print the result with the formatted amount of change in parentheses. */
    <<print '<span style="color: ' + _color + '">' + _symbol + ' Credits (' + _formattedAmount + ')</span>'>>
<</nobr>>
<</widget>>

<<widget "debtchange">>
<<nobr>>
    <<set _changeAmount to $args[0]>>
    <<set _effectType to $args[1]>>
    <<set _symbol to ''>>
    <<set _color to ''>>
    <<set _percentageChange to ($player.debt > 0) ? (_changeAmount / $player.debt) * 100 : 100>>

    /* Determine the symbol and color based on the percentage change and effect type. */
    <<if _effectType is "positive">>
        <<if _percentageChange <= 1>>
            <<set _symbol to '+++'>>
            <<set _color to 'red'>>
        <<elseif _percentageChange <= 2>>
            <<set _symbol to '++'>>
            <<set _color to 'orange'>>
        <<else>>
            <<set _symbol to '+'>>
            <<set _color to 'yellow'>>
        <</if>>
    <<else>>
        <<if _percentageChange <= 1>>
            <<set _symbol to '- - -'>>
            <<set _color to 'lightgreen'>>
        <<elseif _percentageChange <= 2>>
            <<set _symbol to '- -'>>
            <<set _color to 'green'>>
        <<else>>
            <<set _symbol to '-'>>
            <<set _color to 'darkgreen'>>
        <</if>>
    <</if>>

    /* Format the number with commas. */
    <<set _formattedAmount to _changeAmount.toLocaleString()>>

    /* Print the result with the formatted amount of change in parentheses. */
    <<print '<span style="color: ' + _color + '">' + _symbol + ' Debt (' + _formattedAmount + ')</span>'>>
<</nobr>>
<</widget>>


:: widget music [widget nobr] {"position":"50,775","size":"100,100"}
<<widget "PlayTrack">>
    /* If a track ID is passed as an argument, update the current song index */
    <<if $args[0]>> 
        <<set setup.currentSongIndex to $args[0]>>
    <</if>>

    /* Get the current track ID */
    <<set _nextTrack to setup.songList[setup.currentSongIndex]>>

    /* Check if the track exists and is not currently playing */
    <<if TrackExists(_nextTrack) and not isPlaying(_nextTrack)>>
        /* Stop all playing audio */
        <<masteraudio stop>>
        
        /* Play the current track */
        <<audio _nextTrack volume 0.2 play loop>>
        
        /* Event handler for when the track ends */
        <<run SimpleAudio.tracks.get(_nextTrack).one("end", function () {
            /* Advance to the next track and loop back if at the end of the list */
            setup.currentSongIndex = (setup.currentSongIndex + 1) % setup.songList.length;
            
            /* Play the next track */
            SugarCube.Macro.get("PlayTrack").fn();
        })>>
    <</if>>
<</widget>>


:: widget needs [widget nobr] {"position":"175,575","size":"100,100"}
<<widget "manageNeeds">>
    /* Check if $lastUpdateTime is set; if not, initialize it */
    <<if $lastUpdateTime === undefined>>
        <<set $lastUpdateTime = new Date($gameDate.getTime())>> /* Initialize with the current game time */
    <</if>>

    /* Calculate the time difference in minutes since the last update */
    <<set _currentTime = new Date($gameDate.getTime())>> /* Get the current game time */
    <<set _timeDifference = (_currentTime.getTime() - $lastUpdateTime.getTime()) / 60000>> /* Calculate the difference in minutes */

    /* Apply changes to stats based on the elapsed time, but only if at least 5 minutes have passed */
    <<if _timeDifference >= 5>>
        /* Calculate the adjustment factor using an exponential curve */
        <<set _maxDecay = 500>> /* Adjusted maximum decay for complete depletion in 24 hours */
        <<set _halfLife = 360>> /* Adjusted half-life to 60 minutes for a faster decay rate */
        <<set _adjustmentFactor = _maxDecay * (1 - Math.exp(-0.693 * _timeDifference / _halfLife))>>
        /* This limits the adjustment factor based on an exponential decay curve */

        <<set _reducedFactor = _adjustmentFactor / 122>> 
        <<set $player.health = Math.clamp($player.health + _reducedFactor, 0, 1000)>>
        <<set $player.mood = Math.clamp($player.mood + _reducedFactor, 0, 1000)>>
        <<set $player.trauma = Math.clamp($player.trauma - _reducedFactor, 0, 1000)>>
        <<set $player.stress = Math.clamp($player.stress - _reducedFactor, 0, 1000)>>
        
        
        <<set _fatigueReductionFactor = _adjustmentFactor / 1>> /* Use the full adjustment factor for fatigue */
        <<set $player.fatigue = Math.clamp($player.fatigue + _fatigueReductionFactor, 0, 1000)>>
        <<set $player.filth = Math.clamp($player.filth + _fatigueReductionFactor, 0, 1000)>>
    <</if>>

    /* Check for any need dropping below 50 and set $breakdown accordingly */
    <<if $player.health < 50 or $player.mood < 50 or $player.trauma > 950 or $player.stress > 950 or $player.fatigue > 950 or $player.filth > 950>>
        <<set $breakdown = true>>
    <<else>>
        <<set $breakdown = false>>
    <</if>>

    /* Update the last update time for the next check */
    <<set $lastUpdateTime = _currentTime>>  /* Store the current time for the next update */
<</widget>>


:: widget scicon [widget nobr] {"position":"50,675","size":"100,100"}
<<widget "scicon">><span @class="'sc-icon sc-' + $args.raw" alt="' + $args.raw + '"></span><</widget>>


:: widget sidebarimage [widget nobr] {"position":"175,475","size":"100,100"}
<<widget "setSidebarBackground">>
<<nobr>>
    /* Check if an image path is provided */
    <<if $args[0]>>
        /* Set the background image of the UI sidebar */
        <<run $('#ui-bar').css({
            'background-image': 'url(' + $args[0] + ')',
            'background-size': 'cover',
            'background-position': 'center center'
        })>>
    <<else>>
        /* Error handling if no image path is provided */
        <<run console.error("setSidebarBackground: No image path provided")>>
    <</if>>
<</nobr>>
<</widget>>



:: widget updatebar [widget nobr] {"position":"175,275","size":"100,100"}
<<widget "updatebar">><<silently>><<nobr>>
    <<clamps>>
    <<replace "#story-banner">><<display "StoryBanner">><</replace>>
    <<replace "#story-caption">><<display "StoryCaption">><</replace>>
<</nobr>><</silently>><</widget>>



:: StoryScript [script]
if (document.location.href.toLowerCase().includes("/temp/") || document.location.href.toLowerCase().includes("/private/") || hasOwnProperty.call(window, "storyFormat")) {
	// Change this to the path where the HTML file is
	// located if you want to run this from inside Twine.
	setup.Path = "C:\Users\Documents\Twine\Scratch";  // Running inside Twine application
} else { 
	setup.Path = "";  // Running in a browser
}
setup.ImagePath = setup.Path + "images/";
setup.SoundPath = setup.Path + "sounds/music/";

$(document).on(':passagestart', function (ev) {
	if (!ev.passage.tags.includes('noreturn')) {
		State.variables.return = ev.passage.title;
	}
});

window.setup = window.setup || {};

setup.advanceTrack = function() {
    var currentTrack = setup.songList[setup.currentSongIndex];
    var nextTrackIndex = (setup.currentSongIndex + 1) % setup.songList.length;
    var nextTrack = setup.songList[nextTrackIndex];

    // Stop the current track if it's playing
    if (SimpleAudio.tracks.get(currentTrack).isPlaying()) {
        SimpleAudio.tracks.get(currentTrack).stop();
    }

    // Play the next track
    SimpleAudio.tracks.get(nextTrack).play({ volume: 0.2, loop: true });

    // Update the current track index
    setup.currentSongIndex = nextTrackIndex;
};

// Check to see if trackID is currently loaded
window.TrackExists = function (trackID) {
	return SimpleAudio.tracks.has(trackID);
};

// Check to see if trackID is the currently playing track
window.isPlaying = function (trackID) {
	var track = SimpleAudio.tracks.get(trackID);
	return track !== null && track.isPlaying();
};

Config.history.maxStates = 2;

$(document).on(':passageend', function () {
    // Accordion toggle for sub-menus
    $(".sub-menu > a").click(function(e) {
        var $this = $(this);
        var $content = $this.next('.content');
        var $icon = $this.find('.sc-icon');

        // Slide up all other sub-menu contents and remove active class
        $(".sub-menu").not($this.parent()).removeClass('active');
        $(".sub-menu .content").not($content).slideUp();

        // Toggle the clicked sub-menu content
        $content.slideToggle();
        $this.parent().toggleClass('active');

        // Rotate the icon
        if ($this.parent().hasClass('active')) {
            $icon.css('transform', 'rotate(-90deg)');
        } else {
            $icon.css('transform', 'rotate(0deg)');
        }

        e.preventDefault();
    });
});


Config.saves.autosave = function () {
    // Check if the current passage has the "POI" tag
    if (tags().includes("poi")) {
        return true; // Autosave for passages with the "POI" tag
    }
    return false; // Do not autosave for other passages
};


if (document.location.href.toLowerCase().includes("/temp/") || document.location.href.toLowerCase().includes("/private/") || hasOwnProperty.call(window, "storyFormat")) {
	// Change this to the path where this HTML file is
	// located if you want to run this from inside Twine.
	setup.Path = "C:\Users\Documents\Twine\Scratch";  // Running inside Twine application
} else {
	setup.Path = "";  // Running in a browser
}
setup.ImagePath = setup.Path + "images/";
setup.SoundPath = setup.Path + "sounds/";






/* Create the Right UI Bar. */
var $rightUiBar = $('<div id="right-ui-bar"></div>').insertAfter("#ui-bar");

var rightTray = $rightUiBar.append('<div id="right-ui-bar-tray"><button id="right-ui-bar-toggle" tabindex="0" title="Toggle the Right UI bar" aria-label="Toggle the Right UI bar" type="button"></button></div>');

var rightBody = $rightUiBar.append('<div id="right-ui-bar-body"></div>');

/* Attach the toggle button click. */
$rightUiBar.find('#right-ui-bar-toggle').ariaClick({label : "Toggle the Right UI bar"}, () => $rightUiBar.toggleClass('stowed'));

/* Automatically show the contents of the StoryRightSidebar passage in the right-ui-bar-body element. */
postrender["Display Right Sidebar Contents"] = function (content, taskName) {
	setPageElement('right-ui-bar-body', 'StoryRightSidebar');
};




(function () {
    // v1.1.1
    'use strict';

    var characters = new Map();

    function addCharacter (name, displayname, icon) {
		if(icon === undefined && displayname){
			icon = displayname;
			displayname = null;
		}
        if (State.length) {
            throw new Error('addCharacter() -> must be called before story starts');
        }
        if (!name || !icon) {
            console.error('addCharacter() -> invalid arguments');
            return;
        }
        if (characters.has(name)) {
            console.error('addCharacter() -> overwriting character "' + name + '"');
        }
        characters.set(name, {displayName: displayname, image: icon});
    }

    function say ($output, character, text, imgSrc) {
        // 
        var $box = $(document.createElement('div'))
            .addClass(Util.slugify(character) + ' say');

			
        // portrait
        var _img = characters.has(character) ? characters.get(character).image : null;        
        var $img = $(document.createElement('img'))
            .attr('src', imgSrc || _img || '');

        if ($img.attr('src') && $img.attr('src').trim()) {
            $box.append($img);
        }

        // name and content boxes
		var _name =  character.toUpperFirst();
		if (characters.has(character) && characters.get(character).displayName) {
            _name = characters.get(character).displayName;
        }

        $box.append($(document.createElement('p'))
            .wiki(_name))
            .append($(document.createElement('p'))
                .wiki(text));

        if ($output) {
            if (!($output instanceof $)) {
                $output = $($output);
            }
            $box.appendTo($output);
        }

        return $box;
    }

    setup.say = say;
    setup.addCharacter = addCharacter;

    Macro.add('character', {
        // character macro
        handler : function () {
            addCharacter(this.args[0], this.args[1], this.args[2]);
        }
    });

    $(document).one(':passagestart', function () {
        // construct array of character names
        var names = Array.from(characters.keys());
        names.push('say');
        // generate macros
        Macro.add(names, {
            tags : null,
            handler : function () {
                if (this.name !== 'say') {
                    say(this.output, this.name, this.payload[0].contents);
                } else {
                    say(this.output, this.args[0], this.payload[0].contents, this.args[1]);
                }
            }
        });
    });
}());


if (document.location.href.toLowerCase().includes("/temp/") || document.location.href.toLowerCase().includes("/private/") || hasOwnProperty.call(window, "storyFormat")) {
	setup.Path = "C:\Users\Documents\Twine\Scratch";  // Running inside Twine application
} else { 
	setup.Path = "";  // Running in a browser
}
setup.ImagePath = setup.Path + "images/";

// fontSize: Increase or decrease passage font size by "value" pixels.
window.fontSize = function(value) {
	$("#story").css("font-size", (parseInt($("#story").css("font-size")) + value) + "px");
};

// Make it so that paths can work properly when launched from Twine.
if (document.location.href.toLowerCase().includes("/temp/") || document.location.href.toLowerCase().includes("/private/") || hasOwnProperty.call(window, "storyFormat")) {
	// Change this to the path where the HTML file is
	// located if you want to run this from inside Twine.
	setup.Path = "C:\Users\Documents\Twine\Scratch";  // Running inside Twine application
} else {
	setup.Path = "";  // Running in a browser
}
setup.ImagePath = setup.Path + "images/";

// Game icon in tab.  Generated at: https://realfavicongenerator.net
var favIco = setup.ImagePath + "favicon/";
$(document.head).append('<link rel="apple-touch-icon" sizes="180x180" href="' + favIco + 'apple-touch-icon.png">');
$(document.head).append('<link rel="icon" type="image/png" sizes="32x32" href="' + favIco + 'favicon-32x32.png">');
$(document.head).append('<link rel="icon" type="image/png" sizes="16x16" href="' + favIco + 'favicon-16x16.png">');
$(document.head).append('<link rel="manifest" href="' + favIco + 'site.webmanifest">');
$(document.head).append('<link rel="shortcut icon" href="' + favIco + 'favicon.ico">');
$(document.head).append('<meta name="msapplication-TileColor" content="#da532c">');
$(document.head).append('<meta name="msapplication-config" content="' + favIco + 'browserconfig.xml">');
$(document.head).append('<meta name="theme-color" content="#ffffff">');




Config.navigation.override = function (dest) {
    console.log("Original Destination:", dest);
    console.log("Current passage tags:", tags());
    console.log("Destination passage tags:", tags(dest));

  // Inside Config.navigation.override
if (tags().includes("DebtEvent")) {
    console.log("In DebtEvent, waiting for player action.");
    return dest; // Return the current destination without changing it.
}

  
    // Check if the destination passage is not an event and if a new day has started.
    if (!tags(dest).includes("event") && State.variables.newDay) {
        console.log("New day detected. Triggering day change.");
        State.variables.continue = dest;  // Store the original destination
        State.variables.newDay = false;  // Reset the newDay flag to false to prevent re-triggering the day change.

        return "DayChange"; // Redirect to the "DayChange" passage.
    }

    // Check for breakdown condition.
    if (State.variables.breakdown && !tags().includes("safe") && !tags().includes("conversation")) {
        console.log("Breakdown detected. Redirecting to breakdown passage.");
        State.variables.continue = dest;  // Store the original destination

        var currentArea = State.variables.currentArea || 'default'; // Get the current area or default if not set
        var breakdownEvent = setup.breakdownEvents[currentArea] || setup.breakdownEvents.default; // Get breakdown event for the current area or default if none

        dest = breakdownEvent; // Redirect to the selected breakdown event
        console.log("Selected breakdown event:", dest);

        State.variables.breakdown = false; // Reset the breakdown flag
    }

    // New case: Redirecting from 'poi' to 'travel' tagged passage to an 'event handler' passage.
    if (tags().includes("poi") && tags(dest).includes("travel")) {
        console.log("Moving from 'poi' to 'travel'. Redirecting to 'event handler' passage.");
        State.variables.continue = dest;  // Store the original destination

        return "eventHandler"; // Redirect to the "eventHandler" passage.
    }

    // Existing logic for handling random events on travel passages.
    if (tags(dest).includes("travel") && !tags().includes("event")) {
        console.log("Travel passage detected. Checking for event...");

        var currentArea = State.variables.currentArea || 'default';
        console.log("Current Area:", currentArea);

        var events = setup.areaEvents[currentArea] || [];
        console.log("All available events in current area:", events);

        if (random(1, 10) <= 3) {  // 30% chance for an event
            console.log("Event condition met. Attempting to trigger an event...");
            State.variables.continue = dest;  // Store the original destination

            if (events.length > 0) {
                dest = events.random();
                console.log("Selected random event:", dest);
            } else {
                console.log("No events available for this area.");
            }
        } else {
            console.log("Event condition not met. Continuing to the original destination.");
        }
    } else {
        console.log("Not a travel passage or already in an event. Clearing $continue.");
        delete State.variables.continue;
    }

    console.log("Final destination after processing:", dest);
    return dest;
};




// Define a clamp function
Math.clamp = function(value, min, max) {
    return Math.min(Math.max(value, min), max);
};



/* ToggleImages JavaScript - Start */
function allowHide(el) {
	return (!$(el).hasClass("nohide")) && (!$(el).parent().hasClass("nohide"));
}
window.imageRecheck = function () {
	if (settings.images) {
		$("img").each(function () {
			if (allowHide(this)) {
				$(this).addClass("hidden");
			}
		});
	}
};
var toggleImages = function () {
	if (settings.images) {
		// Hide images
		$(".toggle-wrapper").removeClass("pushed");
		window.imageRecheck();
	} else {
		// Show images
		$(".toggle-wrapper").addClass("pushed");
		$("img").removeClass("hidden");
		$("img").each(function () {
			if (allowHide(this)) {
				$(this).attr("src", $(this).data("src"));
			}
		});
	}
};
Setting.addToggle("images", { label: "Hide images?", onChange: toggleImages });
/* You can do <<run toggleImg()>> to toggle the display of images,
		<<run toggleImg(true)>> to hide images,
		and <<run toggleImg(false)>> to show images. */
window.toggleImg = function (val) {
	if (val === undefined) {
		settings.images = !settings.images;
	} else {
		settings.images = !!val;
	}
	Setting.save();
	toggleImages();
	return settings.images;
};
$(document).on("click", ".toggle_handler", function (event) {
	window.toggleImg();
});
$(document).on(":passagerender", function (event) {
	$(event.content).find("img").each(function () {
		if (allowHide(this)) {
			$(this).data("src", $(this).attr("src"));
			if (settings.images) {
				$(this).addClass("hidden").removeAttr("src");
			}
		}
	});
});
$(document).on(":passageend", function (event) {
	window.imageRecheck();
});
/* ToggleImages JavaScript - End */

// Sanitize input to allow only alphanumeric characters. Default to "ErRoR" if input is empty.
window.sanitizeInput = function(input) {
    var sanitized = input.replace(/[^a-zA-Z0-9]/g, ''); // Remove non-alphanumeric characters
    return sanitized.length > 0 ? sanitized : 'ErRoR'; // Default to 'ErRoR' if empty
}








//HEALTH BAR STUFF IS HERE!!!!





window.UpdateStatBar = function (currentValue, maxValue, barId, isInverse) {
    var percentage = Math.floor((currentValue / maxValue) * 100);
    var minPercentage = 5;
    
    if (isInverse) {
        percentage = 100 - percentage;
    }

    percentage = Math.max(percentage, minPercentage);

    var barElement = document.getElementById(barId);

    if (barElement) {
        barElement.style.width = percentage + '%';

        var color;
        if (isInverse) {
            // For inverted bars: Red when full (high percentage), Green when low (low percentage).
                      color = percentage >= 75 ? 'red' :
                    percentage >= 50 ? 'orange' :
                    percentage >= 25 ? 'lightgreen' : 'green';

        } else {
            // For non-inverted bars: Green when full (high percentage), Red when low (low percentage).
            color = percentage >= 75 ? 'green' :
                    percentage >= 50 ? 'lightgreen' :
                    percentage >= 25 ? 'orange' : 'red';
        }

        barElement.style.backgroundColor = color;
    }
};





/* SlideWin v1.0 - Start */
// Add the SlideWin window to the page.
var el = document.createElement("div");
el.id = "slideWin";
el.setAttribute("role", "main");
el.setAttribute("aria-labelledby", "slideTitle");
document.body.appendChild(el);
$(el).css({ transform: "translateX(-101vw)", "stroke-width": "101px" });
// Allow the ESC key to hide the SlideWin window.
$(document).on("keyup", function (event) {
	if (($("#slideWin").css("stroke-width") !== "101px") && ((event.key === "Escape") || (event.key === "Esc"))) {
		window.slideWin("hide");
		return false;
	}
});
// The slideWin() function.
setup.slideWinHandler = [];
window.slideWin = function (dir) {
	if ($("#slideWin").css("stroke-width") !== "101px") {  // Hide slide window.
		setup.slideWinPassage = undefined;
		$("#slideWin").attr("tabindex", null);
		$("#slideWin").animate(
			{ "stroke-width": "101px" },  // Hack to get animation to work.
			{	step: function (now, fx) { $(this).css("transform", "translateX(" + (-now) + "vw)"); },
				complete: function () {
					$("#slideWin").empty();
					if (dir !== "hide") {
						window.slideWin(dir);
					}
				},
				duration: 500
			},
			"swing"
		);
		var handler;  // Remove event handlers.
		while (setup.slideWinHandler.length) {
			handler = setup.slideWinHandler.shift();
			$(handler.selector).off(handler.event, "#slideWin", handler.function);
		}
		$("body").removeClass("slideWin");
	} else {  // Show slide window.
		setup.slideWinPassage = dir;
		$("#slideWin").empty().attr("tabindex", 0).wiki('<button class="ur" onclick="slideWin(\'hide\')" tabindex="0" aria-label="Close Save/Load Window">X</button><div id="slideWinContent" tabindex="0"><<include "' + dir + '">></div>');
		$("#slideWin p").each(function () {  // Remove any empty <p> elements.
			if ($(this).text().trim() === "") {
				$(this).remove();
			} else {  // Strip <p> elements from around their contents.
				$(this).children().unwrap();
			}
		});
		$("#slideWin").delay(1).animate(  // Delay prevents animation stutter.
			{ "stroke-width": "0" },  // Hack to get animation to work.
			{	step: function (now, fx) { $(this).css("transform", "translateX(" + (-now) + "vw)"); },
				complete: function () { $("body").addClass("slideWin"); },
				duration: 500
			},
			"swing"
		).focus();
	}
};
/* SlideWin - End */

if (document.location.href.toLowerCase().includes("/temp/") || document.location.href.toLowerCase().includes("/private/") || hasOwnProperty.call(window, "storyFormat")) {
	// Change this to the path where the HTML file is
	// located if you want to run this from inside Twine.
	setup.Path = "C:/Users/Browning/Documents/Twine/Scratch";  // Running inside Twine application
} else { 
	setup.Path = "";  // Running in a browser
}
setup.SoundPath = setup.Path + "sounds/music/";

// Volume Slider, by Chapel; for SugarCube 2
// version 1.2.0 (modified by HiEv)
// For custom CSS for slider use: http://danielstern.ca/range.css/#/

/*
	Changelog:
	v1.2.0:
		- Fixed using/storing the current volume level in the settings.
	v1.1.0:
		- Fixed compatibility issues with SugarCube version 2.28 (still
		  compatible with older versions, too).
		- Added settings API integration for SugarCube 2.26.
		- Internal improvements and greater style consistency with my
		  other work.
		- Added a pre-minified version.
		- By default, the slider is now more granular than before
		  (101 possible positions vs 11). Change the 'current' and
		  'rangeMax' options to 10 to restore the old feel.
*/

(function () {
	// Set initial values.
	var options = {
		current  : 50,  // Default volume level.
		rangeMax : 100,
		step	 : 1,
		setting  : true
	};
	Setting.load();
	if (options.setting && settings.volume) {
		options.current = parseInt(settings.volume);
	}
	var vol = {
		last: options.current,
		start: (options.current / options.rangeMax).toFixed(2)
	};

	// Function to update the volume level.
	function setVolume (val) {
		if (typeof val !== 'number') val = Number(val);
		if (Number.isNaN(val) || val < 0) val = 0;
		if (val > 1) val = 1;
		options.current = Math.round(val * options.rangeMax);
		if (options.setting) {
			settings.volume = options.current;
			Setting.save();
		}
		if ($('input[name=volume]').val() != options.current) {
			$('input[name=volume]').val(options.current);
		}
		try {
			if (SimpleAudio) {
				if (typeof SimpleAudio.volume === 'function') {
					SimpleAudio.volume(val);
				} else {
					SimpleAudio.volume = val;
				}
				return val;
			} else {
				throw new Error('Cannot access audio API.');
			}
		} catch (err) {
			// Fall back to the wikifier if we have to.
			console.error(err.message, err);
			$.wiki('<<masteraudio volume ' + val + '>>');
			return val;
		}
	}

	// Fix the initial volume level display.
	postdisplay['volume-task'] = function (taskName) {
		delete postdisplay[taskName];
		setVolume(vol.start);
	};

	// Grab volume level changes from the volume slider.
	$(document).on('input', 'input[name=volume]', function() {
		var change = parseInt($('input[name=volume]').val());
		setVolume(change / options.rangeMax);
		vol.last = change;
	});

	// Create the <<volume>> macro.
	Macro.add('volume', {
		handler : function () {
			var wrapper = $(document.createElement('span'));
			var slider = $(document.createElement('input'));
			var className = 'macro-' + this.name;
			slider.attr({
				id		: 'volume-control',
				type	: 'range',
				name	: 'volume',
				min		: '0',
				max		: options.rangeMax,
				step	: options.step,
				value	: options.current
			});
			// Class '.macro-volume' and ID '#volume-control' for styling the slider
			wrapper.append(slider).addClass(className).appendTo(this.output);
		}
	});

	// Add Setting API integration for SugarCube 2.26 and higher.
	function updateVolume () {
		setVolume(settings.volume / options.rangeMax);
	}
	if (options.setting) {
		if (Setting && Setting.addRange && typeof Setting.addRange === 'function') {
			Setting.addRange('volume', {
				label : 'Volume: ',
				min : 0,
				max : options.rangeMax,
				step : options.step,
				default : options.current,
				onInit : updateVolume,
				onChange : updateVolume
			});
		} else {
			console.error('This version of SugarCube does not include the `Settings.addRange()` method; please try updating to the latest version of SugarCube.');
		}
	}
}());




/* Keyboard links v1.3 - Start */
var KBIntervalID = 0;
$(document).on(":passagerender", function (ev) {
	clearInterval(KBIntervalID);
	UpdateLinks(ev.content);
	// Search passages for links every 300ms, just in case they get updated, and marks them for key clicks
	KBIntervalID = setInterval(UpdateLinks, 300);
});
// Adds key shortcut indicators to links in passage if there are less than 11 links in the passsage.
function UpdateLinks(Container) {
	// Enables keyboard shortcuts on passages that do not have the "DisableKeyLinks" tag
	if (!tags().includes("DisableKeyLinks")) {
		var Links, i;
		if (typeof Container === "undefined") {
			Container = document;
			Links = $("#passages a").toArray();
		} else {
			Links = $(Container).find("a").toArray();
		}
		if (Links.length > 0) {
			for (i = Links.length - 1; i >= 0; i--) {
				if ($(Links[i]).data("nokeys") || $(Links[i]).parent().data("nokeys")) {
					Links.deleteAt(i);
				}
			}
		}
		if (Links.length === 1) {
			if (!Links[0].id.includes("Link") && !Links[0].id.includes("NextLnk")) {
				Links[0].id = "NextLnk";
			}
		} else if (Links.length >= 1 && Links.length <= 10) {
			if ($("#NextLnk").length > 0) {  // Remove "NextLnk" ID since the passage now has more than one link.
				$("#NextLnk").removeAttr("id");
			}
			var n = 1;
			for (i = 0; i < Links.length; i++) {
				if (!Links[i].id.includes("Link")) {
					while ($(Container).find("#Link" + n).length) {
						++n;
						if (n > 10) {
							break;
						}
					}
					if (n < 10) {
						$("<sup>[" + n + "]</sup>").appendTo(Links[i]);
						Links[i].id = "Link" + n;
					} else if (n === 10) {
						$("<sup>[0]</sup>").appendTo(Links[i]);
						Links[i].id = "Link0";
						break;
					} else {
						break;
					}
				}
			}
		}
	}
}
$(document).on("keyup", function (e) {
	// Enables keyboard shortcuts on passages that do not have the "DisableKeyLinks" tag and when you're not entering text
	if (!tags().includes("DisableKeyLinks") && ($("input:focus").length === 0) && ($("textarea:focus").length === 0) && ($("div[contenteditable='true']:focus").length == 0)) {
		// Trigger next link click on right arrow key or "1" (normal and numpad)
		if (((e.key == "ArrowRight") || (e.key == "1") || (e.keyCode === 97)) && ($("#NextLnk").length > 0)) {
			if (!(tags().includes("IgnoreArrowKeys") && (e.key == "ArrowRight"))) {
				e.preventDefault();
				$("#NextLnk").click();
				return false;
			}
		} else {
			// Trigger link click on keys "0" through "9"
			if ((e.keyCode > 47) && (e.keyCode < 58)) {
				if ($("#Link" + (e.keyCode - 48)).length) {
					e.preventDefault();
					$("#Link" + (e.keyCode - 48)).click();
					return false;
				}
			}
			// Trigger link click on numpad keys "0" through "9"
			if ((e.keyCode > 95) && (e.keyCode < 106)) {
				if ($("#Link" + (e.keyCode - 96)).length) {
					e.preventDefault();
					$("#Link" + (e.keyCode - 96)).click();
					return false;
				}
			}
		}
		// Trigger random click on "." or "r" key
		if ((e.key == ".") || (e.key == "r")) {
			e.preventDefault();
			var Links = $("#passages a"), n, UsableLinks = [];
			if (Links.length > 0) {
				for (n = 0; n < Links.length; n++) {
					if (!$(Links[n]).data("nokey")) {
						UsableLinks.push(n);
					}
				}
				if (UsableLinks.length > 0) {
					n = random(UsableLinks.length - 1);
					Links[UsableLinks[n]].click();
					return false;
				}
			}
		}
		// Trigger back click on left arrow key or backquote
		if ((e.key == "ArrowLeft") || (e.key == "`")) {
			if ((!tags().includes("IgnoreArrowKeys")) || (e.key != "ArrowLeft")) {
				e.preventDefault();
				Engine.backward();
				return false;
			}
		}
	}
});
/* Keyboard links - End */

$("#ui-bar").append('<div id="uifooter"><center><hr id="HuDHr><span class="smallHuDFont">(V0.002 A Sci-Fi sandbox based on ShipCore)</span></center></div>');

:: StoryStylesheet [stylesheet]
#passages {
            max-width: 75%;
        }


.i-gain {
    color: green;
}

.i-loss {
  color: red;
}


.hidden {
    display: none;
}



#ui-bar {
    overflow: hidden auto;
    padding-right: 15px; /* Adjust this value as needed to provide space for the scrollbar */
}

/* For WebKit browsers like Chrome, Safari */
#ui-bar::-webkit-scrollbar {
    width: 8px; /* Adjust the width as needed */
}

#ui-bar::-webkit-scrollbar-track {
    background: #f1f1f1; /* Track color */
}

#ui-bar::-webkit-scrollbar-thumb {
    background: #888; /* Handle color */
}

#ui-bar::-webkit-scrollbar-thumb:hover {
    background: #555; /* Handle color on hover */
}

/* For Firefox */
#ui-bar {
    scrollbar-width: thin;
    scrollbar-color: #888 #f1f1f1; /* Handle and track colors */
}

#ui-bar-body {
  	line-height: 1.2;
    height: auto;
    min-height: -webkit-calc(100% - 120px);
    min-height: -moz-calc(100% - 120px);
    min-height: calc(100% - 120px);
}
#uifooter {
    position: relative;
    width: -webkit-calc(100% - 60px);
    width: -moz-calc(100% - 60px);
    width: calc(100% - 60px);
    /* padding: 12px; */
    bottom: 2em;
}

#ui-bar.stowed #uifooter {
	display: none;
}

/* Used to align label for volume slider */
input[type=range] {
	vertical-align: middle;
}


/* General sidebar styles */
.sidebar {

    padding: 0;
    margin: 0;
    position: relative;
    z-index: 100;
}

/* Style for the navigation links */
.nano-content > li > a {
    color: #aeb2b7;
    text-decoration: none;
    display: block;
    padding: 18px 25px;
    font-size: 1em;
    transition: color 200ms ease-in;
  	
}

.nano-content > li > a:hover {
    color: #1abc9c;
}

/* Style for the caret icons */
.nano-content > li > a > .sc-icon {
    float: right;
    transition: transform 200ms ease-in;
}

/* Style for the sub-menu content */
.content {
    display: none;
    list-style-type: none;
    padding: 0;
    margin: 0;
}

.content li a {
    background: #23313f;
    padding: 13px 25px;
    display: block;
    color: #aeb2b7;
    font-size: 12px;
    text-decoration: none;
}

.content li a:hover {
    color: #1abc9c;
}

/* Adjust content when visible */
.sub-menu.active .content {
    display: block;
}

.sub-menu.active > a > .sc-icon {
    transform: rotate(-90deg);
}

/* Style for the sub-menu links */
.nano-content li a {
    display: block; /* Make the links block-level elements */
    padding: 0.5em 0; /* Add padding to the top and bottom of each link */
    text-decoration: none; /* Optional: remove the underline from links */
    color: #aeb2b7; /* Set the text color for the links */
    /* Other styling properties */
  	border: 2px solid #444;
  	margin: -2px;
  	background: #000000e6;
}

/* Style for the sub-menu content */
.content {
    list-style-type: none; /* Remove bullet points from list items */
    padding: 0; /* Remove padding from the list */
    margin: 0; /* Remove margin from the list */
  	border: 2px solid #444;
}

/* Style for individual list items within the content */
.content li {
    margin-bottom: 0.0em; /* Add space below each list item */
  	border: 2px solid #444;
}

/* Styling for the sidebar */

#rightside-navigation.sidebar {

}

/* Styling and Colours of the Right UI Bar. */
#right-ui-bar {
	background-color: #222;
	border-right: 2px solid #444;
	text-align: center;
    background-image: url(images//uisidebar.jpg);
    background-size: cover;
    background-position: center center;
}
#right-ui-bar-toggle {
	font-size: 1.2em;
	line-height: inherit;
	color: #eee;
	background-color: transparent;
	border: 1px solid #444;
}
#right-ui-bar-toggle:before {
	font-family: tme-fa-icons;
	font-style: normal;
	font-weight: 400;
	font-variant: normal;
	text-transform: none;
	line-height: 1;
	speak: none;
}

/* Layout and Positioning of the Right UI Bar. */
#right-ui-bar {
    position: fixed;
    z-index: 50;
    top: 0;
    right: 0;
    width: 17.5em; /* Set a fixed width for the right UI bar */
    height: 100%;
	margin: 0;
	padding: 0;
 	overflow: hidden; /* Hide overflow content */
	-webkit-transition: right .2s ease-in;
	-o-transition: right .2s ease-in;
	transition: right .2s ease-in;
      min-height: -webkit-calc(100% - 120px);
    min-height: -moz-calc(100% - 120px);
    min-height: calc(100% - 120px);
}
#right-ui-bar-tray {
	position: absolute;
	top: .2em;
	left: 0;
	right: 0;
}
#right-ui-bar-toggle {
	display: block;
	position: absolute;
	top: 0;
	left: 0;
	border-left: none;
	padding: .3em .45em .25em;
	-webkit-user-select: none;
}
#right-ui-bar-toggle:before {
	content: "\e81e";
}
#right-ui-bar-body {
  	line-height: 1.2;
	height: 90%;
	height: calc(100% - 2.5em);
	margin: 2.5em 0;
	padding: 0 1.5em;
  	padding-right: 3em;
  	overflow: hidden; /* Hide overflow content */
}

#story {
	margin-right: 20em;
}

/* Stowing of the Right UI Bar. */
#right-ui-bar.stowed {
	right: -15.5em;
}
#right-ui-bar.stowed #right-ui-bar-toggle {
	padding: .3em .55em .25em .35em;
}
#right-ui-bar.stowed #right-ui-bar-toggle:before {
	content: "\e81d";
}
#right-ui-bar.stowed #right-ui-bar-body {
	visibility: hidden;
	-webkit-transition: visibility .2s step-end;
	-o-transition: visibility .2s step-end;
	transition: visibility .2s step-end;
}

#right-ui-bar.stowed~#story {
	margin-right: 4.5em;
}


/* Style for all text within the accordion */
#rightside-navigation.sidebar .nano-content {
    font-weight: bold; /* Make the text bold */
    font-size: 1.1em; /* Increase the font size slightly */
}

/* Style for all links within the accordion */
#rightside-navigation.sidebar .nano-content a {
    color: #68d; /* Set the link color */
    text-decoration: none; /* Optional: remove underline from links */
}

/* Style for all links within the accordion on hover */
#rightside-navigation.sidebar .nano-content a:hover {
    color: #8af; /* Set a brighter color on hover */
    text-decoration: underline; /* Optional: add underline on hover */
}

#debug-controls {
    background-color: black; /* Replace with the color you want for the background */
    /* Other styles you may want to apply, such as padding or border */
}

#story-author {
    /* margin-top: 2em; */
    /* font-weight: 700; */
}

.specialmutebutton button {
    width: 60px; /* Further reduced width */
    height: 15px; /* Further reduced height */
    line-height: 15px; /* Line height equal to height for vertical alignment */
    padding: 0; /* No padding */
    background-color: black; /* Background color */
    border: 2px solid #000; /* Border properties */
    border-radius: 2px; /* Smaller border radius */
    font-size: 8px; /* Very small font size */
    /* Add more styles as needed */
}




/* offset-x | offset-y | blur-radius | color */
.passage {
    text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000, 0px -2px 0 #000, 0px 2px 0 #000, -2px 0px 0 #000, 2px 0px 0 #000, 0px 0px 2px #000;
    background-color: rgba(0, 0, 0, 0.65);
    border: 2px solid #444;
  	padding: 1%;
}

body.splash .passage {
    text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000, 0px -2px 0 #000, 0px 2px 0 #000, -2px 0px 0 #000, 2px 0px 0 #000, 0px 0px 2px #000;
    background-color: rgba(0, 0, 0, 1);
    border: 0px solid #444;
    padding: 1%;
    opacity: 0;
    animation: fadeIn 10s ease forwards;
}

body.splash1 .passage {
    text-shadow: none;
    background-color: transparent;
    border: none;
    padding: 0;
    animation: fadeIn 2s ease forwards;
	
    /* Centering and scaling */
    position: absolute;
    top: 50%;
    left: 50%;
    width: 50%;  /* Adjust the width as needed */
    height: auto; /* Adjust the height as needed */
    font-size: 1vw; /* Adjust font size as needed */
}


@keyframes fadeIn {
    to {
        opacity: 1;
    }
}



.disabledLink {
    color: grey;
    pointer-events: none;
    cursor: default;
}


.say {
    border: 1px solid #eee;
    overflow: auto;
    padding-top: .1em;
    padding-bottom: .1em;
}


.say > img {
    max-width: 20%;
    float: left;
    margin-right: 1em;
}

.say > p:first-of-type {
    font-weight: bold;
    margin: 0.2em 0;
    border-bottom: 1px solid #eee;
}

.say > p:last-of-type {
    padding: 0.5em;
    margin: 0;
}

.shadow {
	text-shadow: 0.08em 0.08em 0.08em #FFF;
}
.emboss {
	text-shadow: 0.08em 0.08em 0em #FFF;
	color: black;
}
.blur {
	color: transparent;
	text-shadow: 0em 0em 0.08em #FFF;
}
.blurrier {
	color: transparent;
	text-shadow: 0em 0em 0.2em #FFF;
}
.blurrier::selection {
	background-color: transparent;
	color: transparent;
}
.blurrier::-moz-selection {
	background-color: transparent;
	color: transparent;
}
.smear {
	color: transparent;
	text-shadow:
		0em    0em 0.02em rgba(255,255,255,0.75),
		-0.2em 0em 0.5em  rgba(255,255,255,0.5),
		0.2em  0em 0.5em  rgba(255,255,255,0.5);
}
.mirror {
	display: inline-block;
	transform: scaleX(-1);
	-webkit-transform: scaleX(-1);
}
.upside-down {
	display: inline-block;
	transform: scaleY(-1);
	-webkit-transform: scaleY(-1);
}

@-webkit-keyframes fade-in-out {
	0%,
	to {opacity: 0}
	50% {opacity: 1}
}
@keyframes fade-in-out {
	0%,
	to {opacity: 0}
	50% {opacity: 1}
}
.fade-in-out {
	text-decoration: none;
	animation: fade-in-out 2s ease-in-out infinite alternate;
	-webkit-animation: fade-in-out 2s ease-in-out infinite alternate;
}

@-webkit-keyframes rumble {
	50% {
		-webkit-transform: translateY(-.2em);
		transform: translateY(-.2em)
	}
}
@keyframes rumble {
	50% {
		-webkit-transform: translateY(-.2em);
		transform: translateY(-.2em)
	}
}
.rumble {
	-webkit-animation: rumble linear 0.1s 0s infinite;
	animation: rumble linear 0.1s 0s infinite;
	display:inline-block;
}

@-webkit-keyframes shudder {
	50% {
		-webkit-transform: translateX(0.2em);
		transform: translateX(0.2em)
	}
}
@keyframes shudder {
	50% {
		-webkit-transform: translateX(0.2em);
		transform: translateX(0.2em)
	}
}
.shudder {
	-webkit-animation: shudder linear 0.1s 0s infinite;
	animation: shudder linear 0.1s 0s infinite;
	display: inline-block;
}

/* Font Size Buttons - Start */
.fullscreenImg {
	cursor: pointer;
	transition: 0.3s;
	border-radius: 3px;
	position: absolute;
	top: 40px;
	left: 252px;
	vertical-align: text-bottom;
	height: 25px;
	visibility: visible;
}
.fullscreenImg:hover {
	background: #444444;
}
#story {
	margin-left: 320px;
	margin-right: 320px;
}
@media screen and (max-width: 1136px) {
	#story {
		margin-left: 290px;
		margin-right: 24px;
	}
	#ui-bar.stowed~#story {
		margin-left: 42px;
	}
}
/* Font Size Buttons - End */

#HuDHr {
    border: 0;                   /* Removes default border */
    height: 1px;                 /* Sets the height of the line */
    background-color: #444;      /* Sets the color of the line */
    margin: 0;                   /* Removes default margin/padding */
}

.smallHudFont {
    font-size: 14px;
    line-height: 0.5;    /* Adjusts the line spacing; 1.5 is a common value, but you can customize it */
    border: 0;           /* Removes default border */
    height: 1px;         /* Sets the height of the line */
    background-color: #444; /* Sets the color of the line */
    margin: 0;           /* Removes default margin/padding */
}


.maincomputer.say p {
    color: lightblue;
}

/* Toggle Switch - Start */
.toggle-wrapper {
	position: relative;
	top: 8px;
	width: 91px;
	height: 29px;
	display: inline-flex;
}
.rect_1 {
	position: absolute;
	left: 4px;
	top: 4px;
	width: 80px;
	height: 20px;
	background-color: #d6503a;
	border-radius: 9px;
	box-shadow: 0 0 1px 0px #e1e1e1;
	overflow: hidden;
	transition: all 0.3s;
	will-change: background-color;
}
.rect_1_inset {
	position: absolute;
	left: 32px;
	top: -4px;
	width: 48px;
	height: 28px;
	background-color: #3362a8;
	background-image: linear-gradient(to top, #b6b8b3 0%, #b6b8b3 18%, #e1e2e1 62%, #e1e2e1 74%, #e1e2e1 100%, #e1e2e1 100%);
	border-radius: 16px;
	box-shadow: inset 0 0 2px rgba(255,255,255,0.35);
	transition: all 0.2s;
	will-change: transform;
}
.rect_2 {
	position: absolute;
	left: 0;
	top: 0;
	width: 84px;
	height: 22px;
	background-color: #3362a8;
	background-image: linear-gradient(to right, #cbcbcb 0%, #cbcbcb 0%, #cdcdcd 100%);
	border: 3px solid #e4e4e3;
	border-radius: 14px;
}
.rect_3 {
	position: absolute;
	left: 4px;
	top: 4px;
	width: 80px;
	height: 20px;
	border-radius: 10px;
	background-color: rgba(0,0,0,0);
	box-shadow: inset 0 5px 25px 0 rgba(0,0,0,0.6);
}
.toggle_handler {
	position: absolute;
	left: 39px;
	top: 3px;
	width: 48px;
	height: 22px;
	background-color: #3362a8;
	background-image: linear-gradient(to top, #bfbfbe 0%, #e1e2e1 64%, #f3f3f3 77%, #f3f3f3 100%, #f3f3f3 100%);
	border-radius: 11px;
	box-shadow: inset 0 0 2px rgba(255,255,255,0.35), 0 3px 3px rgba(0,0,0,0.5), 0 0 3px rgba(0,0,0,0.5);
	transition: all 0.2s;
	will-change: transform;
}
.toggle_ellipse {
	position: absolute;
	left: 28px;
	top: 4px;
	width: 14px;
	height: 14px;
	border-radius: 50%;
	background-color: #3362a8;
	background-image: linear-gradient(to top, #e1e2e1 0%, #e1e2e1 0%, #b6b8b3 100%, #c1c1c1 100%);
}
.toggle-wrapper.pushed .toggle_handler {
	-webkit-transform: translate3d(-75%, 0, 0);
	transform: translate3d(-75%, 0, 0);
}
.toggle-wrapper.pushed .rect_1_inset {
	-webkit-transform: translate3d(-60%, 0, 0) scale(1, 1);
	transform: translate3d(-60%, 0, 0) scale(1, 1);
}
.toggle-wrapper.pushed .rect_1 {
	background-color: #4fade3;
}
/* Toggle Switch - End */

/* Stylesheet section of your Twine project: */

/* Style for the map widget header */
#map-widget-header {
    text-align: center;
    cursor: pointer;
    font-weight: bold;
    font-size: 1.2em;
    margin-bottom: 10px;
}

/* Stylesheet section of your Twine project: */

/* Style for the map widget header */
#map-widget-header {
    text-align: center;
    cursor: pointer;
    font-weight: bold;
    font-size: 1.2em;
    margin-bottom: 10px;
 	Display: none;
}

/* Style for the map image, centered */
#map-image {
    display: block;
    margin: 0 auto; /* Center align the image */
    max-width: 80%; /* Ensure image is not larger than the container */
    height: 312px;
    margin-bottom: 10px;
}

/* Style for the horizontal rule specific to the map widget */
#map-widget-header + hr,
#map-image-container + hr {
    border: none;
    height: 1px;
    background-color: #ccc;
    margin: 10px 0;
}

/* Custom CSS for the mini area image container */
#miniarea-image-container {
    text-align: center; /* Center the image within the container */
    padding: 0px; /* Spacing around the image */
    border: 2px solid black; /* A light border around the container */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Slight shadow for depth */
    margin-bottom: 2px; /* Space below the container */
    /* More styles can be added as needed */
}

#miniarea-image-container img {
    max-width: 100%; /* Ensure the image fits within the container */
    height: auto; /* Maintain the aspect ratio */
    /* Add more styles for the img element if needed */
}

/* In your Story Stylesheet */
.hidden {
    display: none;
}

/* Style for the visible state of the debug controls for added clarity */
#debug-controls.visible {
    display: block; /* or 'flex', 'grid', etc., depending on your layout needs */
    /* Other styles for your debug controls when they are visible */
}

/* Horizontal Health Bar - Start */
.hzbarbkg {  /* default class for all horizontal bar backgrounds */
    position: relative;
    height: 1px;
    width: 100%;
    background-color: #111;
    border-radius: 0px;
    z-index: 10;
    visibility: visible;
}
.hzbar {  /* default class for all horizontal bars */
    position: absolute;
    bottom: 0px;
    left: 0px;
    height: 1px;
    border-radius: 10px;
    z-index: 20;
    transition: width ease 1s, background-color ease 1s;
}
/* Horizontal Health Bar - End */

/* SlideWin styling v1.0 */
body.slideWin {
	overflow: hidden;
}
#slideWin {
	position: fixed;
	top: 0;
	-webkit-transform: translateX(-101vw);
	   -moz-transform: translateX(-101vw);
		-ms-transform: translateX(-101vw);
		 -o-transform: translateX(-101vw);
			transform: translateX(-101vw);
	stroke-width: 101px;  /* Used for animation trick on the transform property. */
	width: 80.1vw;
	height: calc(100vh - 30px);
	padding: 30px 10vw;
	overflow: hidden auto;
	background-color: rgba(17, 17, 17, 0.97);
	line-height: 1.75;
	z-index: 100;
}
#slideWin:focus {
	outline: none;
}
#slideWinContent {
	position: relative;
	top: -46px;
	padding: 24px;
	background-color: #222;
}
.ur {  /* Upper-right "close" button */
	position: sticky;
	top: 10px;
	left: calc(80.1vw - 56px);
	width: 26px;
	height: 26px;
	margin: 10px;
	color: black;
	cursor: pointer;
	line-height: 14px;
	-webkit-box-shadow: 1px 3px 0px 0px grey;
	   -moz-box-shadow: 1px 3px 0px 0px grey;
			box-shadow: 1px 3px 0px 0px grey;
	border: 1px solid #5F5F5F;
	border-collapse: separate;
	font-weight: bold;
	background-color: #FFFFFF;
	-webkit-border-radius: 13px;
	   -moz-border-radius: 13px;
			border-radius: 13px;
	z-index: 101;
}
.ur:hover {
	background-color: #FFFFFF;
	border-color: #5F5F5F;
}
.ur:focus, .ur:hover {
	outline: transparent;
	-webkit-animation: pulsing-glow-white 1s linear infinite alternate;
	   -moz-animation: pulsing-glow-white 1s linear infinite alternate;
		 -o-animation: pulsing-glow-white 1s linear infinite alternate;
			animation: pulsing-glow-white 1s linear infinite alternate;
}
.ur:active {
	top: 2px;
	-webkit-box-shadow: none !important;
	   -moz-box-shadow: none !important;
			box-shadow: none !important;
}
@-webkit-keyframes pulsing-glow-white {
	0% {
		-webkit-box-shadow: 1px 3px 0px 0px grey, 0 2px 20px rgb(255, 255, 255), inset 0 2px 10px rgb(255, 255, 255);
				box-shadow: 1px 3px 0px 0px grey, 0 2px 20px rgb(255, 255, 255), inset 0 2px 10px rgb(255, 255, 255);
	}
	100% {
		-webkit-box-shadow: 1px 3px 0px 0px grey, 0 2px 5px rgba(255, 255, 255, 0), inset 0 2px 5px rgb(26, 3, 3);
				box-shadow: 1px 3px 0px 0px grey, 0 2px 5px rgba(255, 255, 255, 0), inset 0 2px 5px rgb(26, 3, 3);
	}
}
@-moz-keyframes pulsing-glow-white {
	0% {
		-webkit-box-shadow: 1px 3px 0px 0px grey, 0 2px 20px rgb(255, 255, 255), inset 0 2px 10px rgb(255, 255, 255);
		   -moz-box-shadow: 1px 3px 0px 0px grey, 0 2px 20px rgb(255, 255, 255), inset 0 2px 10px rgb(255, 255, 255);
				box-shadow: 1px 3px 0px 0px grey, 0 2px 20px rgb(255, 255, 255), inset 0 2px 10px rgb(255, 255, 255);
	}
	100% {
		-webkit-box-shadow: 1px 3px 0px 0px grey, 0 2px 5px rgba(255, 255, 255, 0), inset 0 2px 5px rgb(26, 3, 3);
		   -moz-box-shadow: 1px 3px 0px 0px grey, 0 2px 5px rgba(255, 255, 255, 0), inset 0 2px 5px rgb(26, 3, 3);
				box-shadow: 1px 3px 0px 0px grey, 0 2px 5px rgba(255, 255, 255, 0), inset 0 2px 5px rgb(26, 3, 3);
	}
}
@-o-keyframes pulsing-glow-white {
	0% {
		-webkit-box-shadow: 1px 3px 0px 0px grey, 0 2px 20px rgb(255, 255, 255), inset 0 2px 10px rgb(255, 255, 255);
				box-shadow: 1px 3px 0px 0px grey, 0 2px 20px rgb(255, 255, 255), inset 0 2px 10px rgb(255, 255, 255);
	}
	100% {
		-webkit-box-shadow: 1px 3px 0px 0px grey, 0 2px 5px rgba(255, 255, 255, 0), inset 0 2px 5px rgb(26, 3, 3);
				box-shadow: 1px 3px 0px 0px grey, 0 2px 5px rgba(255, 255, 255, 0), inset 0 2px 5px rgb(26, 3, 3);
	}
}
@keyframes pulsing-glow-white {
	0% {
		-webkit-box-shadow: 1px 3px 0px 0px grey, 0 2px 20px rgb(255, 255, 255), inset 0 2px 10px rgb(255, 255, 255);
		   -moz-box-shadow: 1px 3px 0px 0px grey, 0 2px 20px rgb(255, 255, 255), inset 0 2px 10px rgb(255, 255, 255);
				box-shadow: 1px 3px 0px 0px grey, 0 2px 20px rgb(255, 255, 255), inset 0 2px 10px rgb(255, 255, 255);
	}
	100% {
		-webkit-box-shadow: 1px 3px 0px 0px grey, 0 2px 5px rgba(255, 255, 255, 0), inset 0 2px 5px rgb(26, 3, 3);
		   -moz-box-shadow: 1px 3px 0px 0px grey, 0 2px 5px rgba(255, 255, 255, 0), inset 0 2px 5px rgb(26, 3, 3);
				box-shadow: 1px 3px 0px 0px grey, 0 2px 5px rgba(255, 255, 255, 0), inset 0 2px 5px rgb(26, 3, 3);
	}
}

/* SugarCube's built-in Font Awesome icons - Start */
.sc-fa {
	font-family: tme-fa-icons;
	font-style: normal;
	font-weight: 400;
	font-variant: normal;
	text-transform: none;
	line-height: 1;
	speak: none;
}
.sc-icon {
	padding-left: 4px;
}
.sc-icon::before {
	font-family: tme-fa-icons;
	font-style: normal;
	font-weight: 400;
	font-variant: normal;
	text-transform: none;
	line-height: 1;
	speak: none;
}
.sc-plus::before {
	content: "\e805\00a0";
}
.sc-minus::before {
	content: "\e806\00a0";
}
.sc-caret-down::before {
	content: "\e818\00a0";
}
.sc-caret-left::before {
	content: "\e819\00a0";
}
.sc-caret-right::before {
	content: "\e81a\00a0";
}
.sc-caret-up::before {
	content: "\e81b\00a0";
}
.sc-toggle-off::before {
	content: "\e830\00a0";
}
.sc-toggle-on::before {
	content: "\e831\00a0";
}
.sc-checkbox-on::before {
	content: "\e832\00a0";
}
.sc-checkbox-off::before {
	content: "\e833\00a0";
}
.sc-radiobutton-off::before {
	content: "\e834\00a0";
}
.sc-radiobutton-on::before {
	content: "\e835\00a0";
}
/* SugarCube's built-in Font Awesome icons - End */