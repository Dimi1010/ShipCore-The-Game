:: widget music [widget nobr] {"position":"50,775","size":"100,100"}
<<widget "PlayTrack">>
    <<script>>
      window.currentTrackTimeout = null;
      window.currentTrack = null;

      window.setupTrackEndCallback = function(track) {
          var trackObj = SimpleAudio.tracks.get(track);
          var trackDuration = trackObj.duration();
          if (window.currentTrack){
              var currentTrackObj = SimpleAudio.tracks.get(window.currentTrack);
              currentTrackObj.stop();
              window.currentTrack = null;
          }
          if (window.currentTrackTimeout !== null) {
              clearTimeout(window.currentTrackTimeout);
              window.currentTrackTimeout = null;
          }

          window.currentTrackTimeout = setTimeout(function() {
              var nextTrackIndex;
              var nextTrack;

              /* Get a filtered list of tracks excluding the current one */
              var filteredSongList = setup.songList.filter(function(t) { return t !== track; });

              /* Select a random track from the filtered list */
              nextTrackIndex = Math.floor(Math.random() * filteredSongList.length);
              nextTrack = filteredSongList[nextTrackIndex];

              /* Play the random track */
              SimpleAudio.tracks.get(nextTrack).play();
              window.currentTrack = nextTrack;
              /* window.setupTrackEndCallback(filteredSongList[nextTrackIndex]); */
          }, trackDuration * 1000 + 1000);
          console.log("Playing next track in " + (trackDuration * 1000 + 1000) + "ms after we are finished playing " + track);
      };
      <</script>>
    /* If a track ID is passed as an argument, update the current song index */
    <<if $args[0]>>
    <<set setup.currentSongIndex to $args[0]>>
    <</if>>

    /* Get the current track ID */
    <<set _nextTrack to setup.songList[setup.currentSongIndex]>>

    /* Check if the track exists and is not currently playing */
    <<if TrackExists(_nextTrack) and not isPlaying(_nextTrack)>>
    /* Stop all playing audio */
    <<masteraudio stop>>
    /* Play the current track */
    <<audio _nextTrack volume 0.2 play>>
    <<run window.setupTrackEndCallback(_nextTrack)>>
    <</if>>
<</widget>>
