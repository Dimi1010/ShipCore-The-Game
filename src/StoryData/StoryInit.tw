:: StoryInit {"position":"175,175","size":"100,100"}
/* In your StoryInit passage or JavaScript section */
<<set setup.songList = ["music1", "music2", "music3", "music4", "music5"]>>
<<set setup.currentSongIndex = 0>>
<<set $LastHomeZone to "Cold Storage">>


<<set $eventStack to []>>

/*
	Date & Time Widget Setup
*/
<<set
	window.GameDays to [
		"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"
	];
	window.GameMonths to [
		"Jan", "Feb", "Mar", "Apr", "May", "Jun",
		"Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
	];

	/*
		Below we have to use the multi-parameter version of the Date
		constructor, rather than the date string version, because the
		date string version treats a missing timezone offset as UTC.
		While there are ways to determine players' timezone offsets,
		so they could be added to a date string, it's more convenient
		simply to use the multi-parameter constructor.

		The point of this is so that you can simply initialize the game
		world clock to whatever date and time you wish without having to
		worry about the players' timezone offsets, while still ensuring
		that they all see the same game world dates and times.
	*/
	/* params: year , month(0-based) , day , hour(24H) , minute [, second ] */
	$gameDate to new Date(3562, 2, 17, 3, 24); /* e.g. Mar 17, 3562 03:24 */
>>

<<script>>
setup.statInversed = {
    "health": false,
    "mood": false,
    "stress": true,
    "trauma": true,
    "fatigue": true,
    "filth": true,
    "powerReserves": false,
    "credits": false,
    "debt": true,
    // Add more stats as needed
};
<</script>>

<<script>>
setup.statNames = {
    "health": "Health",
    "mood": "Mood",
    "stress": "Stress",
    "trauma": "Trauma",
    "fatigue": "Fatigue",
    "filth": "Filth",
    "powerReserves": "Power Reserves",
    "credits": "Credits",
    "debt": "Debt",
    // Add more stats as needed
};
<</script>>

<<set setup.LowerDeckLocations = {
    "Lower Deck Promenade": [8, 9, 3, 7, 8],
    "Habitation Cells": [5, 5, 4, 4, 6],
    "Lower Wharf": [7, 8, 5, 6, 7],
    "Station Infrastructure": [3, 7, 2, 5, 5],
    "Lower Observation Deck": [6, 4, 1, 3, 4],
    "Forgotten Slums": [2, 3, 9, 2, 3],
    "Cold Storage": [4, 6, 3, 5, 6],
    "Black Market Bazaar": [9, 7, 6, 8, 9]
}>>

<<set $playerConsumables = {
    'nanoDocInjector': 0,
    'euphorixVape': 0,
    'zenithPulse': 0,
    'psycheLockCapsule': 0,
    'vigorMaxShot': 0,
    'puriDermSpray': 0,
    'energyCellBoost': 0
}>>

<<set $playerConsumablesTracker = {
    'nanoDocInjector': 0,
    'euphorixVape': 0,
    'zenithPulse': 0,
    'psycheLockCapsule': 0,
    'vigorMaxShot': 0,
    'puriDermSpray': 0,
    'energyCellBoost': 0
}>>

<!-- In StoryInit Passage -->
<<set $showDebugControls = false>>

<<set $areaImages to {
    "lowerdecks": "lowerdecks.jpg",
    "middecks": "middecks.jpg",
    "upperdecks": "upperdecks.jpg",
    "default": "default.jpg"
}>>

/* music stuff */
<<set _bgm = setup.SoundPath + "music1.mp3">>
<<cacheaudio "music1" _bgm>>
<<set _bgm = setup.SoundPath + "music2.mp3">>
<<cacheaudio "music2" _bgm>>
<<set _bgm = setup.SoundPath + "music3.mp3">>
<<cacheaudio "music3" _bgm>>
<<set _bgm = setup.SoundPath + "music4.mp3">>
<<cacheaudio "music4" _bgm>>
<<set _bgm = setup.SoundPath + "music5.mp3">>
<<cacheaudio "music5" _bgm>>

setup.currentSongIndex = 0; // Start with the first song
setup.songList = ["music1", "music2", "music3", "music4", "music5"]; // List of songs


<<setSidebarBackground setup.ImagePath+'/uisidebar.jpg'>>

/* Initialize the player's portrait path in StoryInit */
<<set $playerPortraitPath = setup.ImagePath + '/characters/playerN/playerN.jpg'>>

/* creating MAIN CHARACTERS and associating them with images (goes in StoryInit) */
<<character 'maincomputer' 'MainComputer' setup.ImagePath+'/characters/maincomputer/maincomputer.jpg'>>
/* using the generated macros in passages */

/* variable names raw
$lowerdecksParts
$lowerdecksScrap
$lowerdecksCyberware
$lowerdecksStolenItems
$lowerdecksContraband
$lowerdecksFabricatorHopperScrap
$lowerdecksFabricatorHopperParts
$lowerdecksEnergyFeeCredits
$lowerdecksFabricatorCyberware
*/

/* Breakdown Areas */
<<set setup.breakdownEvents = {
    "lowerdecks": "lowerdeckKO",
    "middecks": "middeckKO",
    "upperdecks": "upperdeckKO",
    "default": "defaultKO"
}>>


/* LOWER DECKS SETUP */
<<set $docksideStats = {
    partsFabricated: 0,
    scrapBought: 0,
    partsSold: 0
}>>

<<set setup.itemVariables = {
    'parts': 'lowerdecksParts',
    'scrap': 'lowerdecksScrap',
    'cyberware': 'lowerdecksCyberware',
    'stolenItems': 'lowerdecksStolenItems',
    'contraband': 'lowerdecksContraband',
    'blackmarketactivity': 'lowerdeckBlackActivity'
}>>

<<set $LowerDecksBusinessTypeStats = {
    "Space Bar and Lounge": {
        "EmployeesPerUpgrade": 5,
        "EmployeeCost": 10,
        "InputCosts": { "Food": 2, "Water": 1 },
        "BasePriceOfOutput": 50,
        "CyclesPerHour": 4,
        "BatchSize": 10
    },
    "Hydroponic Farm": {
        "EmployeesPerUpgrade": 3,
        "EmployeeCost": 8,
        "InputCosts": { "Minerals": 3, "Water": 2 },
        "BasePriceOfOutput": 40,
        "CyclesPerHour": 3,
        "BatchSize": 25
    },
    "Scrap Reprocessing": {
        "EmployeesPerUpgrade": 2,
        "EmployeeCost": 12,
        "InputCosts": { "Scrap": 5 },
        "BasePriceOfOutput": 60,
        "CyclesPerHour": 2,
        "BatchSize": 10
    }
}>>

/* SugarCube StoryInit Special Passage */

<<set $LowerDecksPlayerBusinessTotalInputCostsForOneBatch = 0>>
<<set $LowerDecksPlayerBusinessPriceOfOutput = 0>>
<<set $LowerDecksPlayerBusinessAdjustedPricePerUnit = 0>>
<<set $LowerDecksPlayerBusinessTotalSalesPriceForAllBatches = 0>>
<<set $LowerDecksPlayerBusinessTotalEmployeeCostPerHour = 0>>
<<set $LowerDecksPlayerBusinessProfitMarginPerHour = 0>>


<<set $LowerDecksPlayerBusinessBatchSize to 0>>
<<set $LowerDecksPlayerBusinessEmployeesPerUpgrade to 0>>
<<set $LowerDecksPlayerBusinessCustomerAvailability to 0>>
<<set $LowerDecksPlayerBusinessSupplyHubAccess to 0>>
<<set $LowerDecksPlayerBusinessDangerLevel to 0>>
<<set $LowerDecksPlayerBusinessTaxRate to 0>>
<<set $LowerDecksPlayerBusinessAdjustedPricePerUnit to 0>>
<<set $LowerDecksPlayerBusinessTotalSalesPriceForAllBatches to 0>>
<<set $LowerDecksPlayerBusinessTotalInputCostsForOneBatch to 0>>
<<set $LowerDecksPlayerBusinessTotalEmployeeCostPerHour to 0>>
<<set $LowerDecksPlayerBusinessProfitMarginPerHour to 0>> 
<<set $LowerDecksPlayerBusinessTotalInputCostsForOneBatch = 0>>
<<set $LowerDecksPlayerBusinessPriceOfOutput = 0>>
<<set $LowerDecksPlayerBusinessAdjustedPricePerUnit = 0>>
<<set $LowerDecksPlayerBusinessTotalSalesPriceForAllBatches = 0>>
<<set $LowerDecksPlayerBusinessTotalEmployeeCostPerHour = 0>>
<<set $LowerDecksPlayerBusinessProfitMarginPerHour = 0>>

<<set $LeinaDojoRep = 0>>
<<set $LowerDecksCurrentScoutLocation = "">> <!-- Initialize the variable to store the current scout location -->
<<set $LowerDecksBusinessLocation = "">> <!-- Initialize the variable for the selected business location -->
<<set $LowerDecksFinalBusinessStats = {}>> <!-- Initialize an object to store the final business stats -->
<<set $LowerDecksCurrentScoutLocation = "">>
<<set $LowerDecksSelectedBusinessLocation = "">>
<<set $LowerDecksFinalBusinessStats = {}>>
<<set $LowerDecksPlayerBusinessName to "Undefined Business">>
<<set $DaltonIsCompanion to false>>
<<set $JaxIsCompanion to false>>
<<set $businessLocation to "Lower Deck Promenade">>
<<set $playerBusinessNameInput to "">>
<<set $LowerDecksBusinessStats to {}>>
<<set $LowerDecksBusinessType to "Space Bar and Lounge">>
<<set $lowerdeckBlackActivity to 0>>
<<set $lowerdecksRep to 0>>
<<set $LockboxHubSpecialRequests to false>>
<<set $lowerdecksParts to 0>>
<<set $lowerdecksScrap to 0>>
<<set $lowerdecksCyberware to 0>>
<<set $lowerdecksStolenItems to 0>>
<<set $lowerdecksContraband to 0>>
<<set $lowerdecksFabricatorHopperScrap>>
<<set $lowerdecksFabricatorHopperParts>>
<<set $lowerdecksEnergyFeeCredits>>
<<set $lowerdecksFabricatorCyberware>>
<<set $HavenApartmentState to "none">>
<<set $currentArea to "lowerdecks">> 
<<set $lowerdecksFabricatorHopperScrap to 0>>
<<set $lowerdecksFabricatorHopperParts to 0>>
<<set $lowerdecksEnergyFeeCredits to 0>>
<<set $lowerdecksFabricatorCyberware to 0>>

<<set $LowerDeckBusinessTypes = ["Space Bar and Lounge", "Hydroponic Farm", "Scrap Reprocessing"]>>
<<set $currentBusinessIndex = 0>>

/* LOWER DECK NPCS */
/* Grafter */
<<set $GrafterTalked to 0>>
<<set $GrafterCyberTalk to 0>>

<<set $talkedToManager = false>>
<<set $introColdExit = 0>>
<<set $GrafterIsCompanion = false>> /* false if not a companion, true if is a companion */
<<set $JaxIsCompanion = false>> /* false if not a companion, true if is a companion */


/* LOWER DECK BUSINESS */

<<set $LowerDecksPlayerBusinessScouted = 0>> /* Increment as player scouts new locations */
<<set $LowerDecksPlayerBusinessLongDesc = "">> /* Initialize with an empty string or a default description */

/* AREA SETUP */
<<set setup.areaEvents = {
    "lowerdecks": ["LowerEvent1", "LowerEvent2", "LowerEvent3", "LowerEvent4", "LowerEvent5", "LowerEvent6", "LowerEvent7"],
    "middecks": ["MidEvent1", "MidEvent2", "MidEvent3"],
    "upperdecks": ["UpperEvent1", "UpperEvent2", "UpperEvent3"]
}>>

<<set $currentArea to "default">>

/* SETTING UP BASE DIFFICULTY */
<<set $worldEconomyScore to 700>>  <!-- Sets the initial state of the game's economy. A score of 700 represents a stable economy. Higher values indicate more prosperity, lower values indicate economic struggles. -->
<<set $combinedDifficultyScore to 7>>
<<set $dangerLevelScore to 700>>   <!-- Determines the initial level of danger in the game. A score of 700 suggests moderate danger. Higher scores indicate a safer environment, while lower scores indicate increased danger and risk. -->

/* INTITIALIZING PLAYER */
<<set $player to {
    name: "Unknown",  // Name entered by the player
    gender: 1,  // 1 for male, 2 for female, 3 for gender-neutral
    skinColor: 1, // 1 for light, 2 for olive, etc.
    hairColor: 1,  // 1 for black, 2 for blonde, etc.
    hairLength: 1,  // 1 for short, 2 for medium-length, etc.
    eyeColor: 1,  // 1 for blue, 2 for green, etc.
    build: 1,  // 1 for slender and soft, 2 for slender and toned, etc.
    height: 1,  // 1 for short, 2 for average height, 3 for tall
    distinctiveFeature: 1,  // 1 for freckles, 2 for a scar, etc.
    appearance: 1,  // 1 for rugged, 2 for elegant, etc.
    health: 1000,  // Initial health
    mood: 500,    // Initial mood
    stress: 455,  // Initial stress
    trauma: 455,  // Initial trauma
    fatigue: 0, // Initial fatigue
    filth: 0, //starting player clean, removed by shower etc
    powerReserves: 750, // Initial power reserves
    inventory: [],  // Empty inventory
    carcinogen: 0, // penalty for using boosters
    credits: 0,  // Initial credits
    debt: 50000 // Initial Debt
}>>

/* We use $timeadd at the end of a passage to show how long it will take to go somewhere, and then when entering passages use addmins $timeadd to increase time */

<<set $timeadd to 0>>

/* In each location we set whether it is outside, in a vacuum, and has controlled temperature, we'll use these to check against gear and if the player doesn't have appropriate measures, then they are penalized */

<<set $location to {
    name: "Unknown",
    outside: false,
    vacuum: false,
    temperature: true
}>>

<<set $player.gender to 1>>
<<playerp>>


<<set $currentImageIndex = 0>>
<<set $playerGenderA to 1>>
<<set $playerGender to 1>>


<<set $playerGenderA to 1>> <!-- Default gender value to "Man" -->

